{"version":3,"file":"component---src-templates-category-template-tsx-5fe8d70f5acb3c3ae8f3.js","mappings":"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","sources":["webpack://yeppyshiba-blog/./src/templates/CategoryTemplate.tsx","webpack://yeppyshiba-blog/./node_modules/lodash/_asciiToArray.js","webpack://yeppyshiba-blog/./node_modules/lodash/_baseSlice.js","webpack://yeppyshiba-blog/./node_modules/lodash/_castSlice.js","webpack://yeppyshiba-blog/./node_modules/lodash/_createCaseFirst.js","webpack://yeppyshiba-blog/./node_modules/lodash/_hasUnicode.js","webpack://yeppyshiba-blog/./node_modules/lodash/_stringToArray.js","webpack://yeppyshiba-blog/./node_modules/lodash/_unicodeToArray.js","webpack://yeppyshiba-blog/./node_modules/lodash/capitalize.js","webpack://yeppyshiba-blog/./node_modules/lodash/upperFirst.js"],"sourcesContent":["import React, { FunctionComponent } from 'react';\nimport { graphql } from 'gatsby';\nimport { ArticleList } from '@/components/article';\nimport { Header, Layout, Pagination, StoryHeader } from '@/components/common';\nimport { ListTemplateProps } from '@/types';\nimport { capitalize, kebabCase } from 'lodash';\n\n// markup\nconst CategoryTemplate: FunctionComponent<ListTemplateProps> = ({ errors, data, pageContext, ...props }) => {\n  if (errors || !data) {\n    // error handles\n    console.log(errors);\n    return <>TODO errors</>;\n  }\n\n  const {\n    site: {\n      siteMetadata: { title },\n    },\n    allMdx: { edges },\n  } = data;\n  const { slug } = pageContext;\n  const entries = edges.map((edge) => edge.node);\n\n  return (\n    <Layout title={`${capitalize(slug)} Category Stories`}>\n      <Header title={title} />\n      <StoryHeader title={`${capitalize(slug)} Category`} />\n      <ArticleList entries={entries} />\n      <Pagination {...pageContext} prefix={`/category/${kebabCase(slug)}/`} prev={'Newer'} next={'Older'} />\n    </Layout>\n  );\n};\n\nexport default CategoryTemplate;\n\nexport const getCategoryList = graphql`\n  query getCategoryList($slug: String, $skip: Int!, $limit: Int!) {\n    site {\n      siteMetadata {\n        title\n        description\n        siteUrl\n      }\n    }\n    allMdx(\n      sort: { order: DESC, fields: [frontmatter___date] }\n      limit: $limit\n      skip: $skip\n      filter: { frontmatter: { category: { eq: $slug } } }\n    ) {\n      edges {\n        node {\n          id\n          fields {\n            totalCount\n          }\n          frontmatter {\n            title\n            date\n            image\n            embeddedImagesLocal {\n              childImageSharp {\n                gatsbyImageData\n              }\n            }\n            category\n            tags\n            summary\n          }\n          slug\n        }\n      }\n    }\n  }\n`;\n","/**\n * Converts an ASCII `string` to an array.\n *\n * @private\n * @param {string} string The string to convert.\n * @returns {Array} Returns the converted array.\n */\nfunction asciiToArray(string) {\n  return string.split('');\n}\n\nmodule.exports = asciiToArray;\n","/**\n * The base implementation of `_.slice` without an iteratee call guard.\n *\n * @private\n * @param {Array} array The array to slice.\n * @param {number} [start=0] The start position.\n * @param {number} [end=array.length] The end position.\n * @returns {Array} Returns the slice of `array`.\n */\nfunction baseSlice(array, start, end) {\n  var index = -1,\n      length = array.length;\n\n  if (start < 0) {\n    start = -start > length ? 0 : (length + start);\n  }\n  end = end > length ? length : end;\n  if (end < 0) {\n    end += length;\n  }\n  length = start > end ? 0 : ((end - start) >>> 0);\n  start >>>= 0;\n\n  var result = Array(length);\n  while (++index < length) {\n    result[index] = array[index + start];\n  }\n  return result;\n}\n\nmodule.exports = baseSlice;\n","var baseSlice = require('./_baseSlice');\n\n/**\n * Casts `array` to a slice if it's needed.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {number} start The start position.\n * @param {number} [end=array.length] The end position.\n * @returns {Array} Returns the cast slice.\n */\nfunction castSlice(array, start, end) {\n  var length = array.length;\n  end = end === undefined ? length : end;\n  return (!start && end >= length) ? array : baseSlice(array, start, end);\n}\n\nmodule.exports = castSlice;\n","var castSlice = require('./_castSlice'),\n    hasUnicode = require('./_hasUnicode'),\n    stringToArray = require('./_stringToArray'),\n    toString = require('./toString');\n\n/**\n * Creates a function like `_.lowerFirst`.\n *\n * @private\n * @param {string} methodName The name of the `String` case method to use.\n * @returns {Function} Returns the new case function.\n */\nfunction createCaseFirst(methodName) {\n  return function(string) {\n    string = toString(string);\n\n    var strSymbols = hasUnicode(string)\n      ? stringToArray(string)\n      : undefined;\n\n    var chr = strSymbols\n      ? strSymbols[0]\n      : string.charAt(0);\n\n    var trailing = strSymbols\n      ? castSlice(strSymbols, 1).join('')\n      : string.slice(1);\n\n    return chr[methodName]() + trailing;\n  };\n}\n\nmodule.exports = createCaseFirst;\n","/** Used to compose unicode character classes. */\nvar rsAstralRange = '\\\\ud800-\\\\udfff',\n    rsComboMarksRange = '\\\\u0300-\\\\u036f',\n    reComboHalfMarksRange = '\\\\ufe20-\\\\ufe2f',\n    rsComboSymbolsRange = '\\\\u20d0-\\\\u20ff',\n    rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange,\n    rsVarRange = '\\\\ufe0e\\\\ufe0f';\n\n/** Used to compose unicode capture groups. */\nvar rsZWJ = '\\\\u200d';\n\n/** Used to detect strings with [zero-width joiners or code points from the astral planes](http://eev.ee/blog/2015/09/12/dark-corners-of-unicode/). */\nvar reHasUnicode = RegExp('[' + rsZWJ + rsAstralRange  + rsComboRange + rsVarRange + ']');\n\n/**\n * Checks if `string` contains Unicode symbols.\n *\n * @private\n * @param {string} string The string to inspect.\n * @returns {boolean} Returns `true` if a symbol is found, else `false`.\n */\nfunction hasUnicode(string) {\n  return reHasUnicode.test(string);\n}\n\nmodule.exports = hasUnicode;\n","var asciiToArray = require('./_asciiToArray'),\n    hasUnicode = require('./_hasUnicode'),\n    unicodeToArray = require('./_unicodeToArray');\n\n/**\n * Converts `string` to an array.\n *\n * @private\n * @param {string} string The string to convert.\n * @returns {Array} Returns the converted array.\n */\nfunction stringToArray(string) {\n  return hasUnicode(string)\n    ? unicodeToArray(string)\n    : asciiToArray(string);\n}\n\nmodule.exports = stringToArray;\n","/** Used to compose unicode character classes. */\nvar rsAstralRange = '\\\\ud800-\\\\udfff',\n    rsComboMarksRange = '\\\\u0300-\\\\u036f',\n    reComboHalfMarksRange = '\\\\ufe20-\\\\ufe2f',\n    rsComboSymbolsRange = '\\\\u20d0-\\\\u20ff',\n    rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange,\n    rsVarRange = '\\\\ufe0e\\\\ufe0f';\n\n/** Used to compose unicode capture groups. */\nvar rsAstral = '[' + rsAstralRange + ']',\n    rsCombo = '[' + rsComboRange + ']',\n    rsFitz = '\\\\ud83c[\\\\udffb-\\\\udfff]',\n    rsModifier = '(?:' + rsCombo + '|' + rsFitz + ')',\n    rsNonAstral = '[^' + rsAstralRange + ']',\n    rsRegional = '(?:\\\\ud83c[\\\\udde6-\\\\uddff]){2}',\n    rsSurrPair = '[\\\\ud800-\\\\udbff][\\\\udc00-\\\\udfff]',\n    rsZWJ = '\\\\u200d';\n\n/** Used to compose unicode regexes. */\nvar reOptMod = rsModifier + '?',\n    rsOptVar = '[' + rsVarRange + ']?',\n    rsOptJoin = '(?:' + rsZWJ + '(?:' + [rsNonAstral, rsRegional, rsSurrPair].join('|') + ')' + rsOptVar + reOptMod + ')*',\n    rsSeq = rsOptVar + reOptMod + rsOptJoin,\n    rsSymbol = '(?:' + [rsNonAstral + rsCombo + '?', rsCombo, rsRegional, rsSurrPair, rsAstral].join('|') + ')';\n\n/** Used to match [string symbols](https://mathiasbynens.be/notes/javascript-unicode). */\nvar reUnicode = RegExp(rsFitz + '(?=' + rsFitz + ')|' + rsSymbol + rsSeq, 'g');\n\n/**\n * Converts a Unicode `string` to an array.\n *\n * @private\n * @param {string} string The string to convert.\n * @returns {Array} Returns the converted array.\n */\nfunction unicodeToArray(string) {\n  return string.match(reUnicode) || [];\n}\n\nmodule.exports = unicodeToArray;\n","var toString = require('./toString'),\n    upperFirst = require('./upperFirst');\n\n/**\n * Converts the first character of `string` to upper case and the remaining\n * to lower case.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category String\n * @param {string} [string=''] The string to capitalize.\n * @returns {string} Returns the capitalized string.\n * @example\n *\n * _.capitalize('FRED');\n * // => 'Fred'\n */\nfunction capitalize(string) {\n  return upperFirst(toString(string).toLowerCase());\n}\n\nmodule.exports = capitalize;\n","var createCaseFirst = require('./_createCaseFirst');\n\n/**\n * Converts the first character of `string` to upper case.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category String\n * @param {string} [string=''] The string to convert.\n * @returns {string} Returns the converted string.\n * @example\n *\n * _.upperFirst('fred');\n * // => 'Fred'\n *\n * _.upperFirst('FRED');\n * // => 'FRED'\n */\nvar upperFirst = createCaseFirst('toUpperCase');\n\nmodule.exports = upperFirst;\n"],"names":["errors","data","pageContext","console","log","___EmotionJSX","title","site","siteMetadata","edges","allMdx","slug","entries","map","edge","node","Layout","_capitalize","Header","StoryHeader","ArticleList","Pagination","prefix","_kebabCase","prev","next","module","exports","string","split","array","start","end","index","length","result","Array","baseSlice","undefined","castSlice","hasUnicode","stringToArray","toString","methodName","strSymbols","chr","charAt","trailing","join","slice","reHasUnicode","RegExp","test","asciiToArray","unicodeToArray","rsAstral","rsCombo","rsFitz","rsNonAstral","rsRegional","rsSurrPair","reOptMod","rsOptVar","rsSeq","rsSymbol","reUnicode","match","upperFirst","toLowerCase","createCaseFirst"],"sourceRoot":""}