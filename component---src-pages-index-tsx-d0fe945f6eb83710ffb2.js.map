{"version":3,"file":"component---src-pages-index-tsx-d0fe945f6eb83710ffb2.js","mappings":"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","sources":["webpack://yeppyshiba-blog/./src/pages/index.tsx","webpack://yeppyshiba-blog/./node_modules/lodash/_asciiToArray.js","webpack://yeppyshiba-blog/./node_modules/lodash/_baseSlice.js","webpack://yeppyshiba-blog/./node_modules/lodash/_castSlice.js","webpack://yeppyshiba-blog/./node_modules/lodash/_createCaseFirst.js","webpack://yeppyshiba-blog/./node_modules/lodash/_hasUnicode.js","webpack://yeppyshiba-blog/./node_modules/lodash/_stringToArray.js","webpack://yeppyshiba-blog/./node_modules/lodash/_unicodeToArray.js","webpack://yeppyshiba-blog/./node_modules/lodash/capitalize.js","webpack://yeppyshiba-blog/./node_modules/lodash/upperFirst.js"],"sourcesContent":["import React, { FunctionComponent } from 'react';\nimport { graphql } from 'gatsby';\nimport { Header, Layout, StoryHeader, TagCloud } from '@/components/common';\nimport { ArticleList } from '@/components/article';\nimport { ArticleListItemsType, ArticleListItemType, GroupCountType } from '@/types';\nimport { capitalize } from 'lodash';\n\nconst categories = ['coding', 'review', 'project'];\n\nconst categoryTemplate = categories\n  .map((category) => {\n    return `${category}Category: allMdx(\n    filter: {frontmatter: {category: {eq: \"${category}\"}}}\n    limit: 3\n    sort: {fields: frontmatter___date, order: DESC}\n    ) {\n      edges {\n        node {\n          id\n          frontmatter {\n            title\n            date\n            image\n            category\n            tags\n            summary\n          }\n          slug\n        }\n      }\n    }`;\n  })\n  .join('\\n');\n\ntype IndexPageProps = {\n  data: {\n    site: {\n      siteMetadata: {\n        title: string;\n        description: string;\n        siteUrl: string;\n      };\n    };\n    featured: ArticleListItemType[];\n    codingCategory: {\n      edges: ArticleListItemsType[];\n    };\n    reviewCategory: {\n      edges: ArticleListItemsType[];\n    };\n    projectCategory: {\n      edges: ArticleListItemsType[];\n    };\n    tags: {\n      group: GroupCountType[];\n    };\n  };\n};\n\ninterface CategorySectionProps extends IndexPageProps {\n  category: string;\n}\n\nconst categoryData = (category: string, data: any) => {\n  switch (category) {\n    case 'coding':\n      return data.codingCategory;\n    case 'review':\n      return data.reviewCategory;\n    case 'project':\n      return data.projectCategory;\n    default:\n      return null;\n  }\n};\n\nconst CategorySection: FunctionComponent<CategorySectionProps> = ({ category, data }) => {\n  const entries = categoryData(category, data);\n  if (!entries || !entries.edges || !entries.edges.length) {\n    return <></>;\n  }\n\n  const updateEntries = entries.edges.map((edge: { node: any; }) => edge.node);\n\n  return (\n    <>\n      <StoryHeader title={`Recent ${capitalize(category)}`} />\n      <ArticleList entries={updateEntries} />\n    </>\n  )\n};\n\nconst IndexPage: FunctionComponent<IndexPageProps> = ({ data }) => {\n  const {\n    site: {\n      siteMetadata: { title },\n    },\n    featured,\n    tags,\n  } = data;\n\n  return (\n    <Layout title={title}>\n      <Header title={title} />\n      <StoryHeader title={'Featured'} />\n      <ArticleList entries={featured} />\n      {categories.map((category) => (\n        <CategorySection key={category} category={category} data={data} />\n      ))}\n      <StoryHeader title={'Tag'} />\n      <TagCloud tags={tags.group} />\n    </Layout>\n  );\n};\n\nexport default IndexPage;\n\nexport const getIndex = graphql`\n  query getIndex {\n    site {\n      siteMetadata {\n        title\n        description\n        siteUrl\n      }\n    }\n    featured: randomMdx {\n      slug\n      id\n      frontmatter {\n        tags\n        title\n        summary\n        image\n        date\n        category\n      }\n    }\n    codingCategory: allMdx(\n      filter: { frontmatter: { category: { eq: \"coding\" } } }\n      limit: 3\n      sort: { fields: frontmatter___date, order: DESC }\n    ) {\n      edges {\n        node {\n          id\n          frontmatter {\n            title\n            date\n            image\n            category\n            tags\n            summary\n          }\n          slug\n        }\n      }\n    }\n    reviewCategory: allMdx(\n      filter: { frontmatter: { category: { eq: \"review\" } } }\n      limit: 3\n      sort: { fields: frontmatter___date, order: DESC }\n    ) {\n      edges {\n        node {\n          id\n          frontmatter {\n            title\n            date\n            image\n            category\n            tags\n            summary\n          }\n          slug\n        }\n      }\n    }\n    projectCategory: allMdx(\n      filter: { frontmatter: { category: { eq: \"project\" } } }\n      limit: 3\n      sort: { fields: frontmatter___date, order: DESC }\n    ) {\n      edges {\n        node {\n          id\n          frontmatter {\n            title\n            date\n            image\n            category\n            tags\n            summary\n          }\n          slug\n        }\n      }\n    }\n    tags: allMdx {\n      group(field: frontmatter___tags) {\n        fieldValue\n        totalCount\n      }\n    }\n  }\n`;\n","/**\n * Converts an ASCII `string` to an array.\n *\n * @private\n * @param {string} string The string to convert.\n * @returns {Array} Returns the converted array.\n */\nfunction asciiToArray(string) {\n  return string.split('');\n}\n\nmodule.exports = asciiToArray;\n","/**\n * The base implementation of `_.slice` without an iteratee call guard.\n *\n * @private\n * @param {Array} array The array to slice.\n * @param {number} [start=0] The start position.\n * @param {number} [end=array.length] The end position.\n * @returns {Array} Returns the slice of `array`.\n */\nfunction baseSlice(array, start, end) {\n  var index = -1,\n      length = array.length;\n\n  if (start < 0) {\n    start = -start > length ? 0 : (length + start);\n  }\n  end = end > length ? length : end;\n  if (end < 0) {\n    end += length;\n  }\n  length = start > end ? 0 : ((end - start) >>> 0);\n  start >>>= 0;\n\n  var result = Array(length);\n  while (++index < length) {\n    result[index] = array[index + start];\n  }\n  return result;\n}\n\nmodule.exports = baseSlice;\n","var baseSlice = require('./_baseSlice');\n\n/**\n * Casts `array` to a slice if it's needed.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {number} start The start position.\n * @param {number} [end=array.length] The end position.\n * @returns {Array} Returns the cast slice.\n */\nfunction castSlice(array, start, end) {\n  var length = array.length;\n  end = end === undefined ? length : end;\n  return (!start && end >= length) ? array : baseSlice(array, start, end);\n}\n\nmodule.exports = castSlice;\n","var castSlice = require('./_castSlice'),\n    hasUnicode = require('./_hasUnicode'),\n    stringToArray = require('./_stringToArray'),\n    toString = require('./toString');\n\n/**\n * Creates a function like `_.lowerFirst`.\n *\n * @private\n * @param {string} methodName The name of the `String` case method to use.\n * @returns {Function} Returns the new case function.\n */\nfunction createCaseFirst(methodName) {\n  return function(string) {\n    string = toString(string);\n\n    var strSymbols = hasUnicode(string)\n      ? stringToArray(string)\n      : undefined;\n\n    var chr = strSymbols\n      ? strSymbols[0]\n      : string.charAt(0);\n\n    var trailing = strSymbols\n      ? castSlice(strSymbols, 1).join('')\n      : string.slice(1);\n\n    return chr[methodName]() + trailing;\n  };\n}\n\nmodule.exports = createCaseFirst;\n","/** Used to compose unicode character classes. */\nvar rsAstralRange = '\\\\ud800-\\\\udfff',\n    rsComboMarksRange = '\\\\u0300-\\\\u036f',\n    reComboHalfMarksRange = '\\\\ufe20-\\\\ufe2f',\n    rsComboSymbolsRange = '\\\\u20d0-\\\\u20ff',\n    rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange,\n    rsVarRange = '\\\\ufe0e\\\\ufe0f';\n\n/** Used to compose unicode capture groups. */\nvar rsZWJ = '\\\\u200d';\n\n/** Used to detect strings with [zero-width joiners or code points from the astral planes](http://eev.ee/blog/2015/09/12/dark-corners-of-unicode/). */\nvar reHasUnicode = RegExp('[' + rsZWJ + rsAstralRange  + rsComboRange + rsVarRange + ']');\n\n/**\n * Checks if `string` contains Unicode symbols.\n *\n * @private\n * @param {string} string The string to inspect.\n * @returns {boolean} Returns `true` if a symbol is found, else `false`.\n */\nfunction hasUnicode(string) {\n  return reHasUnicode.test(string);\n}\n\nmodule.exports = hasUnicode;\n","var asciiToArray = require('./_asciiToArray'),\n    hasUnicode = require('./_hasUnicode'),\n    unicodeToArray = require('./_unicodeToArray');\n\n/**\n * Converts `string` to an array.\n *\n * @private\n * @param {string} string The string to convert.\n * @returns {Array} Returns the converted array.\n */\nfunction stringToArray(string) {\n  return hasUnicode(string)\n    ? unicodeToArray(string)\n    : asciiToArray(string);\n}\n\nmodule.exports = stringToArray;\n","/** Used to compose unicode character classes. */\nvar rsAstralRange = '\\\\ud800-\\\\udfff',\n    rsComboMarksRange = '\\\\u0300-\\\\u036f',\n    reComboHalfMarksRange = '\\\\ufe20-\\\\ufe2f',\n    rsComboSymbolsRange = '\\\\u20d0-\\\\u20ff',\n    rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange,\n    rsVarRange = '\\\\ufe0e\\\\ufe0f';\n\n/** Used to compose unicode capture groups. */\nvar rsAstral = '[' + rsAstralRange + ']',\n    rsCombo = '[' + rsComboRange + ']',\n    rsFitz = '\\\\ud83c[\\\\udffb-\\\\udfff]',\n    rsModifier = '(?:' + rsCombo + '|' + rsFitz + ')',\n    rsNonAstral = '[^' + rsAstralRange + ']',\n    rsRegional = '(?:\\\\ud83c[\\\\udde6-\\\\uddff]){2}',\n    rsSurrPair = '[\\\\ud800-\\\\udbff][\\\\udc00-\\\\udfff]',\n    rsZWJ = '\\\\u200d';\n\n/** Used to compose unicode regexes. */\nvar reOptMod = rsModifier + '?',\n    rsOptVar = '[' + rsVarRange + ']?',\n    rsOptJoin = '(?:' + rsZWJ + '(?:' + [rsNonAstral, rsRegional, rsSurrPair].join('|') + ')' + rsOptVar + reOptMod + ')*',\n    rsSeq = rsOptVar + reOptMod + rsOptJoin,\n    rsSymbol = '(?:' + [rsNonAstral + rsCombo + '?', rsCombo, rsRegional, rsSurrPair, rsAstral].join('|') + ')';\n\n/** Used to match [string symbols](https://mathiasbynens.be/notes/javascript-unicode). */\nvar reUnicode = RegExp(rsFitz + '(?=' + rsFitz + ')|' + rsSymbol + rsSeq, 'g');\n\n/**\n * Converts a Unicode `string` to an array.\n *\n * @private\n * @param {string} string The string to convert.\n * @returns {Array} Returns the converted array.\n */\nfunction unicodeToArray(string) {\n  return string.match(reUnicode) || [];\n}\n\nmodule.exports = unicodeToArray;\n","var toString = require('./toString'),\n    upperFirst = require('./upperFirst');\n\n/**\n * Converts the first character of `string` to upper case and the remaining\n * to lower case.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category String\n * @param {string} [string=''] The string to capitalize.\n * @returns {string} Returns the capitalized string.\n * @example\n *\n * _.capitalize('FRED');\n * // => 'Fred'\n */\nfunction capitalize(string) {\n  return upperFirst(toString(string).toLowerCase());\n}\n\nmodule.exports = capitalize;\n","var createCaseFirst = require('./_createCaseFirst');\n\n/**\n * Converts the first character of `string` to upper case.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category String\n * @param {string} [string=''] The string to convert.\n * @returns {string} Returns the converted string.\n * @example\n *\n * _.upperFirst('fred');\n * // => 'Fred'\n *\n * _.upperFirst('FRED');\n * // => 'FRED'\n */\nvar upperFirst = createCaseFirst('toUpperCase');\n\nmodule.exports = upperFirst;\n"],"names":["categories","CategorySection","map","category","join","entries","data","codingCategory","reviewCategory","projectCategory","categoryData","edges","length","___EmotionJSX","updateEntries","edge","node","StoryHeader","title","_capitalize","ArticleList","site","siteMetadata","featured","tags","Layout","Header","key","TagCloud","group","module","exports","string","split","array","start","end","index","result","Array","baseSlice","undefined","castSlice","hasUnicode","stringToArray","toString","methodName","strSymbols","chr","charAt","trailing","slice","reHasUnicode","RegExp","test","asciiToArray","unicodeToArray","rsAstral","rsCombo","rsFitz","rsNonAstral","rsRegional","rsSurrPair","reOptMod","rsOptVar","rsSeq","rsSymbol","reUnicode","match","upperFirst","toLowerCase","createCaseFirst"],"sourceRoot":""}