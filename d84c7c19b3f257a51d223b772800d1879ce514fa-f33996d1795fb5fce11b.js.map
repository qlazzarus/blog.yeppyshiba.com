{"version":3,"file":"d84c7c19b3f257a51d223b772800d1879ce514fa-f33996d1795fb5fce11b.js","mappings":"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","sources":["webpack://yeppyshiba-blog/./node_modules/@babel/runtime/helpers/arrayLikeToArray.js","webpack://yeppyshiba-blog/./node_modules/@babel/runtime/helpers/arrayWithoutHoles.js","webpack://yeppyshiba-blog/./node_modules/@babel/runtime/helpers/construct.js","webpack://yeppyshiba-blog/./node_modules/@babel/runtime/helpers/defineProperty.js","webpack://yeppyshiba-blog/./node_modules/@babel/runtime/helpers/isNativeReflectConstruct.js","webpack://yeppyshiba-blog/./node_modules/@babel/runtime/helpers/iterableToArray.js","webpack://yeppyshiba-blog/./node_modules/@babel/runtime/helpers/nonIterableSpread.js","webpack://yeppyshiba-blog/./node_modules/@babel/runtime/helpers/toConsumableArray.js","webpack://yeppyshiba-blog/./node_modules/@babel/runtime/helpers/unsupportedIterableToArray.js","webpack://yeppyshiba-blog/./node_modules/prismjs/components/prism-dart.js","webpack://yeppyshiba-blog/./node_modules/prismjs/components/prism-php.js","webpack://yeppyshiba-blog/./node_modules/prism-react-renderer/prism/index.js","webpack://yeppyshiba-blog/./node_modules/prism-react-renderer/themes/duotoneDark/index.js","webpack://yeppyshiba-blog/./node_modules/prism-react-renderer/dist/index.js","webpack://yeppyshiba-blog/./node_modules/prism-react-renderer/themes/vsDark/index.js","webpack://yeppyshiba-blog/./node_modules/prism-react-renderer/themes/vsLight/index.js","webpack://yeppyshiba-blog/./src/components/markdown/CodeBlock.tsx","webpack://yeppyshiba-blog/./src/hooks/useModalDispatch.ts","webpack://yeppyshiba-blog/./src/hooks/useModalState.ts","webpack://yeppyshiba-blog/./src/components/markdown/FootnoteWrapper.tsx","webpack://yeppyshiba-blog/./src/components/markdown/Heading.tsx","webpack://yeppyshiba-blog/./src/components/markdown/Image.tsx","webpack://yeppyshiba-blog/./src/components/markdown/CustomProvider.tsx","webpack://yeppyshiba-blog/./src/components/markdown/Link.tsx","webpack://yeppyshiba-blog/./src/components/article/ArticleDetail.tsx","webpack://yeppyshiba-blog/./node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteralLoose.js","webpack://yeppyshiba-blog/./src/components/article/ArticleHeader.tsx","webpack://yeppyshiba-blog/./src/components/article/ArticleList.tsx","webpack://yeppyshiba-blog/./node_modules/gatsby-plugin-mdx/index.js","webpack://yeppyshiba-blog/./node_modules/gatsby-plugin-mdx/mdx-renderer.js"],"sourcesContent":["function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nmodule.exports = _arrayLikeToArray, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var arrayLikeToArray = require(\"./arrayLikeToArray.js\");\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}\n\nmodule.exports = _arrayWithoutHoles, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var setPrototypeOf = require(\"./setPrototypeOf.js\");\n\nvar isNativeReflectConstruct = require(\"./isNativeReflectConstruct.js\");\n\nfunction _construct(Parent, args, Class) {\n  if (isNativeReflectConstruct()) {\n    module.exports = _construct = Reflect.construct, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n  } else {\n    module.exports = _construct = function _construct(Parent, args, Class) {\n      var a = [null];\n      a.push.apply(a, args);\n      var Constructor = Function.bind.apply(Parent, a);\n      var instance = new Constructor();\n      if (Class) setPrototypeOf(instance, Class.prototype);\n      return instance;\n    }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n  }\n\n  return _construct.apply(null, arguments);\n}\n\nmodule.exports = _construct, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nmodule.exports = _defineProperty, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nmodule.exports = _isNativeReflectConstruct, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\n\nmodule.exports = _iterableToArray, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nmodule.exports = _nonIterableSpread, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var arrayWithoutHoles = require(\"./arrayWithoutHoles.js\");\n\nvar iterableToArray = require(\"./iterableToArray.js\");\n\nvar unsupportedIterableToArray = require(\"./unsupportedIterableToArray.js\");\n\nvar nonIterableSpread = require(\"./nonIterableSpread.js\");\n\nfunction _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}\n\nmodule.exports = _toConsumableArray, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var arrayLikeToArray = require(\"./arrayLikeToArray.js\");\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}\n\nmodule.exports = _unsupportedIterableToArray, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","(function (Prism) {\n  var keywords = [/\\b(?:async|sync|yield)\\*/, /\\b(?:abstract|assert|async|await|break|case|catch|class|const|continue|covariant|default|deferred|do|dynamic|else|enum|export|extends|extension|external|factory|final|finally|for|get|hide|if|implements|import|in|interface|library|mixin|new|null|on|operator|part|rethrow|return|set|show|static|super|switch|sync|this|throw|try|typedef|var|void|while|with|yield)\\b/]; // Handles named imports, such as http.Client\n\n  var packagePrefix = /(^|[^\\w.])(?:[a-z]\\w*\\s*\\.\\s*)*(?:[A-Z]\\w*\\s*\\.\\s*)*/.source; // based on the dart naming conventions\n\n  var className = {\n    pattern: RegExp(packagePrefix + /[A-Z](?:[\\d_A-Z]*[a-z]\\w*)?\\b/.source),\n    lookbehind: true,\n    inside: {\n      'namespace': {\n        pattern: /^[a-z]\\w*(?:\\s*\\.\\s*[a-z]\\w*)*(?:\\s*\\.)?/,\n        inside: {\n          'punctuation': /\\./\n        }\n      }\n    }\n  };\n  Prism.languages.dart = Prism.languages.extend('clike', {\n    'class-name': [className, {\n      // variables and parameters\n      // this to support class names (or generic parameters) which do not contain a lower case letter (also works for methods)\n      pattern: RegExp(packagePrefix + /[A-Z]\\w*(?=\\s+\\w+\\s*[;,=()])/.source),\n      lookbehind: true,\n      inside: className.inside\n    }],\n    'keyword': keywords,\n    'operator': /\\bis!|\\b(?:as|is)\\b|\\+\\+|--|&&|\\|\\||<<=?|>>=?|~(?:\\/=?)?|[+\\-*\\/%&^|=!<>]=?|\\?/\n  });\n  Prism.languages.insertBefore('dart', 'string', {\n    'string-literal': {\n      pattern: /r?(?:(\"\"\"|''')[\\s\\S]*?\\1|([\"'])(?:\\\\.|(?!\\2)[^\\\\\\r\\n])*\\2(?!\\2))/,\n      greedy: true,\n      inside: {\n        'interpolation': {\n          pattern: /((?:^|[^\\\\])(?:\\\\{2})*)\\$(?:\\w+|\\{(?:[^{}]|\\{[^{}]*\\})*\\})/,\n          lookbehind: true,\n          inside: {\n            'punctuation': /^\\$\\{?|\\}$/,\n            'expression': {\n              pattern: /[\\s\\S]+/,\n              inside: Prism.languages.dart\n            }\n          }\n        },\n        'string': /[\\s\\S]+/\n      }\n    },\n    'string': undefined\n  });\n  Prism.languages.insertBefore('dart', 'class-name', {\n    'metadata': {\n      pattern: /@\\w+/,\n      alias: 'function'\n    }\n  });\n  Prism.languages.insertBefore('dart', 'class-name', {\n    'generics': {\n      pattern: /<(?:[\\w\\s,.&?]|<(?:[\\w\\s,.&?]|<(?:[\\w\\s,.&?]|<[\\w\\s,.&?]*>)*>)*>)*>/,\n      inside: {\n        'class-name': className,\n        'keyword': keywords,\n        'punctuation': /[<>(),.:]/,\n        'operator': /[?&|]/\n      }\n    }\n  });\n})(Prism);","/**\n * Original by Aaron Harun: http://aahacreative.com/2012/07/31/php-syntax-highlighting-prism/\n * Modified by Miles Johnson: http://milesj.me\n * Rewritten by Tom Pavelec\n *\n * Supports PHP 5.3 - 8.0\n */\n(function (Prism) {\n  var comment = /\\/\\*[\\s\\S]*?\\*\\/|\\/\\/.*|#(?!\\[).*/;\n  var constant = [{\n    pattern: /\\b(?:false|true)\\b/i,\n    alias: 'boolean'\n  }, {\n    pattern: /(::\\s*)\\b[a-z_]\\w*\\b(?!\\s*\\()/i,\n    greedy: true,\n    lookbehind: true\n  }, {\n    pattern: /(\\b(?:case|const)\\s+)\\b[a-z_]\\w*(?=\\s*[;=])/i,\n    greedy: true,\n    lookbehind: true\n  }, /\\b(?:null)\\b/i, /\\b[A-Z_][A-Z0-9_]*\\b(?!\\s*\\()/];\n  var number = /\\b0b[01]+(?:_[01]+)*\\b|\\b0o[0-7]+(?:_[0-7]+)*\\b|\\b0x[\\da-f]+(?:_[\\da-f]+)*\\b|(?:\\b\\d+(?:_\\d+)*\\.?(?:\\d+(?:_\\d+)*)?|\\B\\.\\d+)(?:e[+-]?\\d+)?/i;\n  var operator = /<?=>|\\?\\?=?|\\.{3}|\\??->|[!=]=?=?|::|\\*\\*=?|--|\\+\\+|&&|\\|\\||<<|>>|[?~]|[/^|%*&<>.+-]=?/;\n  var punctuation = /[{}\\[\\](),:;]/;\n  Prism.languages.php = {\n    'delimiter': {\n      pattern: /\\?>$|^<\\?(?:php(?=\\s)|=)?/i,\n      alias: 'important'\n    },\n    'comment': comment,\n    'variable': /\\$+(?:\\w+\\b|(?=\\{))/,\n    'package': {\n      pattern: /(namespace\\s+|use\\s+(?:function\\s+)?)(?:\\\\?\\b[a-z_]\\w*)+\\b(?!\\\\)/i,\n      lookbehind: true,\n      inside: {\n        'punctuation': /\\\\/\n      }\n    },\n    'class-name-definition': {\n      pattern: /(\\b(?:class|enum|interface|trait)\\s+)\\b[a-z_]\\w*(?!\\\\)\\b/i,\n      lookbehind: true,\n      alias: 'class-name'\n    },\n    'function-definition': {\n      pattern: /(\\bfunction\\s+)[a-z_]\\w*(?=\\s*\\()/i,\n      lookbehind: true,\n      alias: 'function'\n    },\n    'keyword': [{\n      pattern: /(\\(\\s*)\\b(?:array|bool|boolean|float|int|integer|object|string)\\b(?=\\s*\\))/i,\n      alias: 'type-casting',\n      greedy: true,\n      lookbehind: true\n    }, {\n      pattern: /([(,?]\\s*)\\b(?:array(?!\\s*\\()|bool|callable|(?:false|null)(?=\\s*\\|)|float|int|iterable|mixed|object|self|static|string)\\b(?=\\s*\\$)/i,\n      alias: 'type-hint',\n      greedy: true,\n      lookbehind: true\n    }, {\n      pattern: /(\\)\\s*:\\s*(?:\\?\\s*)?)\\b(?:array(?!\\s*\\()|bool|callable|(?:false|null)(?=\\s*\\|)|float|int|iterable|mixed|object|self|static|string|void)\\b/i,\n      alias: 'return-type',\n      greedy: true,\n      lookbehind: true\n    }, {\n      pattern: /\\b(?:array(?!\\s*\\()|bool|float|int|iterable|mixed|object|string|void)\\b/i,\n      alias: 'type-declaration',\n      greedy: true\n    }, {\n      pattern: /(\\|\\s*)(?:false|null)\\b|\\b(?:false|null)(?=\\s*\\|)/i,\n      alias: 'type-declaration',\n      greedy: true,\n      lookbehind: true\n    }, {\n      pattern: /\\b(?:parent|self|static)(?=\\s*::)/i,\n      alias: 'static-context',\n      greedy: true\n    }, {\n      // yield from\n      pattern: /(\\byield\\s+)from\\b/i,\n      lookbehind: true\n    }, // `class` is always a keyword unlike other keywords\n    /\\bclass\\b/i, {\n      // https://www.php.net/manual/en/reserved.keywords.php\n      //\n      // keywords cannot be preceded by \"->\"\n      // the complex lookbehind means `(?<!(?:->|::)\\s*)`\n      pattern: /((?:^|[^\\s>:]|(?:^|[^-])>|(?:^|[^:]):)\\s*)\\b(?:abstract|and|array|as|break|callable|case|catch|clone|const|continue|declare|default|die|do|echo|else|elseif|empty|enddeclare|endfor|endforeach|endif|endswitch|endwhile|enum|eval|exit|extends|final|finally|fn|for|foreach|function|global|goto|if|implements|include|include_once|instanceof|insteadof|interface|isset|list|match|namespace|new|or|parent|print|private|protected|public|require|require_once|return|self|static|switch|throw|trait|try|unset|use|var|while|xor|yield|__halt_compiler)\\b/i,\n      lookbehind: true\n    }],\n    'argument-name': {\n      pattern: /([(,]\\s+)\\b[a-z_]\\w*(?=\\s*:(?!:))/i,\n      lookbehind: true\n    },\n    'class-name': [{\n      pattern: /(\\b(?:extends|implements|instanceof|new(?!\\s+self|\\s+static))\\s+|\\bcatch\\s*\\()\\b[a-z_]\\w*(?!\\\\)\\b/i,\n      greedy: true,\n      lookbehind: true\n    }, {\n      pattern: /(\\|\\s*)\\b[a-z_]\\w*(?!\\\\)\\b/i,\n      greedy: true,\n      lookbehind: true\n    }, {\n      pattern: /\\b[a-z_]\\w*(?!\\\\)\\b(?=\\s*\\|)/i,\n      greedy: true\n    }, {\n      pattern: /(\\|\\s*)(?:\\\\?\\b[a-z_]\\w*)+\\b/i,\n      alias: 'class-name-fully-qualified',\n      greedy: true,\n      lookbehind: true,\n      inside: {\n        'punctuation': /\\\\/\n      }\n    }, {\n      pattern: /(?:\\\\?\\b[a-z_]\\w*)+\\b(?=\\s*\\|)/i,\n      alias: 'class-name-fully-qualified',\n      greedy: true,\n      inside: {\n        'punctuation': /\\\\/\n      }\n    }, {\n      pattern: /(\\b(?:extends|implements|instanceof|new(?!\\s+self\\b|\\s+static\\b))\\s+|\\bcatch\\s*\\()(?:\\\\?\\b[a-z_]\\w*)+\\b(?!\\\\)/i,\n      alias: 'class-name-fully-qualified',\n      greedy: true,\n      lookbehind: true,\n      inside: {\n        'punctuation': /\\\\/\n      }\n    }, {\n      pattern: /\\b[a-z_]\\w*(?=\\s*\\$)/i,\n      alias: 'type-declaration',\n      greedy: true\n    }, {\n      pattern: /(?:\\\\?\\b[a-z_]\\w*)+(?=\\s*\\$)/i,\n      alias: ['class-name-fully-qualified', 'type-declaration'],\n      greedy: true,\n      inside: {\n        'punctuation': /\\\\/\n      }\n    }, {\n      pattern: /\\b[a-z_]\\w*(?=\\s*::)/i,\n      alias: 'static-context',\n      greedy: true\n    }, {\n      pattern: /(?:\\\\?\\b[a-z_]\\w*)+(?=\\s*::)/i,\n      alias: ['class-name-fully-qualified', 'static-context'],\n      greedy: true,\n      inside: {\n        'punctuation': /\\\\/\n      }\n    }, {\n      pattern: /([(,?]\\s*)[a-z_]\\w*(?=\\s*\\$)/i,\n      alias: 'type-hint',\n      greedy: true,\n      lookbehind: true\n    }, {\n      pattern: /([(,?]\\s*)(?:\\\\?\\b[a-z_]\\w*)+(?=\\s*\\$)/i,\n      alias: ['class-name-fully-qualified', 'type-hint'],\n      greedy: true,\n      lookbehind: true,\n      inside: {\n        'punctuation': /\\\\/\n      }\n    }, {\n      pattern: /(\\)\\s*:\\s*(?:\\?\\s*)?)\\b[a-z_]\\w*(?!\\\\)\\b/i,\n      alias: 'return-type',\n      greedy: true,\n      lookbehind: true\n    }, {\n      pattern: /(\\)\\s*:\\s*(?:\\?\\s*)?)(?:\\\\?\\b[a-z_]\\w*)+\\b(?!\\\\)/i,\n      alias: ['class-name-fully-qualified', 'return-type'],\n      greedy: true,\n      lookbehind: true,\n      inside: {\n        'punctuation': /\\\\/\n      }\n    }],\n    'constant': constant,\n    'function': {\n      pattern: /(^|[^\\\\\\w])\\\\?[a-z_](?:[\\w\\\\]*\\w)?(?=\\s*\\()/i,\n      lookbehind: true,\n      inside: {\n        'punctuation': /\\\\/\n      }\n    },\n    'property': {\n      pattern: /(->\\s*)\\w+/,\n      lookbehind: true\n    },\n    'number': number,\n    'operator': operator,\n    'punctuation': punctuation\n  };\n  var string_interpolation = {\n    pattern: /\\{\\$(?:\\{(?:\\{[^{}]+\\}|[^{}]+)\\}|[^{}])+\\}|(^|[^\\\\{])\\$+(?:\\w+(?:\\[[^\\r\\n\\[\\]]+\\]|->\\w+)?)/,\n    lookbehind: true,\n    inside: Prism.languages.php\n  };\n  var string = [{\n    pattern: /<<<'([^']+)'[\\r\\n](?:.*[\\r\\n])*?\\1;/,\n    alias: 'nowdoc-string',\n    greedy: true,\n    inside: {\n      'delimiter': {\n        pattern: /^<<<'[^']+'|[a-z_]\\w*;$/i,\n        alias: 'symbol',\n        inside: {\n          'punctuation': /^<<<'?|[';]$/\n        }\n      }\n    }\n  }, {\n    pattern: /<<<(?:\"([^\"]+)\"[\\r\\n](?:.*[\\r\\n])*?\\1;|([a-z_]\\w*)[\\r\\n](?:.*[\\r\\n])*?\\2;)/i,\n    alias: 'heredoc-string',\n    greedy: true,\n    inside: {\n      'delimiter': {\n        pattern: /^<<<(?:\"[^\"]+\"|[a-z_]\\w*)|[a-z_]\\w*;$/i,\n        alias: 'symbol',\n        inside: {\n          'punctuation': /^<<<\"?|[\";]$/\n        }\n      },\n      'interpolation': string_interpolation\n    }\n  }, {\n    pattern: /`(?:\\\\[\\s\\S]|[^\\\\`])*`/,\n    alias: 'backtick-quoted-string',\n    greedy: true\n  }, {\n    pattern: /'(?:\\\\[\\s\\S]|[^\\\\'])*'/,\n    alias: 'single-quoted-string',\n    greedy: true\n  }, {\n    pattern: /\"(?:\\\\[\\s\\S]|[^\\\\\"])*\"/,\n    alias: 'double-quoted-string',\n    greedy: true,\n    inside: {\n      'interpolation': string_interpolation\n    }\n  }];\n  Prism.languages.insertBefore('php', 'variable', {\n    'string': string,\n    'attribute': {\n      pattern: /#\\[(?:[^\"'\\/#]|\\/(?![*/])|\\/\\/.*$|#(?!\\[).*$|\\/\\*(?:[^*]|\\*(?!\\/))*\\*\\/|\"(?:\\\\[\\s\\S]|[^\\\\\"])*\"|'(?:\\\\[\\s\\S]|[^\\\\'])*')+\\](?=\\s*[a-z$#])/im,\n      greedy: true,\n      inside: {\n        'attribute-content': {\n          pattern: /^(#\\[)[\\s\\S]+(?=\\]$)/,\n          lookbehind: true,\n          // inside can appear subset of php\n          inside: {\n            'comment': comment,\n            'string': string,\n            'attribute-class-name': [{\n              pattern: /([^:]|^)\\b[a-z_]\\w*(?!\\\\)\\b/i,\n              alias: 'class-name',\n              greedy: true,\n              lookbehind: true\n            }, {\n              pattern: /([^:]|^)(?:\\\\?\\b[a-z_]\\w*)+/i,\n              alias: ['class-name', 'class-name-fully-qualified'],\n              greedy: true,\n              lookbehind: true,\n              inside: {\n                'punctuation': /\\\\/\n              }\n            }],\n            'constant': constant,\n            'number': number,\n            'operator': operator,\n            'punctuation': punctuation\n          }\n        },\n        'delimiter': {\n          pattern: /^#\\[|\\]$/,\n          alias: 'punctuation'\n        }\n      }\n    }\n  });\n  Prism.hooks.add('before-tokenize', function (env) {\n    if (!/<\\?/.test(env.code)) {\n      return;\n    }\n\n    var phpPattern = /<\\?(?:[^\"'/#]|\\/(?![*/])|(\"|')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1|(?:\\/\\/|#(?!\\[))(?:[^?\\n\\r]|\\?(?!>))*(?=$|\\?>|[\\r\\n])|#\\[|\\/\\*(?:[^*]|\\*(?!\\/))*(?:\\*\\/|$))*?(?:\\?>|$)/g;\n    Prism.languages['markup-templating'].buildPlaceholders(env, 'php', phpPattern);\n  });\n  Prism.hooks.add('after-tokenize', function (env) {\n    Prism.languages['markup-templating'].tokenizePlaceholders(env, 'php');\n  });\n})(Prism);","/**\n * Prism: Lightweight, robust, elegant syntax highlighting\n *\n * @license MIT <https://opensource.org/licenses/MIT>\n * @author Lea Verou <https://lea.verou.me>\n * @namespace\n * @public\n */\n\n/**\n * prism-react-renderer:\n * This file has been modified to remove:\n * - globals and window dependency\n * - worker support\n * - highlightAll and other element dependent methods\n * - _.hooks helpers\n * - UMD/node-specific hacks\n * It has also been run through prettier\n */\nvar Prism = function () {\n  // Private helper vars\n  var lang = /(?:^|\\s)lang(?:uage)?-([\\w-]+)(?=\\s|$)/i;\n  var uniqueId = 0; // The grammar object for plaintext\n\n  var plainTextGrammar = {};\n  var _ = {\n    /**\n     * A namespace for utility methods.\n     *\n     * All function in this namespace that are not explicitly marked as _public_ are for __internal use only__ and may\n     * change or disappear at any time.\n     *\n     * @namespace\n     * @memberof Prism\n     */\n    util: {\n      encode: function encode(tokens) {\n        if (tokens instanceof Token) {\n          return new Token(tokens.type, encode(tokens.content), tokens.alias);\n        } else if (Array.isArray(tokens)) {\n          return tokens.map(encode);\n        } else {\n          return tokens.replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/\\u00a0/g, ' ');\n        }\n      },\n\n      /**\n       * Returns the name of the type of the given value.\n       *\n       * @param {any} o\n       * @returns {string}\n       * @example\n       * type(null)      === 'Null'\n       * type(undefined) === 'Undefined'\n       * type(123)       === 'Number'\n       * type('foo')     === 'String'\n       * type(true)      === 'Boolean'\n       * type([1, 2])    === 'Array'\n       * type({})        === 'Object'\n       * type(String)    === 'Function'\n       * type(/abc+/)    === 'RegExp'\n       */\n      type: function type(o) {\n        return Object.prototype.toString.call(o).slice(8, -1);\n      },\n\n      /**\n       * Returns a unique number for the given object. Later calls will still return the same number.\n       *\n       * @param {Object} obj\n       * @returns {number}\n       */\n      objId: function objId(obj) {\n        if (!obj['__id']) {\n          Object.defineProperty(obj, '__id', {\n            value: ++uniqueId\n          });\n        }\n\n        return obj['__id'];\n      },\n\n      /**\n       * Creates a deep clone of the given object.\n       *\n       * The main intended use of this function is to clone language definitions.\n       *\n       * @param {T} o\n       * @param {Record<number, any>} [visited]\n       * @returns {T}\n       * @template T\n       */\n      clone: function deepClone(o, visited) {\n        visited = visited || {};\n        var clone;\n        var id;\n\n        switch (_.util.type(o)) {\n          case 'Object':\n            id = _.util.objId(o);\n\n            if (visited[id]) {\n              return visited[id];\n            }\n\n            clone =\n            /** @type {Record<string, any>} */\n            {};\n            visited[id] = clone;\n\n            for (var key in o) {\n              if (o.hasOwnProperty(key)) {\n                clone[key] = deepClone(o[key], visited);\n              }\n            }\n\n            return (\n              /** @type {any} */\n              clone\n            );\n\n          case 'Array':\n            id = _.util.objId(o);\n\n            if (visited[id]) {\n              return visited[id];\n            }\n\n            clone = [];\n            visited[id] = clone;\n\n            /** @type {Array} */\n\n            /** @type {any} */\n            o.forEach(function (v, i) {\n              clone[i] = deepClone(v, visited);\n            });\n            return (\n              /** @type {any} */\n              clone\n            );\n\n          default:\n            return o;\n        }\n      },\n\n      /**\n       * Returns the Prism language of the given element set by a `language-xxxx` or `lang-xxxx` class.\n       *\n       * If no language is set for the element or the element is `null` or `undefined`, `none` will be returned.\n       *\n       * @param {Element} element\n       * @returns {string}\n       */\n      getLanguage: function getLanguage(element) {\n        while (element) {\n          var m = lang.exec(element.className);\n\n          if (m) {\n            return m[1].toLowerCase();\n          }\n\n          element = element.parentElement;\n        }\n\n        return 'none';\n      },\n\n      /**\n       * Sets the Prism `language-xxxx` class of the given element.\n       *\n       * @param {Element} element\n       * @param {string} language\n       * @returns {void}\n       */\n      setLanguage: function setLanguage(element, language) {\n        // remove all `language-xxxx` classes\n        // (this might leave behind a leading space)\n        element.className = element.className.replace(RegExp(lang, 'gi'), ''); // add the new `language-xxxx` class\n        // (using `classList` will automatically clean up spaces for us)\n\n        element.classList.add('language-' + language);\n      },\n\n      /**\n       * Returns whether a given class is active for `element`.\n       *\n       * The class can be activated if `element` or one of its ancestors has the given class and it can be deactivated\n       * if `element` or one of its ancestors has the negated version of the given class. The _negated version_ of the\n       * given class is just the given class with a `no-` prefix.\n       *\n       * Whether the class is active is determined by the closest ancestor of `element` (where `element` itself is\n       * closest ancestor) that has the given class or the negated version of it. If neither `element` nor any of its\n       * ancestors have the given class or the negated version of it, then the default activation will be returned.\n       *\n       * In the paradoxical situation where the closest ancestor contains __both__ the given class and the negated\n       * version of it, the class is considered active.\n       *\n       * @param {Element} element\n       * @param {string} className\n       * @param {boolean} [defaultActivation=false]\n       * @returns {boolean}\n       */\n      isActive: function isActive(element, className, defaultActivation) {\n        var no = 'no-' + className;\n\n        while (element) {\n          var classList = element.classList;\n\n          if (classList.contains(className)) {\n            return true;\n          }\n\n          if (classList.contains(no)) {\n            return false;\n          }\n\n          element = element.parentElement;\n        }\n\n        return !!defaultActivation;\n      }\n    },\n\n    /**\n     * This namespace contains all currently loaded languages and the some helper functions to create and modify languages.\n     *\n     * @namespace\n     * @memberof Prism\n     * @public\n     */\n    languages: {\n      /**\n       * The grammar for plain, unformatted text.\n       */\n      plain: plainTextGrammar,\n      plaintext: plainTextGrammar,\n      text: plainTextGrammar,\n      txt: plainTextGrammar,\n\n      /**\n       * Creates a deep copy of the language with the given id and appends the given tokens.\n       *\n       * If a token in `redef` also appears in the copied language, then the existing token in the copied language\n       * will be overwritten at its original position.\n       *\n       * ## Best practices\n       *\n       * Since the position of overwriting tokens (token in `redef` that overwrite tokens in the copied language)\n       * doesn't matter, they can technically be in any order. However, this can be confusing to others that trying to\n       * understand the language definition because, normally, the order of tokens matters in Prism grammars.\n       *\n       * Therefore, it is encouraged to order overwriting tokens according to the positions of the overwritten tokens.\n       * Furthermore, all non-overwriting tokens should be placed after the overwriting ones.\n       *\n       * @param {string} id The id of the language to extend. This has to be a key in `Prism.languages`.\n       * @param {Grammar} redef The new tokens to append.\n       * @returns {Grammar} The new language created.\n       * @public\n       * @example\n       * Prism.languages['css-with-colors'] = Prism.languages.extend('css', {\n       *     // Prism.languages.css already has a 'comment' token, so this token will overwrite CSS' 'comment' token\n       *     // at its original position\n       *     'comment': { ... },\n       *     // CSS doesn't have a 'color' token, so this token will be appended\n       *     'color': /\\b(?:red|green|blue)\\b/\n       * });\n       */\n      extend: function extend(id, redef) {\n        var lang = _.util.clone(_.languages[id]);\n\n        for (var key in redef) {\n          lang[key] = redef[key];\n        }\n\n        return lang;\n      },\n\n      /**\n       * Inserts tokens _before_ another token in a language definition or any other grammar.\n       *\n       * ## Usage\n       *\n       * This helper method makes it easy to modify existing languages. For example, the CSS language definition\n       * not only defines CSS highlighting for CSS documents, but also needs to define highlighting for CSS embedded\n       * in HTML through `<style>` elements. To do this, it needs to modify `Prism.languages.markup` and add the\n       * appropriate tokens. However, `Prism.languages.markup` is a regular JavaScript object literal, so if you do\n       * this:\n       *\n       * ```js\n       * Prism.languages.markup.style = {\n       *     // token\n       * };\n       * ```\n       *\n       * then the `style` token will be added (and processed) at the end. `insertBefore` allows you to insert tokens\n       * before existing tokens. For the CSS example above, you would use it like this:\n       *\n       * ```js\n       * Prism.languages.insertBefore('markup', 'cdata', {\n       *     'style': {\n       *         // token\n       *     }\n       * });\n       * ```\n       *\n       * ## Special cases\n       *\n       * If the grammars of `inside` and `insert` have tokens with the same name, the tokens in `inside`'s grammar\n       * will be ignored.\n       *\n       * This behavior can be used to insert tokens after `before`:\n       *\n       * ```js\n       * Prism.languages.insertBefore('markup', 'comment', {\n       *     'comment': Prism.languages.markup.comment,\n       *     // tokens after 'comment'\n       * });\n       * ```\n       *\n       * ## Limitations\n       *\n       * The main problem `insertBefore` has to solve is iteration order. Since ES2015, the iteration order for object\n       * properties is guaranteed to be the insertion order (except for integer keys) but some browsers behave\n       * differently when keys are deleted and re-inserted. So `insertBefore` can't be implemented by temporarily\n       * deleting properties which is necessary to insert at arbitrary positions.\n       *\n       * To solve this problem, `insertBefore` doesn't actually insert the given tokens into the target object.\n       * Instead, it will create a new object and replace all references to the target object with the new one. This\n       * can be done without temporarily deleting properties, so the iteration order is well-defined.\n       *\n       * However, only references that can be reached from `Prism.languages` or `insert` will be replaced. I.e. if\n       * you hold the target object in a variable, then the value of the variable will not change.\n       *\n       * ```js\n       * var oldMarkup = Prism.languages.markup;\n       * var newMarkup = Prism.languages.insertBefore('markup', 'comment', { ... });\n       *\n       * assert(oldMarkup !== Prism.languages.markup);\n       * assert(newMarkup === Prism.languages.markup);\n       * ```\n       *\n       * @param {string} inside The property of `root` (e.g. a language id in `Prism.languages`) that contains the\n       * object to be modified.\n       * @param {string} before The key to insert before.\n       * @param {Grammar} insert An object containing the key-value pairs to be inserted.\n       * @param {Object<string, any>} [root] The object containing `inside`, i.e. the object that contains the\n       * object to be modified.\n       *\n       * Defaults to `Prism.languages`.\n       * @returns {Grammar} The new grammar object.\n       * @public\n       */\n      insertBefore: function insertBefore(inside, before, insert, root) {\n        root = root ||\n        /** @type {any} */\n        _.languages;\n        var grammar = root[inside];\n        /** @type {Grammar} */\n\n        var ret = {};\n\n        for (var token in grammar) {\n          if (grammar.hasOwnProperty(token)) {\n            if (token == before) {\n              for (var newToken in insert) {\n                if (insert.hasOwnProperty(newToken)) {\n                  ret[newToken] = insert[newToken];\n                }\n              }\n            } // Do not insert token which also occur in insert. See #1525\n\n\n            if (!insert.hasOwnProperty(token)) {\n              ret[token] = grammar[token];\n            }\n          }\n        }\n\n        var old = root[inside];\n        root[inside] = ret; // Update references in other language definitions\n\n        _.languages.DFS(_.languages, function (key, value) {\n          if (value === old && key != inside) {\n            this[key] = ret;\n          }\n        });\n\n        return ret;\n      },\n      // Traverse a language definition with Depth First Search\n      DFS: function DFS(o, callback, type, visited) {\n        visited = visited || {};\n        var objId = _.util.objId;\n\n        for (var i in o) {\n          if (o.hasOwnProperty(i)) {\n            callback.call(o, i, o[i], type || i);\n            var property = o[i];\n\n            var propertyType = _.util.type(property);\n\n            if (propertyType === 'Object' && !visited[objId(property)]) {\n              visited[objId(property)] = true;\n              DFS(property, callback, null, visited);\n            } else if (propertyType === 'Array' && !visited[objId(property)]) {\n              visited[objId(property)] = true;\n              DFS(property, callback, i, visited);\n            }\n          }\n        }\n      }\n    },\n    plugins: {},\n\n    /**\n     * Low-level function, only use if you know what you’re doing. It accepts a string of text as input\n     * and the language definitions to use, and returns a string with the HTML produced.\n     *\n     * The following hooks will be run:\n     * 1. `before-tokenize`\n     * 2. `after-tokenize`\n     * 3. `wrap`: On each {@link Token}.\n     *\n     * @param {string} text A string with the code to be highlighted.\n     * @param {Grammar} grammar An object containing the tokens to use.\n     *\n     * Usually a language definition like `Prism.languages.markup`.\n     * @param {string} language The name of the language definition passed to `grammar`.\n     * @returns {string} The highlighted HTML.\n     * @memberof Prism\n     * @public\n     * @example\n     * Prism.highlight('var foo = true;', Prism.languages.javascript, 'javascript');\n     */\n    highlight: function highlight(text, grammar, language) {\n      var env = {\n        code: text,\n        grammar: grammar,\n        language: language\n      };\n\n      _.hooks.run('before-tokenize', env);\n\n      env.tokens = _.tokenize(env.code, env.grammar);\n\n      _.hooks.run('after-tokenize', env);\n\n      return Token.stringify(_.util.encode(env.tokens), env.language);\n    },\n\n    /**\n     * This is the heart of Prism, and the most low-level function you can use. It accepts a string of text as input\n     * and the language definitions to use, and returns an array with the tokenized code.\n     *\n     * When the language definition includes nested tokens, the function is called recursively on each of these tokens.\n     *\n     * This method could be useful in other contexts as well, as a very crude parser.\n     *\n     * @param {string} text A string with the code to be highlighted.\n     * @param {Grammar} grammar An object containing the tokens to use.\n     *\n     * Usually a language definition like `Prism.languages.markup`.\n     * @returns {TokenStream} An array of strings and tokens, a token stream.\n     * @memberof Prism\n     * @public\n     * @example\n     * let code = `var foo = 0;`;\n     * let tokens = Prism.tokenize(code, Prism.languages.javascript);\n     * tokens.forEach(token => {\n     *     if (token instanceof Prism.Token && token.type === 'number') {\n     *         console.log(`Found numeric literal: ${token.content}`);\n     *     }\n     * });\n     */\n    tokenize: function tokenize(text, grammar) {\n      var rest = grammar.rest;\n\n      if (rest) {\n        for (var token in rest) {\n          grammar[token] = rest[token];\n        }\n\n        delete grammar.rest;\n      }\n\n      var tokenList = new LinkedList();\n      addAfter(tokenList, tokenList.head, text);\n      matchGrammar(text, tokenList, grammar, tokenList.head, 0);\n      return toArray(tokenList);\n    },\n\n    /**\n     * @namespace\n     * @memberof Prism\n     * @public\n     */\n    hooks: {\n      all: {},\n\n      /**\n       * Adds the given callback to the list of callbacks for the given hook.\n       *\n       * The callback will be invoked when the hook it is registered for is run.\n       * Hooks are usually directly run by a highlight function but you can also run hooks yourself.\n       *\n       * One callback function can be registered to multiple hooks and the same hook multiple times.\n       *\n       * @param {string} name The name of the hook.\n       * @param {HookCallback} callback The callback function which is given environment variables.\n       * @public\n       */\n      add: function add(name, callback) {\n        var hooks = _.hooks.all;\n        hooks[name] = hooks[name] || [];\n        hooks[name].push(callback);\n      },\n\n      /**\n       * Runs a hook invoking all registered callbacks with the given environment variables.\n       *\n       * Callbacks will be invoked synchronously and in the order in which they were registered.\n       *\n       * @param {string} name The name of the hook.\n       * @param {Object<string, any>} env The environment variables of the hook passed to all callbacks registered.\n       * @public\n       */\n      run: function run(name, env) {\n        var callbacks = _.hooks.all[name];\n\n        if (!callbacks || !callbacks.length) {\n          return;\n        }\n\n        for (var i = 0, callback; callback = callbacks[i++];) {\n          callback(env);\n        }\n      }\n    },\n    Token: Token\n  }; // Typescript note:\n  // The following can be used to import the Token type in JSDoc:\n  //\n  //   @typedef {InstanceType<import(\"./prism-core\")[\"Token\"]>} Token\n\n  /**\n   * Creates a new token.\n   *\n   * @param {string} type See {@link Token#type type}\n   * @param {string | TokenStream} content See {@link Token#content content}\n   * @param {string|string[]} [alias] The alias(es) of the token.\n   * @param {string} [matchedStr=\"\"] A copy of the full string this token was created from.\n   * @class\n   * @global\n   * @public\n   */\n\n  function Token(type, content, alias, matchedStr) {\n    /**\n     * The type of the token.\n     *\n     * This is usually the key of a pattern in a {@link Grammar}.\n     *\n     * @type {string}\n     * @see GrammarToken\n     * @public\n     */\n    this.type = type;\n    /**\n     * The strings or tokens contained by this token.\n     *\n     * This will be a token stream if the pattern matched also defined an `inside` grammar.\n     *\n     * @type {string | TokenStream}\n     * @public\n     */\n\n    this.content = content;\n    /**\n     * The alias(es) of the token.\n     *\n     * @type {string|string[]}\n     * @see GrammarToken\n     * @public\n     */\n\n    this.alias = alias; // Copy of the full string this token was created from\n\n    this.length = (matchedStr || '').length | 0;\n  }\n  /**\n   * A token stream is an array of strings and {@link Token Token} objects.\n   *\n   * Token streams have to fulfill a few properties that are assumed by most functions (mostly internal ones) that process\n   * them.\n   *\n   * 1. No adjacent strings.\n   * 2. No empty strings.\n   *\n   *    The only exception here is the token stream that only contains the empty string and nothing else.\n   *\n   * @typedef {Array<string | Token>} TokenStream\n   * @global\n   * @public\n   */\n\n  /**\n   * Converts the given token or token stream to an HTML representation.\n   *\n   * The following hooks will be run:\n   * 1. `wrap`: On each {@link Token}.\n   *\n   * @param {string | Token | TokenStream} o The token or token stream to be converted.\n   * @param {string} language The name of current language.\n   * @returns {string} The HTML representation of the token or token stream.\n   * @memberof Token\n   * @static\n   */\n\n\n  Token.stringify = function stringify(o, language) {\n    if (typeof o == 'string') {\n      return o;\n    }\n\n    if (Array.isArray(o)) {\n      var s = '';\n      o.forEach(function (e) {\n        s += stringify(e, language);\n      });\n      return s;\n    }\n\n    var env = {\n      type: o.type,\n      content: stringify(o.content, language),\n      tag: 'span',\n      classes: ['token', o.type],\n      attributes: {},\n      language: language\n    };\n    var aliases = o.alias;\n\n    if (aliases) {\n      if (Array.isArray(aliases)) {\n        Array.prototype.push.apply(env.classes, aliases);\n      } else {\n        env.classes.push(aliases);\n      }\n    }\n\n    _.hooks.run('wrap', env);\n\n    var attributes = '';\n\n    for (var name in env.attributes) {\n      attributes += ' ' + name + '=\"' + (env.attributes[name] || '').replace(/\"/g, '&quot;') + '\"';\n    }\n\n    return '<' + env.tag + ' class=\"' + env.classes.join(' ') + '\"' + attributes + '>' + env.content + '</' + env.tag + '>';\n  };\n  /**\n   * @param {RegExp} pattern\n   * @param {number} pos\n   * @param {string} text\n   * @param {boolean} lookbehind\n   * @returns {RegExpExecArray | null}\n   */\n\n\n  function matchPattern(pattern, pos, text, lookbehind) {\n    pattern.lastIndex = pos;\n    var match = pattern.exec(text);\n\n    if (match && lookbehind && match[1]) {\n      // change the match to remove the text matched by the Prism lookbehind group\n      var lookbehindLength = match[1].length;\n      match.index += lookbehindLength;\n      match[0] = match[0].slice(lookbehindLength);\n    }\n\n    return match;\n  }\n  /**\n   * @param {string} text\n   * @param {LinkedList<string | Token>} tokenList\n   * @param {any} grammar\n   * @param {LinkedListNode<string | Token>} startNode\n   * @param {number} startPos\n   * @param {RematchOptions} [rematch]\n   * @returns {void}\n   * @private\n   *\n   * @typedef RematchOptions\n   * @property {string} cause\n   * @property {number} reach\n   */\n\n\n  function matchGrammar(text, tokenList, grammar, startNode, startPos, rematch) {\n    for (var token in grammar) {\n      if (!grammar.hasOwnProperty(token) || !grammar[token]) {\n        continue;\n      }\n\n      var patterns = grammar[token];\n      patterns = Array.isArray(patterns) ? patterns : [patterns];\n\n      for (var j = 0; j < patterns.length; ++j) {\n        if (rematch && rematch.cause == token + ',' + j) {\n          return;\n        }\n\n        var patternObj = patterns[j];\n        var inside = patternObj.inside;\n        var lookbehind = !!patternObj.lookbehind;\n        var greedy = !!patternObj.greedy;\n        var alias = patternObj.alias;\n\n        if (greedy && !patternObj.pattern.global) {\n          // Without the global flag, lastIndex won't work\n          var flags = patternObj.pattern.toString().match(/[imsuy]*$/)[0];\n          patternObj.pattern = RegExp(patternObj.pattern.source, flags + 'g');\n        }\n        /** @type {RegExp} */\n\n\n        var pattern = patternObj.pattern || patternObj;\n\n        for ( // iterate the token list and keep track of the current token/string position\n        var currentNode = startNode.next, pos = startPos; currentNode !== tokenList.tail; pos += currentNode.value.length, currentNode = currentNode.next) {\n          if (rematch && pos >= rematch.reach) {\n            break;\n          }\n\n          var str = currentNode.value;\n\n          if (tokenList.length > text.length) {\n            // Something went terribly wrong, ABORT, ABORT!\n            return;\n          }\n\n          if (str instanceof Token) {\n            continue;\n          }\n\n          var removeCount = 1; // this is the to parameter of removeBetween\n\n          var match;\n\n          if (greedy) {\n            match = matchPattern(pattern, pos, text, lookbehind);\n\n            if (!match || match.index >= text.length) {\n              break;\n            }\n\n            var from = match.index;\n            var to = match.index + match[0].length;\n            var p = pos; // find the node that contains the match\n\n            p += currentNode.value.length;\n\n            while (from >= p) {\n              currentNode = currentNode.next;\n              p += currentNode.value.length;\n            } // adjust pos (and p)\n\n\n            p -= currentNode.value.length;\n            pos = p; // the current node is a Token, then the match starts inside another Token, which is invalid\n\n            if (currentNode.value instanceof Token) {\n              continue;\n            } // find the last node which is affected by this match\n\n\n            for (var k = currentNode; k !== tokenList.tail && (p < to || typeof k.value === 'string'); k = k.next) {\n              removeCount++;\n              p += k.value.length;\n            }\n\n            removeCount--; // replace with the new match\n\n            str = text.slice(pos, p);\n            match.index -= pos;\n          } else {\n            match = matchPattern(pattern, 0, str, lookbehind);\n\n            if (!match) {\n              continue;\n            }\n          } // eslint-disable-next-line no-redeclare\n\n\n          var from = match.index;\n          var matchStr = match[0];\n          var before = str.slice(0, from);\n          var after = str.slice(from + matchStr.length);\n          var reach = pos + str.length;\n\n          if (rematch && reach > rematch.reach) {\n            rematch.reach = reach;\n          }\n\n          var removeFrom = currentNode.prev;\n\n          if (before) {\n            removeFrom = addAfter(tokenList, removeFrom, before);\n            pos += before.length;\n          }\n\n          removeRange(tokenList, removeFrom, removeCount);\n          var wrapped = new Token(token, inside ? _.tokenize(matchStr, inside) : matchStr, alias, matchStr);\n          currentNode = addAfter(tokenList, removeFrom, wrapped);\n\n          if (after) {\n            addAfter(tokenList, currentNode, after);\n          }\n\n          if (removeCount > 1) {\n            // at least one Token object was removed, so we have to do some rematching\n            // this can only happen if the current pattern is greedy\n\n            /** @type {RematchOptions} */\n            var nestedRematch = {\n              cause: token + ',' + j,\n              reach: reach\n            };\n            matchGrammar(text, tokenList, grammar, currentNode.prev, pos, nestedRematch); // the reach might have been extended because of the rematching\n\n            if (rematch && nestedRematch.reach > rematch.reach) {\n              rematch.reach = nestedRematch.reach;\n            }\n          }\n        }\n      }\n    }\n  }\n  /**\n   * @typedef LinkedListNode\n   * @property {T} value\n   * @property {LinkedListNode<T> | null} prev The previous node.\n   * @property {LinkedListNode<T> | null} next The next node.\n   * @template T\n   * @private\n   */\n\n  /**\n   * @template T\n   * @private\n   */\n\n\n  function LinkedList() {\n    /** @type {LinkedListNode<T>} */\n    var head = {\n      value: null,\n      prev: null,\n      next: null\n    };\n    /** @type {LinkedListNode<T>} */\n\n    var tail = {\n      value: null,\n      prev: head,\n      next: null\n    };\n    head.next = tail;\n    /** @type {LinkedListNode<T>} */\n\n    this.head = head;\n    /** @type {LinkedListNode<T>} */\n\n    this.tail = tail;\n    this.length = 0;\n  }\n  /**\n   * Adds a new node with the given value to the list.\n   *\n   * @param {LinkedList<T>} list\n   * @param {LinkedListNode<T>} node\n   * @param {T} value\n   * @returns {LinkedListNode<T>} The added node.\n   * @template T\n   */\n\n\n  function addAfter(list, node, value) {\n    // assumes that node != list.tail && values.length >= 0\n    var next = node.next;\n    var newNode = {\n      value: value,\n      prev: node,\n      next: next\n    };\n    node.next = newNode;\n    next.prev = newNode;\n    list.length++;\n    return newNode;\n  }\n  /**\n   * Removes `count` nodes after the given node. The given node will not be removed.\n   *\n   * @param {LinkedList<T>} list\n   * @param {LinkedListNode<T>} node\n   * @param {number} count\n   * @template T\n   */\n\n\n  function removeRange(list, node, count) {\n    var next = node.next;\n\n    for (var i = 0; i < count && next !== list.tail; i++) {\n      next = next.next;\n    }\n\n    node.next = next;\n    next.prev = node;\n    list.length -= i;\n  }\n  /**\n   * @param {LinkedList<T>} list\n   * @returns {T[]}\n   * @template T\n   */\n\n\n  function toArray(list) {\n    var array = [];\n    var node = list.head.next;\n\n    while (node !== list.tail) {\n      array.push(node.value);\n      node = node.next;\n    }\n\n    return array;\n  }\n\n  return _;\n}();\n\nvar prism = Prism;\nPrism.default = Prism;\n/* This content is auto-generated to include some prismjs language components: */\n\n/* \"prismjs/components/prism-markup\" */\n\nprism.languages.markup = {\n  'comment': {\n    pattern: /<!--(?:(?!<!--)[\\s\\S])*?-->/,\n    greedy: true\n  },\n  'prolog': {\n    pattern: /<\\?[\\s\\S]+?\\?>/,\n    greedy: true\n  },\n  'doctype': {\n    // https://www.w3.org/TR/xml/#NT-doctypedecl\n    pattern: /<!DOCTYPE(?:[^>\"'[\\]]|\"[^\"]*\"|'[^']*')+(?:\\[(?:[^<\"'\\]]|\"[^\"]*\"|'[^']*'|<(?!!--)|<!--(?:[^-]|-(?!->))*-->)*\\]\\s*)?>/i,\n    greedy: true,\n    inside: {\n      'internal-subset': {\n        pattern: /(^[^\\[]*\\[)[\\s\\S]+(?=\\]>$)/,\n        lookbehind: true,\n        greedy: true,\n        inside: null // see below\n\n      },\n      'string': {\n        pattern: /\"[^\"]*\"|'[^']*'/,\n        greedy: true\n      },\n      'punctuation': /^<!|>$|[[\\]]/,\n      'doctype-tag': /^DOCTYPE/i,\n      'name': /[^\\s<>'\"]+/\n    }\n  },\n  'cdata': {\n    pattern: /<!\\[CDATA\\[[\\s\\S]*?\\]\\]>/i,\n    greedy: true\n  },\n  'tag': {\n    pattern: /<\\/?(?!\\d)[^\\s>\\/=$<%]+(?:\\s(?:\\s*[^\\s>\\/=]+(?:\\s*=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\">=]+(?=[\\s>]))|(?=[\\s/>])))+)?\\s*\\/?>/,\n    greedy: true,\n    inside: {\n      'tag': {\n        pattern: /^<\\/?[^\\s>\\/]+/,\n        inside: {\n          'punctuation': /^<\\/?/,\n          'namespace': /^[^\\s>\\/:]+:/\n        }\n      },\n      'special-attr': [],\n      'attr-value': {\n        pattern: /=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\">=]+)/,\n        inside: {\n          'punctuation': [{\n            pattern: /^=/,\n            alias: 'attr-equals'\n          }, /\"|'/]\n        }\n      },\n      'punctuation': /\\/?>/,\n      'attr-name': {\n        pattern: /[^\\s>\\/]+/,\n        inside: {\n          'namespace': /^[^\\s>\\/:]+:/\n        }\n      }\n    }\n  },\n  'entity': [{\n    pattern: /&[\\da-z]{1,8};/i,\n    alias: 'named-entity'\n  }, /&#x?[\\da-f]{1,8};/i]\n};\nprism.languages.markup['tag'].inside['attr-value'].inside['entity'] = prism.languages.markup['entity'];\nprism.languages.markup['doctype'].inside['internal-subset'].inside = prism.languages.markup; // Plugin to make entity title show the real entity, idea by Roman Komarov\n\nprism.hooks.add('wrap', function (env) {\n  if (env.type === 'entity') {\n    env.attributes['title'] = env.content.replace(/&amp;/, '&');\n  }\n});\nObject.defineProperty(prism.languages.markup.tag, 'addInlined', {\n  /**\n   * Adds an inlined language to markup.\n   *\n   * An example of an inlined language is CSS with `<style>` tags.\n   *\n   * @param {string} tagName The name of the tag that contains the inlined language. This name will be treated as\n   * case insensitive.\n   * @param {string} lang The language key.\n   * @example\n   * addInlined('style', 'css');\n   */\n  value: function addInlined(tagName, lang) {\n    var includedCdataInside = {};\n    includedCdataInside['language-' + lang] = {\n      pattern: /(^<!\\[CDATA\\[)[\\s\\S]+?(?=\\]\\]>$)/i,\n      lookbehind: true,\n      inside: prism.languages[lang]\n    };\n    includedCdataInside['cdata'] = /^<!\\[CDATA\\[|\\]\\]>$/i;\n    var inside = {\n      'included-cdata': {\n        pattern: /<!\\[CDATA\\[[\\s\\S]*?\\]\\]>/i,\n        inside: includedCdataInside\n      }\n    };\n    inside['language-' + lang] = {\n      pattern: /[\\s\\S]+/,\n      inside: prism.languages[lang]\n    };\n    var def = {};\n    def[tagName] = {\n      pattern: RegExp(/(<__[^>]*>)(?:<!\\[CDATA\\[(?:[^\\]]|\\](?!\\]>))*\\]\\]>|(?!<!\\[CDATA\\[)[\\s\\S])*?(?=<\\/__>)/.source.replace(/__/g, function () {\n        return tagName;\n      }), 'i'),\n      lookbehind: true,\n      greedy: true,\n      inside: inside\n    };\n    prism.languages.insertBefore('markup', 'cdata', def);\n  }\n});\nObject.defineProperty(prism.languages.markup.tag, 'addAttribute', {\n  /**\n   * Adds an pattern to highlight languages embedded in HTML attributes.\n   *\n   * An example of an inlined language is CSS with `style` attributes.\n   *\n   * @param {string} attrName The name of the tag that contains the inlined language. This name will be treated as\n   * case insensitive.\n   * @param {string} lang The language key.\n   * @example\n   * addAttribute('style', 'css');\n   */\n  value: function value(attrName, lang) {\n    prism.languages.markup.tag.inside['special-attr'].push({\n      pattern: RegExp(/(^|[\"'\\s])/.source + '(?:' + attrName + ')' + /\\s*=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\">=]+(?=[\\s>]))/.source, 'i'),\n      lookbehind: true,\n      inside: {\n        'attr-name': /^[^\\s=]+/,\n        'attr-value': {\n          pattern: /=[\\s\\S]+/,\n          inside: {\n            'value': {\n              pattern: /(^=\\s*([\"']|(?![\"'])))\\S[\\s\\S]*(?=\\2$)/,\n              lookbehind: true,\n              alias: [lang, 'language-' + lang],\n              inside: prism.languages[lang]\n            },\n            'punctuation': [{\n              pattern: /^=/,\n              alias: 'attr-equals'\n            }, /\"|'/]\n          }\n        }\n      }\n    });\n  }\n});\nprism.languages.html = prism.languages.markup;\nprism.languages.mathml = prism.languages.markup;\nprism.languages.svg = prism.languages.markup;\nprism.languages.xml = prism.languages.extend('markup', {});\nprism.languages.ssml = prism.languages.xml;\nprism.languages.atom = prism.languages.xml;\nprism.languages.rss = prism.languages.xml;\n/* \"prismjs/components/prism-bash\" */\n\n(function (Prism) {\n  // $ set | grep '^[A-Z][^[:space:]]*=' | cut -d= -f1 | tr '\\n' '|'\n  // + LC_ALL, RANDOM, REPLY, SECONDS.\n  // + make sure PS1..4 are here as they are not always set,\n  // - some useless things.\n  var envVars = '\\\\b(?:BASH|BASHOPTS|BASH_ALIASES|BASH_ARGC|BASH_ARGV|BASH_CMDS|BASH_COMPLETION_COMPAT_DIR|BASH_LINENO|BASH_REMATCH|BASH_SOURCE|BASH_VERSINFO|BASH_VERSION|COLORTERM|COLUMNS|COMP_WORDBREAKS|DBUS_SESSION_BUS_ADDRESS|DEFAULTS_PATH|DESKTOP_SESSION|DIRSTACK|DISPLAY|EUID|GDMSESSION|GDM_LANG|GNOME_KEYRING_CONTROL|GNOME_KEYRING_PID|GPG_AGENT_INFO|GROUPS|HISTCONTROL|HISTFILE|HISTFILESIZE|HISTSIZE|HOME|HOSTNAME|HOSTTYPE|IFS|INSTANCE|JOB|LANG|LANGUAGE|LC_ADDRESS|LC_ALL|LC_IDENTIFICATION|LC_MEASUREMENT|LC_MONETARY|LC_NAME|LC_NUMERIC|LC_PAPER|LC_TELEPHONE|LC_TIME|LESSCLOSE|LESSOPEN|LINES|LOGNAME|LS_COLORS|MACHTYPE|MAILCHECK|MANDATORY_PATH|NO_AT_BRIDGE|OLDPWD|OPTERR|OPTIND|ORBIT_SOCKETDIR|OSTYPE|PAPERSIZE|PATH|PIPESTATUS|PPID|PS1|PS2|PS3|PS4|PWD|RANDOM|REPLY|SECONDS|SELINUX_INIT|SESSION|SESSIONTYPE|SESSION_MANAGER|SHELL|SHELLOPTS|SHLVL|SSH_AUTH_SOCK|TERM|UID|UPSTART_EVENTS|UPSTART_INSTANCE|UPSTART_JOB|UPSTART_SESSION|USER|WINDOWID|XAUTHORITY|XDG_CONFIG_DIRS|XDG_CURRENT_DESKTOP|XDG_DATA_DIRS|XDG_GREETER_DATA_DIR|XDG_MENU_PREFIX|XDG_RUNTIME_DIR|XDG_SEAT|XDG_SEAT_PATH|XDG_SESSION_DESKTOP|XDG_SESSION_ID|XDG_SESSION_PATH|XDG_SESSION_TYPE|XDG_VTNR|XMODIFIERS)\\\\b';\n  var commandAfterHeredoc = {\n    pattern: /(^([\"']?)\\w+\\2)[ \\t]+\\S.*/,\n    lookbehind: true,\n    alias: 'punctuation',\n    // this looks reasonably well in all themes\n    inside: null // see below\n\n  };\n  var insideString = {\n    'bash': commandAfterHeredoc,\n    'environment': {\n      pattern: RegExp('\\\\$' + envVars),\n      alias: 'constant'\n    },\n    'variable': [// [0]: Arithmetic Environment\n    {\n      pattern: /\\$?\\(\\([\\s\\S]+?\\)\\)/,\n      greedy: true,\n      inside: {\n        // If there is a $ sign at the beginning highlight $(( and )) as variable\n        'variable': [{\n          pattern: /(^\\$\\(\\([\\s\\S]+)\\)\\)/,\n          lookbehind: true\n        }, /^\\$\\(\\(/],\n        'number': /\\b0x[\\dA-Fa-f]+\\b|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:[Ee]-?\\d+)?/,\n        // Operators according to https://www.gnu.org/software/bash/manual/bashref.html#Shell-Arithmetic\n        'operator': /--|\\+\\+|\\*\\*=?|<<=?|>>=?|&&|\\|\\||[=!+\\-*/%<>^&|]=?|[?~:]/,\n        // If there is no $ sign at the beginning highlight (( and )) as punctuation\n        'punctuation': /\\(\\(?|\\)\\)?|,|;/\n      }\n    }, // [1]: Command Substitution\n    {\n      pattern: /\\$\\((?:\\([^)]+\\)|[^()])+\\)|`[^`]+`/,\n      greedy: true,\n      inside: {\n        'variable': /^\\$\\(|^`|\\)$|`$/\n      }\n    }, // [2]: Brace expansion\n    {\n      pattern: /\\$\\{[^}]+\\}/,\n      greedy: true,\n      inside: {\n        'operator': /:[-=?+]?|[!\\/]|##?|%%?|\\^\\^?|,,?/,\n        'punctuation': /[\\[\\]]/,\n        'environment': {\n          pattern: RegExp('(\\\\{)' + envVars),\n          lookbehind: true,\n          alias: 'constant'\n        }\n      }\n    }, /\\$(?:\\w+|[#?*!@$])/],\n    // Escape sequences from echo and printf's manuals, and escaped quotes.\n    'entity': /\\\\(?:[abceEfnrtv\\\\\"]|O?[0-7]{1,3}|U[0-9a-fA-F]{8}|u[0-9a-fA-F]{4}|x[0-9a-fA-F]{1,2})/\n  };\n  Prism.languages.bash = {\n    'shebang': {\n      pattern: /^#!\\s*\\/.*/,\n      alias: 'important'\n    },\n    'comment': {\n      pattern: /(^|[^\"{\\\\$])#.*/,\n      lookbehind: true\n    },\n    'function-name': [// a) function foo {\n    // b) foo() {\n    // c) function foo() {\n    // but not “foo {”\n    {\n      // a) and c)\n      pattern: /(\\bfunction\\s+)[\\w-]+(?=(?:\\s*\\(?:\\s*\\))?\\s*\\{)/,\n      lookbehind: true,\n      alias: 'function'\n    }, {\n      // b)\n      pattern: /\\b[\\w-]+(?=\\s*\\(\\s*\\)\\s*\\{)/,\n      alias: 'function'\n    }],\n    // Highlight variable names as variables in for and select beginnings.\n    'for-or-select': {\n      pattern: /(\\b(?:for|select)\\s+)\\w+(?=\\s+in\\s)/,\n      alias: 'variable',\n      lookbehind: true\n    },\n    // Highlight variable names as variables in the left-hand part\n    // of assignments (“=” and “+=”).\n    'assign-left': {\n      pattern: /(^|[\\s;|&]|[<>]\\()\\w+(?=\\+?=)/,\n      inside: {\n        'environment': {\n          pattern: RegExp('(^|[\\\\s;|&]|[<>]\\\\()' + envVars),\n          lookbehind: true,\n          alias: 'constant'\n        }\n      },\n      alias: 'variable',\n      lookbehind: true\n    },\n    'string': [// Support for Here-documents https://en.wikipedia.org/wiki/Here_document\n    {\n      pattern: /((?:^|[^<])<<-?\\s*)(\\w+)\\s[\\s\\S]*?(?:\\r?\\n|\\r)\\2/,\n      lookbehind: true,\n      greedy: true,\n      inside: insideString\n    }, // Here-document with quotes around the tag\n    // → No expansion (so no “inside”).\n    {\n      pattern: /((?:^|[^<])<<-?\\s*)([\"'])(\\w+)\\2\\s[\\s\\S]*?(?:\\r?\\n|\\r)\\3/,\n      lookbehind: true,\n      greedy: true,\n      inside: {\n        'bash': commandAfterHeredoc\n      }\n    }, // “Normal” string\n    {\n      // https://www.gnu.org/software/bash/manual/html_node/Double-Quotes.html\n      pattern: /(^|[^\\\\](?:\\\\\\\\)*)\"(?:\\\\[\\s\\S]|\\$\\([^)]+\\)|\\$(?!\\()|`[^`]+`|[^\"\\\\`$])*\"/,\n      lookbehind: true,\n      greedy: true,\n      inside: insideString\n    }, {\n      // https://www.gnu.org/software/bash/manual/html_node/Single-Quotes.html\n      pattern: /(^|[^$\\\\])'[^']*'/,\n      lookbehind: true,\n      greedy: true\n    }, {\n      // https://www.gnu.org/software/bash/manual/html_node/ANSI_002dC-Quoting.html\n      pattern: /\\$'(?:[^'\\\\]|\\\\[\\s\\S])*'/,\n      greedy: true,\n      inside: {\n        'entity': insideString.entity\n      }\n    }],\n    'environment': {\n      pattern: RegExp('\\\\$?' + envVars),\n      alias: 'constant'\n    },\n    'variable': insideString.variable,\n    'function': {\n      pattern: /(^|[\\s;|&]|[<>]\\()(?:add|apropos|apt|apt-cache|apt-get|aptitude|aspell|automysqlbackup|awk|basename|bash|bc|bconsole|bg|bzip2|cal|cat|cfdisk|chgrp|chkconfig|chmod|chown|chroot|cksum|clear|cmp|column|comm|composer|cp|cron|crontab|csplit|curl|cut|date|dc|dd|ddrescue|debootstrap|df|diff|diff3|dig|dir|dircolors|dirname|dirs|dmesg|docker|docker-compose|du|egrep|eject|env|ethtool|expand|expect|expr|fdformat|fdisk|fg|fgrep|file|find|fmt|fold|format|free|fsck|ftp|fuser|gawk|git|gparted|grep|groupadd|groupdel|groupmod|groups|grub-mkconfig|gzip|halt|head|hg|history|host|hostname|htop|iconv|id|ifconfig|ifdown|ifup|import|install|ip|jobs|join|kill|killall|less|link|ln|locate|logname|logrotate|look|lpc|lpr|lprint|lprintd|lprintq|lprm|ls|lsof|lynx|make|man|mc|mdadm|mkconfig|mkdir|mke2fs|mkfifo|mkfs|mkisofs|mknod|mkswap|mmv|more|most|mount|mtools|mtr|mutt|mv|nano|nc|netstat|nice|nl|node|nohup|notify-send|npm|nslookup|op|open|parted|passwd|paste|pathchk|ping|pkill|pnpm|podman|podman-compose|popd|pr|printcap|printenv|ps|pushd|pv|quota|quotacheck|quotactl|ram|rar|rcp|reboot|remsync|rename|renice|rev|rm|rmdir|rpm|rsync|scp|screen|sdiff|sed|sendmail|seq|service|sftp|sh|shellcheck|shuf|shutdown|sleep|slocate|sort|split|ssh|stat|strace|su|sudo|sum|suspend|swapon|sync|tac|tail|tar|tee|time|timeout|top|touch|tr|traceroute|tsort|tty|umount|uname|unexpand|uniq|units|unrar|unshar|unzip|update-grub|uptime|useradd|userdel|usermod|users|uudecode|uuencode|v|vcpkg|vdir|vi|vim|virsh|vmstat|wait|watch|wc|wget|whereis|which|who|whoami|write|xargs|xdg-open|yarn|yes|zenity|zip|zsh|zypper)(?=$|[)\\s;|&])/,\n      lookbehind: true\n    },\n    'keyword': {\n      pattern: /(^|[\\s;|&]|[<>]\\()(?:case|do|done|elif|else|esac|fi|for|function|if|in|select|then|until|while)(?=$|[)\\s;|&])/,\n      lookbehind: true\n    },\n    // https://www.gnu.org/software/bash/manual/html_node/Shell-Builtin-Commands.html\n    'builtin': {\n      pattern: /(^|[\\s;|&]|[<>]\\()(?:\\.|:|alias|bind|break|builtin|caller|cd|command|continue|declare|echo|enable|eval|exec|exit|export|getopts|hash|help|let|local|logout|mapfile|printf|pwd|read|readarray|readonly|return|set|shift|shopt|source|test|times|trap|type|typeset|ulimit|umask|unalias|unset)(?=$|[)\\s;|&])/,\n      lookbehind: true,\n      // Alias added to make those easier to distinguish from strings.\n      alias: 'class-name'\n    },\n    'boolean': {\n      pattern: /(^|[\\s;|&]|[<>]\\()(?:false|true)(?=$|[)\\s;|&])/,\n      lookbehind: true\n    },\n    'file-descriptor': {\n      pattern: /\\B&\\d\\b/,\n      alias: 'important'\n    },\n    'operator': {\n      // Lots of redirections here, but not just that.\n      pattern: /\\d?<>|>\\||\\+=|=[=~]?|!=?|<<[<-]?|[&\\d]?>>|\\d[<>]&?|[<>][&=]?|&[>&]?|\\|[&|]?/,\n      inside: {\n        'file-descriptor': {\n          pattern: /^\\d/,\n          alias: 'important'\n        }\n      }\n    },\n    'punctuation': /\\$?\\(\\(?|\\)\\)?|\\.\\.|[{}[\\];\\\\]/,\n    'number': {\n      pattern: /(^|\\s)(?:[1-9]\\d*|0)(?:[.,]\\d+)?\\b/,\n      lookbehind: true\n    }\n  };\n  commandAfterHeredoc.inside = Prism.languages.bash;\n  /* Patterns in command substitution. */\n\n  var toBeCopied = ['comment', 'function-name', 'for-or-select', 'assign-left', 'string', 'environment', 'function', 'keyword', 'builtin', 'boolean', 'file-descriptor', 'operator', 'punctuation', 'number'];\n  var inside = insideString.variable[1].inside;\n\n  for (var i = 0; i < toBeCopied.length; i++) {\n    inside[toBeCopied[i]] = Prism.languages.bash[toBeCopied[i]];\n  }\n\n  Prism.languages.shell = Prism.languages.bash;\n})(prism);\n/* \"prismjs/components/prism-clike\" */\n\n\nprism.languages.clike = {\n  'comment': [{\n    pattern: /(^|[^\\\\])\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,\n    lookbehind: true,\n    greedy: true\n  }, {\n    pattern: /(^|[^\\\\:])\\/\\/.*/,\n    lookbehind: true,\n    greedy: true\n  }],\n  'string': {\n    pattern: /([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,\n    greedy: true\n  },\n  'class-name': {\n    pattern: /(\\b(?:class|extends|implements|instanceof|interface|new|trait)\\s+|\\bcatch\\s+\\()[\\w.\\\\]+/i,\n    lookbehind: true,\n    inside: {\n      'punctuation': /[.\\\\]/\n    }\n  },\n  'keyword': /\\b(?:break|catch|continue|do|else|finally|for|function|if|in|instanceof|new|null|return|throw|try|while)\\b/,\n  'boolean': /\\b(?:false|true)\\b/,\n  'function': /\\b\\w+(?=\\()/,\n  'number': /\\b0x[\\da-f]+\\b|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:e[+-]?\\d+)?/i,\n  'operator': /[<>]=?|[!=]=?=?|--?|\\+\\+?|&&?|\\|\\|?|[?*/~^%]/,\n  'punctuation': /[{}[\\];(),.:]/\n};\n/* \"prismjs/components/prism-c\" */\n\nprism.languages.c = prism.languages.extend('clike', {\n  'comment': {\n    pattern: /\\/\\/(?:[^\\r\\n\\\\]|\\\\(?:\\r\\n?|\\n|(?![\\r\\n])))*|\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,\n    greedy: true\n  },\n  'string': {\n    // https://en.cppreference.com/w/c/language/string_literal\n    pattern: /\"(?:\\\\(?:\\r\\n|[\\s\\S])|[^\"\\\\\\r\\n])*\"/,\n    greedy: true\n  },\n  'class-name': {\n    pattern: /(\\b(?:enum|struct)\\s+(?:__attribute__\\s*\\(\\([\\s\\S]*?\\)\\)\\s*)?)\\w+|\\b[a-z]\\w*_t\\b/,\n    lookbehind: true\n  },\n  'keyword': /\\b(?:_Alignas|_Alignof|_Atomic|_Bool|_Complex|_Generic|_Imaginary|_Noreturn|_Static_assert|_Thread_local|__attribute__|asm|auto|break|case|char|const|continue|default|do|double|else|enum|extern|float|for|goto|if|inline|int|long|register|return|short|signed|sizeof|static|struct|switch|typedef|typeof|union|unsigned|void|volatile|while)\\b/,\n  'function': /\\b[a-z_]\\w*(?=\\s*\\()/i,\n  'number': /(?:\\b0x(?:[\\da-f]+(?:\\.[\\da-f]*)?|\\.[\\da-f]+)(?:p[+-]?\\d+)?|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:e[+-]?\\d+)?)[ful]{0,4}/i,\n  'operator': />>=?|<<=?|->|([-+&|:])\\1|[?:~]|[-+*/%&|^!=<>]=?/\n});\nprism.languages.insertBefore('c', 'string', {\n  'char': {\n    // https://en.cppreference.com/w/c/language/character_constant\n    pattern: /'(?:\\\\(?:\\r\\n|[\\s\\S])|[^'\\\\\\r\\n]){0,32}'/,\n    greedy: true\n  }\n});\nprism.languages.insertBefore('c', 'string', {\n  'macro': {\n    // allow for multiline macro definitions\n    // spaces after the # character compile fine with gcc\n    pattern: /(^[\\t ]*)#\\s*[a-z](?:[^\\r\\n\\\\/]|\\/(?!\\*)|\\/\\*(?:[^*]|\\*(?!\\/))*\\*\\/|\\\\(?:\\r\\n|[\\s\\S]))*/im,\n    lookbehind: true,\n    greedy: true,\n    alias: 'property',\n    inside: {\n      'string': [{\n        // highlight the path of the include statement as a string\n        pattern: /^(#\\s*include\\s*)<[^>]+>/,\n        lookbehind: true\n      }, prism.languages.c['string']],\n      'char': prism.languages.c['char'],\n      'comment': prism.languages.c['comment'],\n      'macro-name': [{\n        pattern: /(^#\\s*define\\s+)\\w+\\b(?!\\()/i,\n        lookbehind: true\n      }, {\n        pattern: /(^#\\s*define\\s+)\\w+\\b(?=\\()/i,\n        lookbehind: true,\n        alias: 'function'\n      }],\n      // highlight macro directives as keywords\n      'directive': {\n        pattern: /^(#\\s*)[a-z]+/,\n        lookbehind: true,\n        alias: 'keyword'\n      },\n      'directive-hash': /^#/,\n      'punctuation': /##|\\\\(?=[\\r\\n])/,\n      'expression': {\n        pattern: /\\S[\\s\\S]*/,\n        inside: prism.languages.c\n      }\n    }\n  }\n});\nprism.languages.insertBefore('c', 'function', {\n  // highlight predefined macros as constants\n  'constant': /\\b(?:EOF|NULL|SEEK_CUR|SEEK_END|SEEK_SET|__DATE__|__FILE__|__LINE__|__TIMESTAMP__|__TIME__|__func__|stderr|stdin|stdout)\\b/\n});\ndelete prism.languages.c['boolean'];\n/* \"prismjs/components/prism-cpp\" */\n\n(function (Prism) {\n  var keyword = /\\b(?:alignas|alignof|asm|auto|bool|break|case|catch|char|char16_t|char32_t|char8_t|class|co_await|co_return|co_yield|compl|concept|const|const_cast|consteval|constexpr|constinit|continue|decltype|default|delete|do|double|dynamic_cast|else|enum|explicit|export|extern|final|float|for|friend|goto|if|import|inline|int|int16_t|int32_t|int64_t|int8_t|long|module|mutable|namespace|new|noexcept|nullptr|operator|override|private|protected|public|register|reinterpret_cast|requires|return|short|signed|sizeof|static|static_assert|static_cast|struct|switch|template|this|thread_local|throw|try|typedef|typeid|typename|uint16_t|uint32_t|uint64_t|uint8_t|union|unsigned|using|virtual|void|volatile|wchar_t|while)\\b/;\n  var modName = /\\b(?!<keyword>)\\w+(?:\\s*\\.\\s*\\w+)*\\b/.source.replace(/<keyword>/g, function () {\n    return keyword.source;\n  });\n  Prism.languages.cpp = Prism.languages.extend('c', {\n    'class-name': [{\n      pattern: RegExp(/(\\b(?:class|concept|enum|struct|typename)\\s+)(?!<keyword>)\\w+/.source.replace(/<keyword>/g, function () {\n        return keyword.source;\n      })),\n      lookbehind: true\n    }, // This is intended to capture the class name of method implementations like:\n    //   void foo::bar() const {}\n    // However! The `foo` in the above example could also be a namespace, so we only capture the class name if\n    // it starts with an uppercase letter. This approximation should give decent results.\n    /\\b[A-Z]\\w*(?=\\s*::\\s*\\w+\\s*\\()/, // This will capture the class name before destructors like:\n    //   Foo::~Foo() {}\n    /\\b[A-Z_]\\w*(?=\\s*::\\s*~\\w+\\s*\\()/i, // This also intends to capture the class name of method implementations but here the class has template\n    // parameters, so it can't be a namespace (until C++ adds generic namespaces).\n    /\\b\\w+(?=\\s*<(?:[^<>]|<(?:[^<>]|<[^<>]*>)*>)*>\\s*::\\s*\\w+\\s*\\()/],\n    'keyword': keyword,\n    'number': {\n      pattern: /(?:\\b0b[01']+|\\b0x(?:[\\da-f']+(?:\\.[\\da-f']*)?|\\.[\\da-f']+)(?:p[+-]?[\\d']+)?|(?:\\b[\\d']+(?:\\.[\\d']*)?|\\B\\.[\\d']+)(?:e[+-]?[\\d']+)?)[ful]{0,4}/i,\n      greedy: true\n    },\n    'operator': />>=?|<<=?|->|--|\\+\\+|&&|\\|\\||[?:~]|<=>|[-+*/%&|^!=<>]=?|\\b(?:and|and_eq|bitand|bitor|not|not_eq|or|or_eq|xor|xor_eq)\\b/,\n    'boolean': /\\b(?:false|true)\\b/\n  });\n  Prism.languages.insertBefore('cpp', 'string', {\n    'module': {\n      // https://en.cppreference.com/w/cpp/language/modules\n      pattern: RegExp(/(\\b(?:import|module)\\s+)/.source + '(?:' + // header-name\n      /\"(?:\\\\(?:\\r\\n|[\\s\\S])|[^\"\\\\\\r\\n])*\"|<[^<>\\r\\n]*>/.source + '|' + // module name or partition or both\n      /<mod-name>(?:\\s*:\\s*<mod-name>)?|:\\s*<mod-name>/.source.replace(/<mod-name>/g, function () {\n        return modName;\n      }) + ')'),\n      lookbehind: true,\n      greedy: true,\n      inside: {\n        'string': /^[<\"][\\s\\S]+/,\n        'operator': /:/,\n        'punctuation': /\\./\n      }\n    },\n    'raw-string': {\n      pattern: /R\"([^()\\\\ ]{0,16})\\([\\s\\S]*?\\)\\1\"/,\n      alias: 'string',\n      greedy: true\n    }\n  });\n  Prism.languages.insertBefore('cpp', 'keyword', {\n    'generic-function': {\n      pattern: /\\b(?!operator\\b)[a-z_]\\w*\\s*<(?:[^<>]|<[^<>]*>)*>(?=\\s*\\()/i,\n      inside: {\n        'function': /^\\w+/,\n        'generic': {\n          pattern: /<[\\s\\S]+/,\n          alias: 'class-name',\n          inside: Prism.languages.cpp\n        }\n      }\n    }\n  });\n  Prism.languages.insertBefore('cpp', 'operator', {\n    'double-colon': {\n      pattern: /::/,\n      alias: 'punctuation'\n    }\n  });\n  Prism.languages.insertBefore('cpp', 'class-name', {\n    // the base clause is an optional list of parent classes\n    // https://en.cppreference.com/w/cpp/language/class\n    'base-clause': {\n      pattern: /(\\b(?:class|struct)\\s+\\w+\\s*:\\s*)[^;{}\"'\\s]+(?:\\s+[^;{}\"'\\s]+)*(?=\\s*[;{])/,\n      lookbehind: true,\n      greedy: true,\n      inside: Prism.languages.extend('cpp', {})\n    }\n  });\n  Prism.languages.insertBefore('inside', 'double-colon', {\n    // All untokenized words that are not namespaces should be class names\n    'class-name': /\\b[a-z_]\\w*\\b(?!\\s*::)/i\n  }, Prism.languages.cpp['base-clause']);\n})(prism);\n/* \"prismjs/components/prism-css\" */\n\n\n(function (Prism) {\n  var string = /(?:\"(?:\\\\(?:\\r\\n|[\\s\\S])|[^\"\\\\\\r\\n])*\"|'(?:\\\\(?:\\r\\n|[\\s\\S])|[^'\\\\\\r\\n])*')/;\n  Prism.languages.css = {\n    'comment': /\\/\\*[\\s\\S]*?\\*\\//,\n    'atrule': {\n      pattern: /@[\\w-](?:[^;{\\s]|\\s+(?![\\s{]))*(?:;|(?=\\s*\\{))/,\n      inside: {\n        'rule': /^@[\\w-]+/,\n        'selector-function-argument': {\n          pattern: /(\\bselector\\s*\\(\\s*(?![\\s)]))(?:[^()\\s]|\\s+(?![\\s)])|\\((?:[^()]|\\([^()]*\\))*\\))+(?=\\s*\\))/,\n          lookbehind: true,\n          alias: 'selector'\n        },\n        'keyword': {\n          pattern: /(^|[^\\w-])(?:and|not|only|or)(?![\\w-])/,\n          lookbehind: true\n        } // See rest below\n\n      }\n    },\n    'url': {\n      // https://drafts.csswg.org/css-values-3/#urls\n      pattern: RegExp('\\\\burl\\\\((?:' + string.source + '|' + /(?:[^\\\\\\r\\n()\"']|\\\\[\\s\\S])*/.source + ')\\\\)', 'i'),\n      greedy: true,\n      inside: {\n        'function': /^url/i,\n        'punctuation': /^\\(|\\)$/,\n        'string': {\n          pattern: RegExp('^' + string.source + '$'),\n          alias: 'url'\n        }\n      }\n    },\n    'selector': {\n      pattern: RegExp('(^|[{}\\\\s])[^{}\\\\s](?:[^{};\"\\'\\\\s]|\\\\s+(?![\\\\s{])|' + string.source + ')*(?=\\\\s*\\\\{)'),\n      lookbehind: true\n    },\n    'string': {\n      pattern: string,\n      greedy: true\n    },\n    'property': {\n      pattern: /(^|[^-\\w\\xA0-\\uFFFF])(?!\\s)[-_a-z\\xA0-\\uFFFF](?:(?!\\s)[-\\w\\xA0-\\uFFFF])*(?=\\s*:)/i,\n      lookbehind: true\n    },\n    'important': /!important\\b/i,\n    'function': {\n      pattern: /(^|[^-a-z0-9])[-a-z0-9]+(?=\\()/i,\n      lookbehind: true\n    },\n    'punctuation': /[(){};:,]/\n  };\n  Prism.languages.css['atrule'].inside.rest = Prism.languages.css;\n  var markup = Prism.languages.markup;\n\n  if (markup) {\n    markup.tag.addInlined('style', 'css');\n    markup.tag.addAttribute('style', 'css');\n  }\n})(prism);\n/* \"prismjs/components/prism-css-extras\" */\n\n\n(function (Prism) {\n  var string = /(\"|')(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/;\n  var selectorInside;\n  Prism.languages.css.selector = {\n    pattern: Prism.languages.css.selector.pattern,\n    lookbehind: true,\n    inside: selectorInside = {\n      'pseudo-element': /:(?:after|before|first-letter|first-line|selection)|::[-\\w]+/,\n      'pseudo-class': /:[-\\w]+/,\n      'class': /\\.[-\\w]+/,\n      'id': /#[-\\w]+/,\n      'attribute': {\n        pattern: RegExp('\\\\[(?:[^[\\\\]\"\\']|' + string.source + ')*\\\\]'),\n        greedy: true,\n        inside: {\n          'punctuation': /^\\[|\\]$/,\n          'case-sensitivity': {\n            pattern: /(\\s)[si]$/i,\n            lookbehind: true,\n            alias: 'keyword'\n          },\n          'namespace': {\n            pattern: /^(\\s*)(?:(?!\\s)[-*\\w\\xA0-\\uFFFF])*\\|(?!=)/,\n            lookbehind: true,\n            inside: {\n              'punctuation': /\\|$/\n            }\n          },\n          'attr-name': {\n            pattern: /^(\\s*)(?:(?!\\s)[-\\w\\xA0-\\uFFFF])+/,\n            lookbehind: true\n          },\n          'attr-value': [string, {\n            pattern: /(=\\s*)(?:(?!\\s)[-\\w\\xA0-\\uFFFF])+(?=\\s*$)/,\n            lookbehind: true\n          }],\n          'operator': /[|~*^$]?=/\n        }\n      },\n      'n-th': [{\n        pattern: /(\\(\\s*)[+-]?\\d*[\\dn](?:\\s*[+-]\\s*\\d+)?(?=\\s*\\))/,\n        lookbehind: true,\n        inside: {\n          'number': /[\\dn]+/,\n          'operator': /[+-]/\n        }\n      }, {\n        pattern: /(\\(\\s*)(?:even|odd)(?=\\s*\\))/i,\n        lookbehind: true\n      }],\n      'combinator': />|\\+|~|\\|\\|/,\n      // the `tag` token has been existed and removed.\n      // because we can't find a perfect tokenize to match it.\n      // if you want to add it, please read https://github.com/PrismJS/prism/pull/2373 first.\n      'punctuation': /[(),]/\n    }\n  };\n  Prism.languages.css['atrule'].inside['selector-function-argument'].inside = selectorInside;\n  Prism.languages.insertBefore('css', 'property', {\n    'variable': {\n      pattern: /(^|[^-\\w\\xA0-\\uFFFF])--(?!\\s)[-_a-z\\xA0-\\uFFFF](?:(?!\\s)[-\\w\\xA0-\\uFFFF])*/i,\n      lookbehind: true\n    }\n  });\n  var unit = {\n    pattern: /(\\b\\d+)(?:%|[a-z]+(?![\\w-]))/,\n    lookbehind: true\n  }; // 123 -123 .123 -.123 12.3 -12.3\n\n  var number = {\n    pattern: /(^|[^\\w.-])-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/,\n    lookbehind: true\n  };\n  Prism.languages.insertBefore('css', 'function', {\n    'operator': {\n      pattern: /(\\s)[+\\-*\\/](?=\\s)/,\n      lookbehind: true\n    },\n    // CAREFUL!\n    // Previewers and Inline color use hexcode and color.\n    'hexcode': {\n      pattern: /\\B#[\\da-f]{3,8}\\b/i,\n      alias: 'color'\n    },\n    'color': [{\n      pattern: /(^|[^\\w-])(?:AliceBlue|AntiqueWhite|Aqua|Aquamarine|Azure|Beige|Bisque|Black|BlanchedAlmond|Blue|BlueViolet|Brown|BurlyWood|CadetBlue|Chartreuse|Chocolate|Coral|CornflowerBlue|Cornsilk|Crimson|Cyan|DarkBlue|DarkCyan|DarkGoldenRod|DarkGr[ae]y|DarkGreen|DarkKhaki|DarkMagenta|DarkOliveGreen|DarkOrange|DarkOrchid|DarkRed|DarkSalmon|DarkSeaGreen|DarkSlateBlue|DarkSlateGr[ae]y|DarkTurquoise|DarkViolet|DeepPink|DeepSkyBlue|DimGr[ae]y|DodgerBlue|FireBrick|FloralWhite|ForestGreen|Fuchsia|Gainsboro|GhostWhite|Gold|GoldenRod|Gr[ae]y|Green|GreenYellow|HoneyDew|HotPink|IndianRed|Indigo|Ivory|Khaki|Lavender|LavenderBlush|LawnGreen|LemonChiffon|LightBlue|LightCoral|LightCyan|LightGoldenRodYellow|LightGr[ae]y|LightGreen|LightPink|LightSalmon|LightSeaGreen|LightSkyBlue|LightSlateGr[ae]y|LightSteelBlue|LightYellow|Lime|LimeGreen|Linen|Magenta|Maroon|MediumAquaMarine|MediumBlue|MediumOrchid|MediumPurple|MediumSeaGreen|MediumSlateBlue|MediumSpringGreen|MediumTurquoise|MediumVioletRed|MidnightBlue|MintCream|MistyRose|Moccasin|NavajoWhite|Navy|OldLace|Olive|OliveDrab|Orange|OrangeRed|Orchid|PaleGoldenRod|PaleGreen|PaleTurquoise|PaleVioletRed|PapayaWhip|PeachPuff|Peru|Pink|Plum|PowderBlue|Purple|Red|RosyBrown|RoyalBlue|SaddleBrown|Salmon|SandyBrown|SeaGreen|SeaShell|Sienna|Silver|SkyBlue|SlateBlue|SlateGr[ae]y|Snow|SpringGreen|SteelBlue|Tan|Teal|Thistle|Tomato|Transparent|Turquoise|Violet|Wheat|White|WhiteSmoke|Yellow|YellowGreen)(?![\\w-])/i,\n      lookbehind: true\n    }, {\n      pattern: /\\b(?:hsl|rgb)\\(\\s*\\d{1,3}\\s*,\\s*\\d{1,3}%?\\s*,\\s*\\d{1,3}%?\\s*\\)\\B|\\b(?:hsl|rgb)a\\(\\s*\\d{1,3}\\s*,\\s*\\d{1,3}%?\\s*,\\s*\\d{1,3}%?\\s*,\\s*(?:0|0?\\.\\d+|1)\\s*\\)\\B/i,\n      inside: {\n        'unit': unit,\n        'number': number,\n        'function': /[\\w-]+(?=\\()/,\n        'punctuation': /[(),]/\n      }\n    }],\n    // it's important that there is no boundary assertion after the hex digits\n    'entity': /\\\\[\\da-f]{1,8}/i,\n    'unit': unit,\n    'number': number\n  });\n})(prism);\n/* \"prismjs/components/prism-javascript\" */\n\n\nprism.languages.javascript = prism.languages.extend('clike', {\n  'class-name': [prism.languages.clike['class-name'], {\n    pattern: /(^|[^$\\w\\xA0-\\uFFFF])(?!\\s)[_$A-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\.(?:constructor|prototype))/,\n    lookbehind: true\n  }],\n  'keyword': [{\n    pattern: /((?:^|\\})\\s*)catch\\b/,\n    lookbehind: true\n  }, {\n    pattern: /(^|[^.]|\\.\\.\\.\\s*)\\b(?:as|assert(?=\\s*\\{)|async(?=\\s*(?:function\\b|\\(|[$\\w\\xA0-\\uFFFF]|$))|await|break|case|class|const|continue|debugger|default|delete|do|else|enum|export|extends|finally(?=\\s*(?:\\{|$))|for|from(?=\\s*(?:['\"]|$))|function|(?:get|set)(?=\\s*(?:[#\\[$\\w\\xA0-\\uFFFF]|$))|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|static|super|switch|this|throw|try|typeof|undefined|var|void|while|with|yield)\\b/,\n    lookbehind: true\n  }],\n  // Allow for all non-ASCII characters (See http://stackoverflow.com/a/2008444)\n  'function': /#?(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*(?:\\.\\s*(?:apply|bind|call)\\s*)?\\()/,\n  'number': {\n    pattern: RegExp(/(^|[^\\w$])/.source + '(?:' + ( // constant\n    /NaN|Infinity/.source + '|' + // binary integer\n    /0[bB][01]+(?:_[01]+)*n?/.source + '|' + // octal integer\n    /0[oO][0-7]+(?:_[0-7]+)*n?/.source + '|' + // hexadecimal integer\n    /0[xX][\\dA-Fa-f]+(?:_[\\dA-Fa-f]+)*n?/.source + '|' + // decimal bigint\n    /\\d+(?:_\\d+)*n/.source + '|' + // decimal number (integer or float) but no bigint\n    /(?:\\d+(?:_\\d+)*(?:\\.(?:\\d+(?:_\\d+)*)?)?|\\.\\d+(?:_\\d+)*)(?:[Ee][+-]?\\d+(?:_\\d+)*)?/.source) + ')' + /(?![\\w$])/.source),\n    lookbehind: true\n  },\n  'operator': /--|\\+\\+|\\*\\*=?|=>|&&=?|\\|\\|=?|[!=]==|<<=?|>>>?=?|[-+*/%&|^!=<>]=?|\\.{3}|\\?\\?=?|\\?\\.?|[~:]/\n});\nprism.languages.javascript['class-name'][0].pattern = /(\\b(?:class|extends|implements|instanceof|interface|new)\\s+)[\\w.\\\\]+/;\nprism.languages.insertBefore('javascript', 'keyword', {\n  'regex': {\n    // eslint-disable-next-line regexp/no-dupe-characters-character-class\n    pattern: /((?:^|[^$\\w\\xA0-\\uFFFF.\"'\\])\\s]|\\b(?:return|yield))\\s*)\\/(?:\\[(?:[^\\]\\\\\\r\\n]|\\\\.)*\\]|\\\\.|[^/\\\\\\[\\r\\n])+\\/[dgimyus]{0,7}(?=(?:\\s|\\/\\*(?:[^*]|\\*(?!\\/))*\\*\\/)*(?:$|[\\r\\n,.;:})\\]]|\\/\\/))/,\n    lookbehind: true,\n    greedy: true,\n    inside: {\n      'regex-source': {\n        pattern: /^(\\/)[\\s\\S]+(?=\\/[a-z]*$)/,\n        lookbehind: true,\n        alias: 'language-regex',\n        inside: prism.languages.regex\n      },\n      'regex-delimiter': /^\\/|\\/$/,\n      'regex-flags': /^[a-z]+$/\n    }\n  },\n  // This must be declared before keyword because we use \"function\" inside the look-forward\n  'function-variable': {\n    pattern: /#?(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*[=:]\\s*(?:async\\s*)?(?:\\bfunction\\b|(?:\\((?:[^()]|\\([^()]*\\))*\\)|(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*)\\s*=>))/,\n    alias: 'function'\n  },\n  'parameter': [{\n    pattern: /(function(?:\\s+(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*)?\\s*\\(\\s*)(?!\\s)(?:[^()\\s]|\\s+(?![\\s)])|\\([^()]*\\))+(?=\\s*\\))/,\n    lookbehind: true,\n    inside: prism.languages.javascript\n  }, {\n    pattern: /(^|[^$\\w\\xA0-\\uFFFF])(?!\\s)[_$a-z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*=>)/i,\n    lookbehind: true,\n    inside: prism.languages.javascript\n  }, {\n    pattern: /(\\(\\s*)(?!\\s)(?:[^()\\s]|\\s+(?![\\s)])|\\([^()]*\\))+(?=\\s*\\)\\s*=>)/,\n    lookbehind: true,\n    inside: prism.languages.javascript\n  }, {\n    pattern: /((?:\\b|\\s|^)(?!(?:as|async|await|break|case|catch|class|const|continue|debugger|default|delete|do|else|enum|export|extends|finally|for|from|function|get|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|set|static|super|switch|this|throw|try|typeof|undefined|var|void|while|with|yield)(?![$\\w\\xA0-\\uFFFF]))(?:(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*\\s*)\\(\\s*|\\]\\s*\\(\\s*)(?!\\s)(?:[^()\\s]|\\s+(?![\\s)])|\\([^()]*\\))+(?=\\s*\\)\\s*\\{)/,\n    lookbehind: true,\n    inside: prism.languages.javascript\n  }],\n  'constant': /\\b[A-Z](?:[A-Z_]|\\dx?)*\\b/\n});\nprism.languages.insertBefore('javascript', 'string', {\n  'hashbang': {\n    pattern: /^#!.*/,\n    greedy: true,\n    alias: 'comment'\n  },\n  'template-string': {\n    pattern: /`(?:\\\\[\\s\\S]|\\$\\{(?:[^{}]|\\{(?:[^{}]|\\{[^}]*\\})*\\})+\\}|(?!\\$\\{)[^\\\\`])*`/,\n    greedy: true,\n    inside: {\n      'template-punctuation': {\n        pattern: /^`|`$/,\n        alias: 'string'\n      },\n      'interpolation': {\n        pattern: /((?:^|[^\\\\])(?:\\\\{2})*)\\$\\{(?:[^{}]|\\{(?:[^{}]|\\{[^}]*\\})*\\})+\\}/,\n        lookbehind: true,\n        inside: {\n          'interpolation-punctuation': {\n            pattern: /^\\$\\{|\\}$/,\n            alias: 'punctuation'\n          },\n          rest: prism.languages.javascript\n        }\n      },\n      'string': /[\\s\\S]+/\n    }\n  },\n  'string-property': {\n    pattern: /((?:^|[,{])[ \\t]*)([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\2)[^\\\\\\r\\n])*\\2(?=\\s*:)/m,\n    lookbehind: true,\n    greedy: true,\n    alias: 'property'\n  }\n});\nprism.languages.insertBefore('javascript', 'operator', {\n  'literal-property': {\n    pattern: /((?:^|[,{])[ \\t]*)(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*:)/m,\n    lookbehind: true,\n    alias: 'property'\n  }\n});\n\nif (prism.languages.markup) {\n  prism.languages.markup.tag.addInlined('script', 'javascript'); // add attribute support for all DOM events.\n  // https://developer.mozilla.org/en-US/docs/Web/Events#Standard_events\n\n  prism.languages.markup.tag.addAttribute(/on(?:abort|blur|change|click|composition(?:end|start|update)|dblclick|error|focus(?:in|out)?|key(?:down|up)|load|mouse(?:down|enter|leave|move|out|over|up)|reset|resize|scroll|select|slotchange|submit|unload|wheel)/.source, 'javascript');\n}\n\nprism.languages.js = prism.languages.javascript;\n/* \"prismjs/components/prism-jsx\" */\n\n(function (Prism) {\n  var javascript = Prism.util.clone(Prism.languages.javascript);\n  var space = /(?:\\s|\\/\\/.*(?!.)|\\/\\*(?:[^*]|\\*(?!\\/))\\*\\/)/.source;\n  var braces = /(?:\\{(?:\\{(?:\\{[^{}]*\\}|[^{}])*\\}|[^{}])*\\})/.source;\n  var spread = /(?:\\{<S>*\\.{3}(?:[^{}]|<BRACES>)*\\})/.source;\n  /**\n   * @param {string} source\n   * @param {string} [flags]\n   */\n\n  function re(source, flags) {\n    source = source.replace(/<S>/g, function () {\n      return space;\n    }).replace(/<BRACES>/g, function () {\n      return braces;\n    }).replace(/<SPREAD>/g, function () {\n      return spread;\n    });\n    return RegExp(source, flags);\n  }\n\n  spread = re(spread).source;\n  Prism.languages.jsx = Prism.languages.extend('markup', javascript);\n  Prism.languages.jsx.tag.pattern = re(/<\\/?(?:[\\w.:-]+(?:<S>+(?:[\\w.:$-]+(?:=(?:\"(?:\\\\[\\s\\S]|[^\\\\\"])*\"|'(?:\\\\[\\s\\S]|[^\\\\'])*'|[^\\s{'\"/>=]+|<BRACES>))?|<SPREAD>))*<S>*\\/?)?>/.source);\n  Prism.languages.jsx.tag.inside['tag'].pattern = /^<\\/?[^\\s>\\/]*/;\n  Prism.languages.jsx.tag.inside['attr-value'].pattern = /=(?!\\{)(?:\"(?:\\\\[\\s\\S]|[^\\\\\"])*\"|'(?:\\\\[\\s\\S]|[^\\\\'])*'|[^\\s'\">]+)/;\n  Prism.languages.jsx.tag.inside['tag'].inside['class-name'] = /^[A-Z]\\w*(?:\\.[A-Z]\\w*)*$/;\n  Prism.languages.jsx.tag.inside['comment'] = javascript['comment'];\n  Prism.languages.insertBefore('inside', 'attr-name', {\n    'spread': {\n      pattern: re(/<SPREAD>/.source),\n      inside: Prism.languages.jsx\n    }\n  }, Prism.languages.jsx.tag);\n  Prism.languages.insertBefore('inside', 'special-attr', {\n    'script': {\n      // Allow for two levels of nesting\n      pattern: re(/=<BRACES>/.source),\n      alias: 'language-javascript',\n      inside: {\n        'script-punctuation': {\n          pattern: /^=(?=\\{)/,\n          alias: 'punctuation'\n        },\n        rest: Prism.languages.jsx\n      }\n    }\n  }, Prism.languages.jsx.tag); // The following will handle plain text inside tags\n\n  var stringifyToken = function stringifyToken(token) {\n    if (!token) {\n      return '';\n    }\n\n    if (typeof token === 'string') {\n      return token;\n    }\n\n    if (typeof token.content === 'string') {\n      return token.content;\n    }\n\n    return token.content.map(stringifyToken).join('');\n  };\n\n  var walkTokens = function walkTokens(tokens) {\n    var openedTags = [];\n\n    for (var i = 0; i < tokens.length; i++) {\n      var token = tokens[i];\n      var notTagNorBrace = false;\n\n      if (typeof token !== 'string') {\n        if (token.type === 'tag' && token.content[0] && token.content[0].type === 'tag') {\n          // We found a tag, now find its kind\n          if (token.content[0].content[0].content === '</') {\n            // Closing tag\n            if (openedTags.length > 0 && openedTags[openedTags.length - 1].tagName === stringifyToken(token.content[0].content[1])) {\n              // Pop matching opening tag\n              openedTags.pop();\n            }\n          } else {\n            if (token.content[token.content.length - 1].content === '/>') ;else {\n              // Opening tag\n              openedTags.push({\n                tagName: stringifyToken(token.content[0].content[1]),\n                openedBraces: 0\n              });\n            }\n          }\n        } else if (openedTags.length > 0 && token.type === 'punctuation' && token.content === '{') {\n          // Here we might have entered a JSX context inside a tag\n          openedTags[openedTags.length - 1].openedBraces++;\n        } else if (openedTags.length > 0 && openedTags[openedTags.length - 1].openedBraces > 0 && token.type === 'punctuation' && token.content === '}') {\n          // Here we might have left a JSX context inside a tag\n          openedTags[openedTags.length - 1].openedBraces--;\n        } else {\n          notTagNorBrace = true;\n        }\n      }\n\n      if (notTagNorBrace || typeof token === 'string') {\n        if (openedTags.length > 0 && openedTags[openedTags.length - 1].openedBraces === 0) {\n          // Here we are inside a tag, and not inside a JSX context.\n          // That's plain text: drop any tokens matched.\n          var plainText = stringifyToken(token); // And merge text with adjacent text\n\n          if (i < tokens.length - 1 && (typeof tokens[i + 1] === 'string' || tokens[i + 1].type === 'plain-text')) {\n            plainText += stringifyToken(tokens[i + 1]);\n            tokens.splice(i + 1, 1);\n          }\n\n          if (i > 0 && (typeof tokens[i - 1] === 'string' || tokens[i - 1].type === 'plain-text')) {\n            plainText = stringifyToken(tokens[i - 1]) + plainText;\n            tokens.splice(i - 1, 1);\n            i--;\n          }\n\n          tokens[i] = new Prism.Token('plain-text', plainText, null, plainText);\n        }\n      }\n\n      if (token.content && typeof token.content !== 'string') {\n        walkTokens(token.content);\n      }\n    }\n  };\n\n  Prism.hooks.add('after-tokenize', function (env) {\n    if (env.language !== 'jsx' && env.language !== 'tsx') {\n      return;\n    }\n\n    walkTokens(env.tokens);\n  });\n})(prism);\n/* \"prismjs/components/prism-js-extras\" */\n\n\n(function (Prism) {\n  Prism.languages.insertBefore('javascript', 'function-variable', {\n    'method-variable': {\n      pattern: RegExp('(\\\\.\\\\s*)' + Prism.languages.javascript['function-variable'].pattern.source),\n      lookbehind: true,\n      alias: ['function-variable', 'method', 'function', 'property-access']\n    }\n  });\n  Prism.languages.insertBefore('javascript', 'function', {\n    'method': {\n      pattern: RegExp('(\\\\.\\\\s*)' + Prism.languages.javascript['function'].source),\n      lookbehind: true,\n      alias: ['function', 'property-access']\n    }\n  });\n  Prism.languages.insertBefore('javascript', 'constant', {\n    'known-class-name': [{\n      // standard built-ins\n      // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects\n      pattern: /\\b(?:(?:Float(?:32|64)|(?:Int|Uint)(?:8|16|32)|Uint8Clamped)?Array|ArrayBuffer|BigInt|Boolean|DataView|Date|Error|Function|Intl|JSON|(?:Weak)?(?:Map|Set)|Math|Number|Object|Promise|Proxy|Reflect|RegExp|String|Symbol|WebAssembly)\\b/,\n      alias: 'class-name'\n    }, {\n      // errors\n      pattern: /\\b(?:[A-Z]\\w*)Error\\b/,\n      alias: 'class-name'\n    }]\n  });\n  /**\n   * Replaces the `<ID>` placeholder in the given pattern with a pattern for general JS identifiers.\n   *\n   * @param {string} source\n   * @param {string} [flags]\n   * @returns {RegExp}\n   */\n\n  function withId(source, flags) {\n    return RegExp(source.replace(/<ID>/g, function () {\n      return /(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*/.source;\n    }), flags);\n  }\n\n  Prism.languages.insertBefore('javascript', 'keyword', {\n    'imports': {\n      // https://tc39.es/ecma262/#sec-imports\n      pattern: withId(/(\\bimport\\b\\s*)(?:<ID>(?:\\s*,\\s*(?:\\*\\s*as\\s+<ID>|\\{[^{}]*\\}))?|\\*\\s*as\\s+<ID>|\\{[^{}]*\\})(?=\\s*\\bfrom\\b)/.source),\n      lookbehind: true,\n      inside: Prism.languages.javascript\n    },\n    'exports': {\n      // https://tc39.es/ecma262/#sec-exports\n      pattern: withId(/(\\bexport\\b\\s*)(?:\\*(?:\\s*as\\s+<ID>)?(?=\\s*\\bfrom\\b)|\\{[^{}]*\\})/.source),\n      lookbehind: true,\n      inside: Prism.languages.javascript\n    }\n  });\n  Prism.languages.javascript['keyword'].unshift({\n    pattern: /\\b(?:as|default|export|from|import)\\b/,\n    alias: 'module'\n  }, {\n    pattern: /\\b(?:await|break|catch|continue|do|else|finally|for|if|return|switch|throw|try|while|yield)\\b/,\n    alias: 'control-flow'\n  }, {\n    pattern: /\\bnull\\b/,\n    alias: ['null', 'nil']\n  }, {\n    pattern: /\\bundefined\\b/,\n    alias: 'nil'\n  });\n  Prism.languages.insertBefore('javascript', 'operator', {\n    'spread': {\n      pattern: /\\.{3}/,\n      alias: 'operator'\n    },\n    'arrow': {\n      pattern: /=>/,\n      alias: 'operator'\n    }\n  });\n  Prism.languages.insertBefore('javascript', 'punctuation', {\n    'property-access': {\n      pattern: withId(/(\\.\\s*)#?<ID>/.source),\n      lookbehind: true\n    },\n    'maybe-class-name': {\n      pattern: /(^|[^$\\w\\xA0-\\uFFFF])[A-Z][$\\w\\xA0-\\uFFFF]+/,\n      lookbehind: true\n    },\n    'dom': {\n      // this contains only a few commonly used DOM variables\n      pattern: /\\b(?:document|(?:local|session)Storage|location|navigator|performance|window)\\b/,\n      alias: 'variable'\n    },\n    'console': {\n      pattern: /\\bconsole(?=\\s*\\.)/,\n      alias: 'class-name'\n    }\n  }); // add 'maybe-class-name' to tokens which might be a class name\n\n  var maybeClassNameTokens = ['function', 'function-variable', 'method', 'method-variable', 'property-access'];\n\n  for (var i = 0; i < maybeClassNameTokens.length; i++) {\n    var token = maybeClassNameTokens[i];\n    var value = Prism.languages.javascript[token]; // convert regex to object\n\n    if (Prism.util.type(value) === 'RegExp') {\n      value = Prism.languages.javascript[token] = {\n        pattern: value\n      };\n    } // keep in mind that we don't support arrays\n\n\n    var inside = value.inside || {};\n    value.inside = inside;\n    inside['maybe-class-name'] = /^[A-Z][\\s\\S]*/;\n  }\n})(prism);\n/* \"prismjs/components/prism-js-templates\" */\n\n\n(function (Prism) {\n  var templateString = Prism.languages.javascript['template-string']; // see the pattern in prism-javascript.js\n\n  var templateLiteralPattern = templateString.pattern.source;\n  var interpolationObject = templateString.inside['interpolation'];\n  var interpolationPunctuationObject = interpolationObject.inside['interpolation-punctuation'];\n  var interpolationPattern = interpolationObject.pattern.source;\n  /**\n   * Creates a new pattern to match a template string with a special tag.\n   *\n   * This will return `undefined` if there is no grammar with the given language id.\n   *\n   * @param {string} language The language id of the embedded language. E.g. `markdown`.\n   * @param {string} tag The regex pattern to match the tag.\n   * @returns {object | undefined}\n   * @example\n   * createTemplate('css', /\\bcss/.source);\n   */\n\n  function createTemplate(language, tag) {\n    if (!Prism.languages[language]) {\n      return undefined;\n    }\n\n    return {\n      pattern: RegExp('((?:' + tag + ')\\\\s*)' + templateLiteralPattern),\n      lookbehind: true,\n      greedy: true,\n      inside: {\n        'template-punctuation': {\n          pattern: /^`|`$/,\n          alias: 'string'\n        },\n        'embedded-code': {\n          pattern: /[\\s\\S]+/,\n          alias: language\n        }\n      }\n    };\n  }\n\n  Prism.languages.javascript['template-string'] = [// styled-jsx:\n  //   css`a { color: #25F; }`\n  // styled-components:\n  //   styled.h1`color: red;`\n  createTemplate('css', /\\b(?:styled(?:\\([^)]*\\))?(?:\\s*\\.\\s*\\w+(?:\\([^)]*\\))*)*|css(?:\\s*\\.\\s*(?:global|resolve))?|createGlobalStyle|keyframes)/.source), // html`<p></p>`\n  // div.innerHTML = `<p></p>`\n  createTemplate('html', /\\bhtml|\\.\\s*(?:inner|outer)HTML\\s*\\+?=/.source), // svg`<path fill=\"#fff\" d=\"M55.37 ...\"/>`\n  createTemplate('svg', /\\bsvg/.source), // md`# h1`, markdown`## h2`\n  createTemplate('markdown', /\\b(?:markdown|md)/.source), // gql`...`, graphql`...`, graphql.experimental`...`\n  createTemplate('graphql', /\\b(?:gql|graphql(?:\\s*\\.\\s*experimental)?)/.source), // sql`...`\n  createTemplate('sql', /\\bsql/.source), // vanilla template string\n  templateString].filter(Boolean);\n  /**\n   * Returns a specific placeholder literal for the given language.\n   *\n   * @param {number} counter\n   * @param {string} language\n   * @returns {string}\n   */\n\n  function getPlaceholder(counter, language) {\n    return '___' + language.toUpperCase() + '_' + counter + '___';\n  }\n  /**\n   * Returns the tokens of `Prism.tokenize` but also runs the `before-tokenize` and `after-tokenize` hooks.\n   *\n   * @param {string} code\n   * @param {any} grammar\n   * @param {string} language\n   * @returns {(string|Token)[]}\n   */\n\n\n  function tokenizeWithHooks(code, grammar, language) {\n    var env = {\n      code: code,\n      grammar: grammar,\n      language: language\n    };\n    Prism.hooks.run('before-tokenize', env);\n    env.tokens = Prism.tokenize(env.code, env.grammar);\n    Prism.hooks.run('after-tokenize', env);\n    return env.tokens;\n  }\n  /**\n   * Returns the token of the given JavaScript interpolation expression.\n   *\n   * @param {string} expression The code of the expression. E.g. `\"${42}\"`\n   * @returns {Token}\n   */\n\n\n  function tokenizeInterpolationExpression(expression) {\n    var tempGrammar = {};\n    tempGrammar['interpolation-punctuation'] = interpolationPunctuationObject;\n    /** @type {Array} */\n\n    var tokens = Prism.tokenize(expression, tempGrammar);\n\n    if (tokens.length === 3) {\n      /**\n       * The token array will look like this\n       * [\n       *     [\"interpolation-punctuation\", \"${\"]\n       *     \"...\" // JavaScript expression of the interpolation\n       *     [\"interpolation-punctuation\", \"}\"]\n       * ]\n       */\n      var args = [1, 1];\n      args.push.apply(args, tokenizeWithHooks(tokens[1], Prism.languages.javascript, 'javascript'));\n      tokens.splice.apply(tokens, args);\n    }\n\n    return new Prism.Token('interpolation', tokens, interpolationObject.alias, expression);\n  }\n  /**\n   * Tokenizes the given code with support for JavaScript interpolation expressions mixed in.\n   *\n   * This function has 3 phases:\n   *\n   * 1. Replace all JavaScript interpolation expression with a placeholder.\n   *    The placeholder will have the syntax of a identify of the target language.\n   * 2. Tokenize the code with placeholders.\n   * 3. Tokenize the interpolation expressions and re-insert them into the tokenize code.\n   *    The insertion only works if a placeholder hasn't been \"ripped apart\" meaning that the placeholder has been\n   *    tokenized as two tokens by the grammar of the embedded language.\n   *\n   * @param {string} code\n   * @param {object} grammar\n   * @param {string} language\n   * @returns {Token}\n   */\n\n\n  function tokenizeEmbedded(code, grammar, language) {\n    // 1. First filter out all interpolations\n    // because they might be escaped, we need a lookbehind, so we use Prism\n\n    /** @type {(Token|string)[]} */\n    var _tokens = Prism.tokenize(code, {\n      'interpolation': {\n        pattern: RegExp(interpolationPattern),\n        lookbehind: true\n      }\n    }); // replace all interpolations with a placeholder which is not in the code already\n\n\n    var placeholderCounter = 0;\n    /** @type {Object<string, string>} */\n\n    var placeholderMap = {};\n\n    var embeddedCode = _tokens.map(function (token) {\n      if (typeof token === 'string') {\n        return token;\n      } else {\n        var interpolationExpression = token.content;\n        var placeholder;\n\n        while (code.indexOf(placeholder = getPlaceholder(placeholderCounter++, language)) !== -1) {\n          /* noop */\n        }\n\n        placeholderMap[placeholder] = interpolationExpression;\n        return placeholder;\n      }\n    }).join(''); // 2. Tokenize the embedded code\n\n\n    var embeddedTokens = tokenizeWithHooks(embeddedCode, grammar, language); // 3. Re-insert the interpolation\n\n    var placeholders = Object.keys(placeholderMap);\n    placeholderCounter = 0;\n    /**\n     *\n     * @param {(Token|string)[]} tokens\n     * @returns {void}\n     */\n\n    function walkTokens(tokens) {\n      for (var i = 0; i < tokens.length; i++) {\n        if (placeholderCounter >= placeholders.length) {\n          return;\n        }\n\n        var token = tokens[i];\n\n        if (typeof token === 'string' || typeof token.content === 'string') {\n          var placeholder = placeholders[placeholderCounter];\n          var s = typeof token === 'string' ? token :\n          /** @type {string} */\n          token.content;\n          var index = s.indexOf(placeholder);\n\n          if (index !== -1) {\n            ++placeholderCounter;\n            var before = s.substring(0, index);\n            var middle = tokenizeInterpolationExpression(placeholderMap[placeholder]);\n            var after = s.substring(index + placeholder.length);\n            var replacement = [];\n\n            if (before) {\n              replacement.push(before);\n            }\n\n            replacement.push(middle);\n\n            if (after) {\n              var afterTokens = [after];\n              walkTokens(afterTokens);\n              replacement.push.apply(replacement, afterTokens);\n            }\n\n            if (typeof token === 'string') {\n              tokens.splice.apply(tokens, [i, 1].concat(replacement));\n              i += replacement.length - 1;\n            } else {\n              token.content = replacement;\n            }\n          }\n        } else {\n          var content = token.content;\n\n          if (Array.isArray(content)) {\n            walkTokens(content);\n          } else {\n            walkTokens([content]);\n          }\n        }\n      }\n    }\n\n    walkTokens(embeddedTokens);\n    return new Prism.Token(language, embeddedTokens, 'language-' + language, code);\n  }\n  /**\n   * The languages for which JS templating will handle tagged template literals.\n   *\n   * JS templating isn't active for only JavaScript but also related languages like TypeScript, JSX, and TSX.\n   */\n\n\n  var supportedLanguages = {\n    'javascript': true,\n    'js': true,\n    'typescript': true,\n    'ts': true,\n    'jsx': true,\n    'tsx': true\n  };\n  Prism.hooks.add('after-tokenize', function (env) {\n    if (!(env.language in supportedLanguages)) {\n      return;\n    }\n    /**\n     * Finds and tokenizes all template strings with an embedded languages.\n     *\n     * @param {(Token | string)[]} tokens\n     * @returns {void}\n     */\n\n\n    function findTemplateStrings(tokens) {\n      for (var i = 0, l = tokens.length; i < l; i++) {\n        var token = tokens[i];\n\n        if (typeof token === 'string') {\n          continue;\n        }\n\n        var content = token.content;\n\n        if (!Array.isArray(content)) {\n          if (typeof content !== 'string') {\n            findTemplateStrings([content]);\n          }\n\n          continue;\n        }\n\n        if (token.type === 'template-string') {\n          /**\n           * A JavaScript template-string token will look like this:\n           *\n           * [\"template-string\", [\n           *     [\"template-punctuation\", \"`\"],\n           *     (\n           *         An array of \"string\" and \"interpolation\" tokens. This is the simple string case.\n           *         or\n           *         [\"embedded-code\", \"...\"] This is the token containing the embedded code.\n           *                                  It also has an alias which is the language of the embedded code.\n           *     ),\n           *     [\"template-punctuation\", \"`\"]\n           * ]]\n           */\n          var embedded = content[1];\n\n          if (content.length === 3 && typeof embedded !== 'string' && embedded.type === 'embedded-code') {\n            // get string content\n            var code = stringContent(embedded);\n            var alias = embedded.alias;\n            var language = Array.isArray(alias) ? alias[0] : alias;\n            var grammar = Prism.languages[language];\n\n            if (!grammar) {\n              // the embedded language isn't registered.\n              continue;\n            }\n\n            content[1] = tokenizeEmbedded(code, grammar, language);\n          }\n        } else {\n          findTemplateStrings(content);\n        }\n      }\n    }\n\n    findTemplateStrings(env.tokens);\n  });\n  /**\n   * Returns the string content of a token or token stream.\n   *\n   * @param {string | Token | (string | Token)[]} value\n   * @returns {string}\n   */\n\n  function stringContent(value) {\n    if (typeof value === 'string') {\n      return value;\n    } else if (Array.isArray(value)) {\n      return value.map(stringContent).join('');\n    } else {\n      return stringContent(value.content);\n    }\n  }\n})(prism);\n/* \"prismjs/components/prism-coffeescript\" */\n\n\n(function (Prism) {\n  // Ignore comments starting with { to privilege string interpolation highlighting\n  var comment = /#(?!\\{).+/;\n  var interpolation = {\n    pattern: /#\\{[^}]+\\}/,\n    alias: 'variable'\n  };\n  Prism.languages.coffeescript = Prism.languages.extend('javascript', {\n    'comment': comment,\n    'string': [// Strings are multiline\n    {\n      pattern: /'(?:\\\\[\\s\\S]|[^\\\\'])*'/,\n      greedy: true\n    }, {\n      // Strings are multiline\n      pattern: /\"(?:\\\\[\\s\\S]|[^\\\\\"])*\"/,\n      greedy: true,\n      inside: {\n        'interpolation': interpolation\n      }\n    }],\n    'keyword': /\\b(?:and|break|by|catch|class|continue|debugger|delete|do|each|else|extend|extends|false|finally|for|if|in|instanceof|is|isnt|let|loop|namespace|new|no|not|null|of|off|on|or|own|return|super|switch|then|this|throw|true|try|typeof|undefined|unless|until|when|while|window|with|yes|yield)\\b/,\n    'class-member': {\n      pattern: /@(?!\\d)\\w+/,\n      alias: 'variable'\n    }\n  });\n  Prism.languages.insertBefore('coffeescript', 'comment', {\n    'multiline-comment': {\n      pattern: /###[\\s\\S]+?###/,\n      alias: 'comment'\n    },\n    // Block regexp can contain comments and interpolation\n    'block-regex': {\n      pattern: /\\/{3}[\\s\\S]*?\\/{3}/,\n      alias: 'regex',\n      inside: {\n        'comment': comment,\n        'interpolation': interpolation\n      }\n    }\n  });\n  Prism.languages.insertBefore('coffeescript', 'string', {\n    'inline-javascript': {\n      pattern: /`(?:\\\\[\\s\\S]|[^\\\\`])*`/,\n      inside: {\n        'delimiter': {\n          pattern: /^`|`$/,\n          alias: 'punctuation'\n        },\n        'script': {\n          pattern: /[\\s\\S]+/,\n          alias: 'language-javascript',\n          inside: Prism.languages.javascript\n        }\n      }\n    },\n    // Block strings\n    'multiline-string': [{\n      pattern: /'''[\\s\\S]*?'''/,\n      greedy: true,\n      alias: 'string'\n    }, {\n      pattern: /\"\"\"[\\s\\S]*?\"\"\"/,\n      greedy: true,\n      alias: 'string',\n      inside: {\n        interpolation: interpolation\n      }\n    }]\n  });\n  Prism.languages.insertBefore('coffeescript', 'keyword', {\n    // Object property\n    'property': /(?!\\d)\\w+(?=\\s*:(?!:))/\n  });\n  delete Prism.languages.coffeescript['template-string'];\n  Prism.languages.coffee = Prism.languages.coffeescript;\n})(prism);\n/* \"prismjs/components/prism-diff\" */\n\n\n(function (Prism) {\n  Prism.languages.diff = {\n    'coord': [// Match all kinds of coord lines (prefixed by \"+++\", \"---\" or \"***\").\n    /^(?:\\*{3}|-{3}|\\+{3}).*$/m, // Match \"@@ ... @@\" coord lines in unified diff.\n    /^@@.*@@$/m, // Match coord lines in normal diff (starts with a number).\n    /^\\d.*$/m] // deleted, inserted, unchanged, diff\n\n  };\n  /**\n   * A map from the name of a block to its line prefix.\n   *\n   * @type {Object<string, string>}\n   */\n\n  var PREFIXES = {\n    'deleted-sign': '-',\n    'deleted-arrow': '<',\n    'inserted-sign': '+',\n    'inserted-arrow': '>',\n    'unchanged': ' ',\n    'diff': '!'\n  }; // add a token for each prefix\n\n  Object.keys(PREFIXES).forEach(function (name) {\n    var prefix = PREFIXES[name];\n    var alias = [];\n\n    if (!/^\\w+$/.test(name)) {\n      // \"deleted-sign\" -> \"deleted\"\n      alias.push(/\\w+/.exec(name)[0]);\n    }\n\n    if (name === 'diff') {\n      alias.push('bold');\n    }\n\n    Prism.languages.diff[name] = {\n      pattern: RegExp('^(?:[' + prefix + '].*(?:\\r\\n?|\\n|(?![\\\\s\\\\S])))+', 'm'),\n      alias: alias,\n      inside: {\n        'line': {\n          pattern: /(.)(?=[\\s\\S]).*(?:\\r\\n?|\\n)?/,\n          lookbehind: true\n        },\n        'prefix': {\n          pattern: /[\\s\\S]/,\n          alias: /\\w+/.exec(name)[0]\n        }\n      }\n    };\n  }); // make prefixes available to Diff plugin\n\n  Object.defineProperty(Prism.languages.diff, 'PREFIXES', {\n    value: PREFIXES\n  });\n})(prism);\n/* \"prismjs/components/prism-git\" */\n\n\nprism.languages.git = {\n  /*\n   * A simple one line comment like in a git status command\n   * For instance:\n   * $ git status\n   * # On branch infinite-scroll\n   * # Your branch and 'origin/sharedBranches/frontendTeam/infinite-scroll' have diverged,\n   * # and have 1 and 2 different commits each, respectively.\n   * nothing to commit (working directory clean)\n   */\n  'comment': /^#.*/m,\n\n  /*\n   * Regexp to match the changed lines in a git diff output. Check the example below.\n   */\n  'deleted': /^[-–].*/m,\n  'inserted': /^\\+.*/m,\n\n  /*\n   * a string (double and simple quote)\n   */\n  'string': /(\"|')(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\n\n  /*\n   * a git command. It starts with a random prompt finishing by a $, then \"git\" then some other parameters\n   * For instance:\n   * $ git add file.txt\n   */\n  'command': {\n    pattern: /^.*\\$ git .*$/m,\n    inside: {\n      /*\n       * A git command can contain a parameter starting by a single or a double dash followed by a string\n       * For instance:\n       * $ git diff --cached\n       * $ git log -p\n       */\n      'parameter': /\\s--?\\w+/\n    }\n  },\n\n  /*\n   * Coordinates displayed in a git diff command\n   * For instance:\n   * $ git diff\n   * diff --git file.txt file.txt\n   * index 6214953..1d54a52 100644\n   * --- file.txt\n   * +++ file.txt\n   * @@ -1 +1,2 @@\n   * -Here's my tetx file\n   * +Here's my text file\n   * +And this is the second line\n   */\n  'coord': /^@@.*@@$/m,\n\n  /*\n   * Match a \"commit [SHA1]\" line in a git log output.\n   * For instance:\n   * $ git log\n   * commit a11a14ef7e26f2ca62d4b35eac455ce636d0dc09\n   * Author: lgiraudel\n   * Date:   Mon Feb 17 11:18:34 2014 +0100\n   *\n   *     Add of a new line\n   */\n  'commit-sha1': /^commit \\w{40}$/m\n};\n/* \"prismjs/components/prism-go\" */\n\nprism.languages.go = prism.languages.extend('clike', {\n  'string': {\n    pattern: /(^|[^\\\\])\"(?:\\\\.|[^\"\\\\\\r\\n])*\"|`[^`]*`/,\n    lookbehind: true,\n    greedy: true\n  },\n  'keyword': /\\b(?:break|case|chan|const|continue|default|defer|else|fallthrough|for|func|go(?:to)?|if|import|interface|map|package|range|return|select|struct|switch|type|var)\\b/,\n  'boolean': /\\b(?:_|false|iota|nil|true)\\b/,\n  'number': [// binary and octal integers\n  /\\b0(?:b[01_]+|o[0-7_]+)i?\\b/i, // hexadecimal integers and floats\n  /\\b0x(?:[a-f\\d_]+(?:\\.[a-f\\d_]*)?|\\.[a-f\\d_]+)(?:p[+-]?\\d+(?:_\\d+)*)?i?(?!\\w)/i, // decimal integers and floats\n  /(?:\\b\\d[\\d_]*(?:\\.[\\d_]*)?|\\B\\.\\d[\\d_]*)(?:e[+-]?[\\d_]+)?i?(?!\\w)/i],\n  'operator': /[*\\/%^!=]=?|\\+[=+]?|-[=-]?|\\|[=|]?|&(?:=|&|\\^=?)?|>(?:>=?|=)?|<(?:<=?|=|-)?|:=|\\.\\.\\./,\n  'builtin': /\\b(?:append|bool|byte|cap|close|complex|complex(?:64|128)|copy|delete|error|float(?:32|64)|u?int(?:8|16|32|64)?|imag|len|make|new|panic|print(?:ln)?|real|recover|rune|string|uintptr)\\b/\n});\nprism.languages.insertBefore('go', 'string', {\n  'char': {\n    pattern: /'(?:\\\\.|[^'\\\\\\r\\n]){0,10}'/,\n    greedy: true\n  }\n});\ndelete prism.languages.go['class-name'];\n/* \"prismjs/components/prism-graphql\" */\n\nprism.languages.graphql = {\n  'comment': /#.*/,\n  'description': {\n    pattern: /(?:\"\"\"(?:[^\"]|(?!\"\"\")\")*\"\"\"|\"(?:\\\\.|[^\\\\\"\\r\\n])*\")(?=\\s*[a-z_])/i,\n    greedy: true,\n    alias: 'string',\n    inside: {\n      'language-markdown': {\n        pattern: /(^\"(?:\"\")?)(?!\\1)[\\s\\S]+(?=\\1$)/,\n        lookbehind: true,\n        inside: prism.languages.markdown\n      }\n    }\n  },\n  'string': {\n    pattern: /\"\"\"(?:[^\"]|(?!\"\"\")\")*\"\"\"|\"(?:\\\\.|[^\\\\\"\\r\\n])*\"/,\n    greedy: true\n  },\n  'number': /(?:\\B-|\\b)\\d+(?:\\.\\d+)?(?:e[+-]?\\d+)?\\b/i,\n  'boolean': /\\b(?:false|true)\\b/,\n  'variable': /\\$[a-z_]\\w*/i,\n  'directive': {\n    pattern: /@[a-z_]\\w*/i,\n    alias: 'function'\n  },\n  'attr-name': {\n    pattern: /\\b[a-z_]\\w*(?=\\s*(?:\\((?:[^()\"]|\"(?:\\\\.|[^\\\\\"\\r\\n])*\")*\\))?:)/i,\n    greedy: true\n  },\n  'atom-input': {\n    pattern: /\\b[A-Z]\\w*Input\\b/,\n    alias: 'class-name'\n  },\n  'scalar': /\\b(?:Boolean|Float|ID|Int|String)\\b/,\n  'constant': /\\b[A-Z][A-Z_\\d]*\\b/,\n  'class-name': {\n    pattern: /(\\b(?:enum|implements|interface|on|scalar|type|union)\\s+|&\\s*|:\\s*|\\[)[A-Z_]\\w*/,\n    lookbehind: true\n  },\n  'fragment': {\n    pattern: /(\\bfragment\\s+|\\.{3}\\s*(?!on\\b))[a-zA-Z_]\\w*/,\n    lookbehind: true,\n    alias: 'function'\n  },\n  'definition-mutation': {\n    pattern: /(\\bmutation\\s+)[a-zA-Z_]\\w*/,\n    lookbehind: true,\n    alias: 'function'\n  },\n  'definition-query': {\n    pattern: /(\\bquery\\s+)[a-zA-Z_]\\w*/,\n    lookbehind: true,\n    alias: 'function'\n  },\n  'keyword': /\\b(?:directive|enum|extend|fragment|implements|input|interface|mutation|on|query|repeatable|scalar|schema|subscription|type|union)\\b/,\n  'operator': /[!=|&]|\\.{3}/,\n  'property-query': /\\w+(?=\\s*\\()/,\n  'object': /\\w+(?=\\s*\\{)/,\n  'punctuation': /[!(){}\\[\\]:=,]/,\n  'property': /\\w+/\n};\nprism.hooks.add('after-tokenize', function afterTokenizeGraphql(env) {\n  if (env.language !== 'graphql') {\n    return;\n  }\n  /**\n   * get the graphql token stream that we want to customize\n   *\n   * @typedef {InstanceType<import(\"./prism-core\")[\"Token\"]>} Token\n   * @type {Token[]}\n   */\n\n\n  var validTokens = env.tokens.filter(function (token) {\n    return typeof token !== 'string' && token.type !== 'comment' && token.type !== 'scalar';\n  });\n  var currentIndex = 0;\n  /**\n   * Returns whether the token relative to the current index has the given type.\n   *\n   * @param {number} offset\n   * @returns {Token | undefined}\n   */\n\n  function getToken(offset) {\n    return validTokens[currentIndex + offset];\n  }\n  /**\n   * Returns whether the token relative to the current index has the given type.\n   *\n   * @param {readonly string[]} types\n   * @param {number} [offset=0]\n   * @returns {boolean}\n   */\n\n\n  function isTokenType(types, offset) {\n    offset = offset || 0;\n\n    for (var i = 0; i < types.length; i++) {\n      var token = getToken(i + offset);\n\n      if (!token || token.type !== types[i]) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n  /**\n   * Returns the index of the closing bracket to an opening bracket.\n   *\n   * It is assumed that `token[currentIndex - 1]` is an opening bracket.\n   *\n   * If no closing bracket could be found, `-1` will be returned.\n   *\n   * @param {RegExp} open\n   * @param {RegExp} close\n   * @returns {number}\n   */\n\n\n  function findClosingBracket(open, close) {\n    var stackHeight = 1;\n\n    for (var i = currentIndex; i < validTokens.length; i++) {\n      var token = validTokens[i];\n      var content = token.content;\n\n      if (token.type === 'punctuation' && typeof content === 'string') {\n        if (open.test(content)) {\n          stackHeight++;\n        } else if (close.test(content)) {\n          stackHeight--;\n\n          if (stackHeight === 0) {\n            return i;\n          }\n        }\n      }\n    }\n\n    return -1;\n  }\n  /**\n   * Adds an alias to the given token.\n   *\n   * @param {Token} token\n   * @param {string} alias\n   * @returns {void}\n   */\n\n\n  function addAlias(token, alias) {\n    var aliases = token.alias;\n\n    if (!aliases) {\n      token.alias = aliases = [];\n    } else if (!Array.isArray(aliases)) {\n      token.alias = aliases = [aliases];\n    }\n\n    aliases.push(alias);\n  }\n\n  for (; currentIndex < validTokens.length;) {\n    var startToken = validTokens[currentIndex++]; // add special aliases for mutation tokens\n\n    if (startToken.type === 'keyword' && startToken.content === 'mutation') {\n      // any array of the names of all input variables (if any)\n      var inputVariables = [];\n\n      if (isTokenType(['definition-mutation', 'punctuation']) && getToken(1).content === '(') {\n        // definition\n        currentIndex += 2; // skip 'definition-mutation' and 'punctuation'\n\n        var definitionEnd = findClosingBracket(/^\\($/, /^\\)$/);\n\n        if (definitionEnd === -1) {\n          continue;\n        } // find all input variables\n\n\n        for (; currentIndex < definitionEnd; currentIndex++) {\n          var t = getToken(0);\n\n          if (t.type === 'variable') {\n            addAlias(t, 'variable-input');\n            inputVariables.push(t.content);\n          }\n        }\n\n        currentIndex = definitionEnd + 1;\n      }\n\n      if (isTokenType(['punctuation', 'property-query']) && getToken(0).content === '{') {\n        currentIndex++; // skip opening bracket\n\n        addAlias(getToken(0), 'property-mutation');\n\n        if (inputVariables.length > 0) {\n          var mutationEnd = findClosingBracket(/^\\{$/, /^\\}$/);\n\n          if (mutationEnd === -1) {\n            continue;\n          } // give references to input variables a special alias\n\n\n          for (var i = currentIndex; i < mutationEnd; i++) {\n            var varToken = validTokens[i];\n\n            if (varToken.type === 'variable' && inputVariables.indexOf(varToken.content) >= 0) {\n              addAlias(varToken, 'variable-input');\n            }\n          }\n        }\n      }\n    }\n  }\n});\n/* \"prismjs/components/prism-markup-templating\" */\n\n(function (Prism) {\n  /**\n   * Returns the placeholder for the given language id and index.\n   *\n   * @param {string} language\n   * @param {string|number} index\n   * @returns {string}\n   */\n  function getPlaceholder(language, index) {\n    return '___' + language.toUpperCase() + index + '___';\n  }\n\n  Object.defineProperties(Prism.languages['markup-templating'] = {}, {\n    buildPlaceholders: {\n      /**\n       * Tokenize all inline templating expressions matching `placeholderPattern`.\n       *\n       * If `replaceFilter` is provided, only matches of `placeholderPattern` for which `replaceFilter` returns\n       * `true` will be replaced.\n       *\n       * @param {object} env The environment of the `before-tokenize` hook.\n       * @param {string} language The language id.\n       * @param {RegExp} placeholderPattern The matches of this pattern will be replaced by placeholders.\n       * @param {(match: string) => boolean} [replaceFilter]\n       */\n      value: function value(env, language, placeholderPattern, replaceFilter) {\n        if (env.language !== language) {\n          return;\n        }\n\n        var tokenStack = env.tokenStack = [];\n        env.code = env.code.replace(placeholderPattern, function (match) {\n          if (typeof replaceFilter === 'function' && !replaceFilter(match)) {\n            return match;\n          }\n\n          var i = tokenStack.length;\n          var placeholder; // Check for existing strings\n\n          while (env.code.indexOf(placeholder = getPlaceholder(language, i)) !== -1) {\n            ++i;\n          } // Create a sparse array\n\n\n          tokenStack[i] = match;\n          return placeholder;\n        }); // Switch the grammar to markup\n\n        env.grammar = Prism.languages.markup;\n      }\n    },\n    tokenizePlaceholders: {\n      /**\n       * Replace placeholders with proper tokens after tokenizing.\n       *\n       * @param {object} env The environment of the `after-tokenize` hook.\n       * @param {string} language The language id.\n       */\n      value: function value(env, language) {\n        if (env.language !== language || !env.tokenStack) {\n          return;\n        } // Switch the grammar back\n\n\n        env.grammar = Prism.languages[language];\n        var j = 0;\n        var keys = Object.keys(env.tokenStack);\n\n        function walkTokens(tokens) {\n          for (var i = 0; i < tokens.length; i++) {\n            // all placeholders are replaced already\n            if (j >= keys.length) {\n              break;\n            }\n\n            var token = tokens[i];\n\n            if (typeof token === 'string' || token.content && typeof token.content === 'string') {\n              var k = keys[j];\n              var t = env.tokenStack[k];\n              var s = typeof token === 'string' ? token : token.content;\n              var placeholder = getPlaceholder(language, k);\n              var index = s.indexOf(placeholder);\n\n              if (index > -1) {\n                ++j;\n                var before = s.substring(0, index);\n                var middle = new Prism.Token(language, Prism.tokenize(t, env.grammar), 'language-' + language, t);\n                var after = s.substring(index + placeholder.length);\n                var replacement = [];\n\n                if (before) {\n                  replacement.push.apply(replacement, walkTokens([before]));\n                }\n\n                replacement.push(middle);\n\n                if (after) {\n                  replacement.push.apply(replacement, walkTokens([after]));\n                }\n\n                if (typeof token === 'string') {\n                  tokens.splice.apply(tokens, [i, 1].concat(replacement));\n                } else {\n                  token.content = replacement;\n                }\n              }\n            } else if (token.content\n            /* && typeof token.content !== 'string' */\n            ) {\n              walkTokens(token.content);\n            }\n          }\n\n          return tokens;\n        }\n\n        walkTokens(env.tokens);\n      }\n    }\n  });\n})(prism);\n/* \"prismjs/components/prism-handlebars\" */\n\n\n(function (Prism) {\n  Prism.languages.handlebars = {\n    'comment': /\\{\\{![\\s\\S]*?\\}\\}/,\n    'delimiter': {\n      pattern: /^\\{\\{\\{?|\\}\\}\\}?$/,\n      alias: 'punctuation'\n    },\n    'string': /([\"'])(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\n    'number': /\\b0x[\\dA-Fa-f]+\\b|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:[Ee][+-]?\\d+)?/,\n    'boolean': /\\b(?:false|true)\\b/,\n    'block': {\n      pattern: /^(\\s*(?:~\\s*)?)[#\\/]\\S+?(?=\\s*(?:~\\s*)?$|\\s)/,\n      lookbehind: true,\n      alias: 'keyword'\n    },\n    'brackets': {\n      pattern: /\\[[^\\]]+\\]/,\n      inside: {\n        punctuation: /\\[|\\]/,\n        variable: /[\\s\\S]+/\n      }\n    },\n    'punctuation': /[!\"#%&':()*+,.\\/;<=>@\\[\\\\\\]^`{|}~]/,\n    'variable': /[^!\"#%&'()*+,\\/;<=>@\\[\\\\\\]^`{|}~\\s]+/\n  };\n  Prism.hooks.add('before-tokenize', function (env) {\n    var handlebarsPattern = /\\{\\{\\{[\\s\\S]+?\\}\\}\\}|\\{\\{[\\s\\S]+?\\}\\}/g;\n    Prism.languages['markup-templating'].buildPlaceholders(env, 'handlebars', handlebarsPattern);\n  });\n  Prism.hooks.add('after-tokenize', function (env) {\n    Prism.languages['markup-templating'].tokenizePlaceholders(env, 'handlebars');\n  });\n  Prism.languages.hbs = Prism.languages.handlebars;\n})(prism);\n/* \"prismjs/components/prism-json\" */\n// https://www.json.org/json-en.html\n\n\nprism.languages.json = {\n  'property': {\n    pattern: /(^|[^\\\\])\"(?:\\\\.|[^\\\\\"\\r\\n])*\"(?=\\s*:)/,\n    lookbehind: true,\n    greedy: true\n  },\n  'string': {\n    pattern: /(^|[^\\\\])\"(?:\\\\.|[^\\\\\"\\r\\n])*\"(?!\\s*:)/,\n    lookbehind: true,\n    greedy: true\n  },\n  'comment': {\n    pattern: /\\/\\/.*|\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,\n    greedy: true\n  },\n  'number': /-?\\b\\d+(?:\\.\\d+)?(?:e[+-]?\\d+)?\\b/i,\n  'punctuation': /[{}[\\],]/,\n  'operator': /:/,\n  'boolean': /\\b(?:false|true)\\b/,\n  'null': {\n    pattern: /\\bnull\\b/,\n    alias: 'keyword'\n  }\n};\nprism.languages.webmanifest = prism.languages.json;\n/* \"prismjs/components/prism-less\" */\n\n/* FIXME :\n :extend() is not handled specifically : its highlighting is buggy.\n Mixin usage must be inside a ruleset to be highlighted.\n At-rules (e.g. import) containing interpolations are buggy.\n Detached rulesets are highlighted as at-rules.\n A comment before a mixin usage prevents the latter to be properly highlighted.\n */\n\nprism.languages.less = prism.languages.extend('css', {\n  'comment': [/\\/\\*[\\s\\S]*?\\*\\//, {\n    pattern: /(^|[^\\\\])\\/\\/.*/,\n    lookbehind: true\n  }],\n  'atrule': {\n    pattern: /@[\\w-](?:\\((?:[^(){}]|\\([^(){}]*\\))*\\)|[^(){};\\s]|\\s+(?!\\s))*?(?=\\s*\\{)/,\n    inside: {\n      'punctuation': /[:()]/\n    }\n  },\n  // selectors and mixins are considered the same\n  'selector': {\n    pattern: /(?:@\\{[\\w-]+\\}|[^{};\\s@])(?:@\\{[\\w-]+\\}|\\((?:[^(){}]|\\([^(){}]*\\))*\\)|[^(){};@\\s]|\\s+(?!\\s))*?(?=\\s*\\{)/,\n    inside: {\n      // mixin parameters\n      'variable': /@+[\\w-]+/\n    }\n  },\n  'property': /(?:@\\{[\\w-]+\\}|[\\w-])+(?:\\+_?)?(?=\\s*:)/,\n  'operator': /[+\\-*\\/]/\n});\nprism.languages.insertBefore('less', 'property', {\n  'variable': [// Variable declaration (the colon must be consumed!)\n  {\n    pattern: /@[\\w-]+\\s*:/,\n    inside: {\n      'punctuation': /:/\n    }\n  }, // Variable usage\n  /@@?[\\w-]+/],\n  'mixin-usage': {\n    pattern: /([{;]\\s*)[.#](?!\\d)[\\w-].*?(?=[(;])/,\n    lookbehind: true,\n    alias: 'function'\n  }\n});\n/* \"prismjs/components/prism-makefile\" */\n\nprism.languages.makefile = {\n  'comment': {\n    pattern: /(^|[^\\\\])#(?:\\\\(?:\\r\\n|[\\s\\S])|[^\\\\\\r\\n])*/,\n    lookbehind: true\n  },\n  'string': {\n    pattern: /([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,\n    greedy: true\n  },\n  'builtin-target': {\n    pattern: /\\.[A-Z][^:#=\\s]+(?=\\s*:(?!=))/,\n    alias: 'builtin'\n  },\n  'target': {\n    pattern: /^(?:[^:=\\s]|[ \\t]+(?![\\s:]))+(?=\\s*:(?!=))/m,\n    alias: 'symbol',\n    inside: {\n      'variable': /\\$+(?:(?!\\$)[^(){}:#=\\s]+|(?=[({]))/\n    }\n  },\n  'variable': /\\$+(?:(?!\\$)[^(){}:#=\\s]+|\\([@*%<^+?][DF]\\)|(?=[({]))/,\n  // Directives\n  'keyword': /-include\\b|\\b(?:define|else|endef|endif|export|ifn?def|ifn?eq|include|override|private|sinclude|undefine|unexport|vpath)\\b/,\n  'function': {\n    pattern: /(\\()(?:abspath|addsuffix|and|basename|call|dir|error|eval|file|filter(?:-out)?|findstring|firstword|flavor|foreach|guile|if|info|join|lastword|load|notdir|or|origin|patsubst|realpath|shell|sort|strip|subst|suffix|value|warning|wildcard|word(?:list|s)?)(?=[ \\t])/,\n    lookbehind: true\n  },\n  'operator': /(?:::|[?:+!])?=|[|@]/,\n  'punctuation': /[:;(){}]/\n};\n/* \"prismjs/components/prism-markdown\" */\n\n(function (Prism) {\n  // Allow only one line break\n  var inner = /(?:\\\\.|[^\\\\\\n\\r]|(?:\\n|\\r\\n?)(?![\\r\\n]))/.source;\n  /**\n   * This function is intended for the creation of the bold or italic pattern.\n   *\n   * This also adds a lookbehind group to the given pattern to ensure that the pattern is not backslash-escaped.\n   *\n   * _Note:_ Keep in mind that this adds a capturing group.\n   *\n   * @param {string} pattern\n   * @returns {RegExp}\n   */\n\n  function createInline(pattern) {\n    pattern = pattern.replace(/<inner>/g, function () {\n      return inner;\n    });\n    return RegExp(/((?:^|[^\\\\])(?:\\\\{2})*)/.source + '(?:' + pattern + ')');\n  }\n\n  var tableCell = /(?:\\\\.|``(?:[^`\\r\\n]|`(?!`))+``|`[^`\\r\\n]+`|[^\\\\|\\r\\n`])+/.source;\n  var tableRow = /\\|?__(?:\\|__)+\\|?(?:(?:\\n|\\r\\n?)|(?![\\s\\S]))/.source.replace(/__/g, function () {\n    return tableCell;\n  });\n  var tableLine = /\\|?[ \\t]*:?-{3,}:?[ \\t]*(?:\\|[ \\t]*:?-{3,}:?[ \\t]*)+\\|?(?:\\n|\\r\\n?)/.source;\n  Prism.languages.markdown = Prism.languages.extend('markup', {});\n  Prism.languages.insertBefore('markdown', 'prolog', {\n    'front-matter-block': {\n      pattern: /(^(?:\\s*[\\r\\n])?)---(?!.)[\\s\\S]*?[\\r\\n]---(?!.)/,\n      lookbehind: true,\n      greedy: true,\n      inside: {\n        'punctuation': /^---|---$/,\n        'front-matter': {\n          pattern: /\\S+(?:\\s+\\S+)*/,\n          alias: ['yaml', 'language-yaml'],\n          inside: Prism.languages.yaml\n        }\n      }\n    },\n    'blockquote': {\n      // > ...\n      pattern: /^>(?:[\\t ]*>)*/m,\n      alias: 'punctuation'\n    },\n    'table': {\n      pattern: RegExp('^' + tableRow + tableLine + '(?:' + tableRow + ')*', 'm'),\n      inside: {\n        'table-data-rows': {\n          pattern: RegExp('^(' + tableRow + tableLine + ')(?:' + tableRow + ')*$'),\n          lookbehind: true,\n          inside: {\n            'table-data': {\n              pattern: RegExp(tableCell),\n              inside: Prism.languages.markdown\n            },\n            'punctuation': /\\|/\n          }\n        },\n        'table-line': {\n          pattern: RegExp('^(' + tableRow + ')' + tableLine + '$'),\n          lookbehind: true,\n          inside: {\n            'punctuation': /\\||:?-{3,}:?/\n          }\n        },\n        'table-header-row': {\n          pattern: RegExp('^' + tableRow + '$'),\n          inside: {\n            'table-header': {\n              pattern: RegExp(tableCell),\n              alias: 'important',\n              inside: Prism.languages.markdown\n            },\n            'punctuation': /\\|/\n          }\n        }\n      }\n    },\n    'code': [{\n      // Prefixed by 4 spaces or 1 tab and preceded by an empty line\n      pattern: /((?:^|\\n)[ \\t]*\\n|(?:^|\\r\\n?)[ \\t]*\\r\\n?)(?: {4}|\\t).+(?:(?:\\n|\\r\\n?)(?: {4}|\\t).+)*/,\n      lookbehind: true,\n      alias: 'keyword'\n    }, {\n      // ```optional language\n      // code block\n      // ```\n      pattern: /^```[\\s\\S]*?^```$/m,\n      greedy: true,\n      inside: {\n        'code-block': {\n          pattern: /^(```.*(?:\\n|\\r\\n?))[\\s\\S]+?(?=(?:\\n|\\r\\n?)^```$)/m,\n          lookbehind: true\n        },\n        'code-language': {\n          pattern: /^(```).+/,\n          lookbehind: true\n        },\n        'punctuation': /```/\n      }\n    }],\n    'title': [{\n      // title 1\n      // =======\n      // title 2\n      // -------\n      pattern: /\\S.*(?:\\n|\\r\\n?)(?:==+|--+)(?=[ \\t]*$)/m,\n      alias: 'important',\n      inside: {\n        punctuation: /==+$|--+$/\n      }\n    }, {\n      // # title 1\n      // ###### title 6\n      pattern: /(^\\s*)#.+/m,\n      lookbehind: true,\n      alias: 'important',\n      inside: {\n        punctuation: /^#+|#+$/\n      }\n    }],\n    'hr': {\n      // ***\n      // ---\n      // * * *\n      // -----------\n      pattern: /(^\\s*)([*-])(?:[\\t ]*\\2){2,}(?=\\s*$)/m,\n      lookbehind: true,\n      alias: 'punctuation'\n    },\n    'list': {\n      // * item\n      // + item\n      // - item\n      // 1. item\n      pattern: /(^\\s*)(?:[*+-]|\\d+\\.)(?=[\\t ].)/m,\n      lookbehind: true,\n      alias: 'punctuation'\n    },\n    'url-reference': {\n      // [id]: http://example.com \"Optional title\"\n      // [id]: http://example.com 'Optional title'\n      // [id]: http://example.com (Optional title)\n      // [id]: <http://example.com> \"Optional title\"\n      pattern: /!?\\[[^\\]]+\\]:[\\t ]+(?:\\S+|<(?:\\\\.|[^>\\\\])+>)(?:[\\t ]+(?:\"(?:\\\\.|[^\"\\\\])*\"|'(?:\\\\.|[^'\\\\])*'|\\((?:\\\\.|[^)\\\\])*\\)))?/,\n      inside: {\n        'variable': {\n          pattern: /^(!?\\[)[^\\]]+/,\n          lookbehind: true\n        },\n        'string': /(?:\"(?:\\\\.|[^\"\\\\])*\"|'(?:\\\\.|[^'\\\\])*'|\\((?:\\\\.|[^)\\\\])*\\))$/,\n        'punctuation': /^[\\[\\]!:]|[<>]/\n      },\n      alias: 'url'\n    },\n    'bold': {\n      // **strong**\n      // __strong__\n      // allow one nested instance of italic text using the same delimiter\n      pattern: createInline(/\\b__(?:(?!_)<inner>|_(?:(?!_)<inner>)+_)+__\\b|\\*\\*(?:(?!\\*)<inner>|\\*(?:(?!\\*)<inner>)+\\*)+\\*\\*/.source),\n      lookbehind: true,\n      greedy: true,\n      inside: {\n        'content': {\n          pattern: /(^..)[\\s\\S]+(?=..$)/,\n          lookbehind: true,\n          inside: {} // see below\n\n        },\n        'punctuation': /\\*\\*|__/\n      }\n    },\n    'italic': {\n      // *em*\n      // _em_\n      // allow one nested instance of bold text using the same delimiter\n      pattern: createInline(/\\b_(?:(?!_)<inner>|__(?:(?!_)<inner>)+__)+_\\b|\\*(?:(?!\\*)<inner>|\\*\\*(?:(?!\\*)<inner>)+\\*\\*)+\\*/.source),\n      lookbehind: true,\n      greedy: true,\n      inside: {\n        'content': {\n          pattern: /(^.)[\\s\\S]+(?=.$)/,\n          lookbehind: true,\n          inside: {} // see below\n\n        },\n        'punctuation': /[*_]/\n      }\n    },\n    'strike': {\n      // ~~strike through~~\n      // ~strike~\n      // eslint-disable-next-line regexp/strict\n      pattern: createInline(/(~~?)(?:(?!~)<inner>)+\\2/.source),\n      lookbehind: true,\n      greedy: true,\n      inside: {\n        'content': {\n          pattern: /(^~~?)[\\s\\S]+(?=\\1$)/,\n          lookbehind: true,\n          inside: {} // see below\n\n        },\n        'punctuation': /~~?/\n      }\n    },\n    'code-snippet': {\n      // `code`\n      // ``code``\n      pattern: /(^|[^\\\\`])(?:``[^`\\r\\n]+(?:`[^`\\r\\n]+)*``(?!`)|`[^`\\r\\n]+`(?!`))/,\n      lookbehind: true,\n      greedy: true,\n      alias: ['code', 'keyword']\n    },\n    'url': {\n      // [example](http://example.com \"Optional title\")\n      // [example][id]\n      // [example] [id]\n      pattern: createInline(/!?\\[(?:(?!\\])<inner>)+\\](?:\\([^\\s)]+(?:[\\t ]+\"(?:\\\\.|[^\"\\\\])*\")?\\)|[ \\t]?\\[(?:(?!\\])<inner>)+\\])/.source),\n      lookbehind: true,\n      greedy: true,\n      inside: {\n        'operator': /^!/,\n        'content': {\n          pattern: /(^\\[)[^\\]]+(?=\\])/,\n          lookbehind: true,\n          inside: {} // see below\n\n        },\n        'variable': {\n          pattern: /(^\\][ \\t]?\\[)[^\\]]+(?=\\]$)/,\n          lookbehind: true\n        },\n        'url': {\n          pattern: /(^\\]\\()[^\\s)]+/,\n          lookbehind: true\n        },\n        'string': {\n          pattern: /(^[ \\t]+)\"(?:\\\\.|[^\"\\\\])*\"(?=\\)$)/,\n          lookbehind: true\n        }\n      }\n    }\n  });\n  ['url', 'bold', 'italic', 'strike'].forEach(function (token) {\n    ['url', 'bold', 'italic', 'strike', 'code-snippet'].forEach(function (inside) {\n      if (token !== inside) {\n        Prism.languages.markdown[token].inside.content.inside[inside] = Prism.languages.markdown[inside];\n      }\n    });\n  });\n  Prism.hooks.add('after-tokenize', function (env) {\n    if (env.language !== 'markdown' && env.language !== 'md') {\n      return;\n    }\n\n    function walkTokens(tokens) {\n      if (!tokens || typeof tokens === 'string') {\n        return;\n      }\n\n      for (var i = 0, l = tokens.length; i < l; i++) {\n        var token = tokens[i];\n\n        if (token.type !== 'code') {\n          walkTokens(token.content);\n          continue;\n        }\n        /*\n         * Add the correct `language-xxxx` class to this code block. Keep in mind that the `code-language` token\n         * is optional. But the grammar is defined so that there is only one case we have to handle:\n         *\n         * token.content = [\n         *     <span class=\"punctuation\">```</span>,\n         *     <span class=\"code-language\">xxxx</span>,\n         *     '\\n', // exactly one new lines (\\r or \\n or \\r\\n)\n         *     <span class=\"code-block\">...</span>,\n         *     '\\n', // exactly one new lines again\n         *     <span class=\"punctuation\">```</span>\n         * ];\n         */\n\n\n        var codeLang = token.content[1];\n        var codeBlock = token.content[3];\n\n        if (codeLang && codeBlock && codeLang.type === 'code-language' && codeBlock.type === 'code-block' && typeof codeLang.content === 'string') {\n          // this might be a language that Prism does not support\n          // do some replacements to support C++, C#, and F#\n          var lang = codeLang.content.replace(/\\b#/g, 'sharp').replace(/\\b\\+\\+/g, 'pp'); // only use the first word\n\n          lang = (/[a-z][\\w-]*/i.exec(lang) || [''])[0].toLowerCase();\n          var alias = 'language-' + lang; // add alias\n\n          if (!codeBlock.alias) {\n            codeBlock.alias = [alias];\n          } else if (typeof codeBlock.alias === 'string') {\n            codeBlock.alias = [codeBlock.alias, alias];\n          } else {\n            codeBlock.alias.push(alias);\n          }\n        }\n      }\n    }\n\n    walkTokens(env.tokens);\n  });\n  Prism.hooks.add('wrap', function (env) {\n    if (env.type !== 'code-block') {\n      return;\n    }\n\n    var codeLang = '';\n\n    for (var i = 0, l = env.classes.length; i < l; i++) {\n      var cls = env.classes[i];\n      var match = /language-(.+)/.exec(cls);\n\n      if (match) {\n        codeLang = match[1];\n        break;\n      }\n    }\n\n    var grammar = Prism.languages[codeLang];\n\n    if (!grammar) {\n      if (codeLang && codeLang !== 'none' && Prism.plugins.autoloader) {\n        var id = 'md-' + new Date().valueOf() + '-' + Math.floor(Math.random() * 1e16);\n        env.attributes['id'] = id;\n        Prism.plugins.autoloader.loadLanguages(codeLang, function () {\n          var ele = document.getElementById(id);\n\n          if (ele) {\n            ele.innerHTML = Prism.highlight(ele.textContent, Prism.languages[codeLang], codeLang);\n          }\n        });\n      }\n    } else {\n      env.content = Prism.highlight(textContent(env.content), grammar, codeLang);\n    }\n  });\n  var tagPattern = RegExp(Prism.languages.markup.tag.pattern.source, 'gi');\n  /**\n   * A list of known entity names.\n   *\n   * This will always be incomplete to save space. The current list is the one used by lowdash's unescape function.\n   *\n   * @see {@link https://github.com/lodash/lodash/blob/2da024c3b4f9947a48517639de7560457cd4ec6c/unescape.js#L2}\n   */\n\n  var KNOWN_ENTITY_NAMES = {\n    'amp': '&',\n    'lt': '<',\n    'gt': '>',\n    'quot': '\"'\n  }; // IE 11 doesn't support `String.fromCodePoint`\n\n  var fromCodePoint = String.fromCodePoint || String.fromCharCode;\n  /**\n   * Returns the text content of a given HTML source code string.\n   *\n   * @param {string} html\n   * @returns {string}\n   */\n\n  function textContent(html) {\n    // remove all tags\n    var text = html.replace(tagPattern, ''); // decode known entities\n\n    text = text.replace(/&(\\w{1,8}|#x?[\\da-f]{1,8});/gi, function (m, code) {\n      code = code.toLowerCase();\n\n      if (code[0] === '#') {\n        var value;\n\n        if (code[1] === 'x') {\n          value = parseInt(code.slice(2), 16);\n        } else {\n          value = Number(code.slice(1));\n        }\n\n        return fromCodePoint(value);\n      } else {\n        var known = KNOWN_ENTITY_NAMES[code];\n\n        if (known) {\n          return known;\n        } // unable to decode\n\n\n        return m;\n      }\n    });\n    return text;\n  }\n\n  Prism.languages.md = Prism.languages.markdown;\n})(prism);\n/* \"prismjs/components/prism-objectivec\" */\n\n\nprism.languages.objectivec = prism.languages.extend('c', {\n  'string': {\n    pattern: /@?\"(?:\\\\(?:\\r\\n|[\\s\\S])|[^\"\\\\\\r\\n])*\"/,\n    greedy: true\n  },\n  'keyword': /\\b(?:asm|auto|break|case|char|const|continue|default|do|double|else|enum|extern|float|for|goto|if|in|inline|int|long|register|return|self|short|signed|sizeof|static|struct|super|switch|typedef|typeof|union|unsigned|void|volatile|while)\\b|(?:@interface|@end|@implementation|@protocol|@class|@public|@protected|@private|@property|@try|@catch|@finally|@throw|@synthesize|@dynamic|@selector)\\b/,\n  'operator': /-[->]?|\\+\\+?|!=?|<<?=?|>>?=?|==?|&&?|\\|\\|?|[~^%?*\\/@]/\n});\ndelete prism.languages.objectivec['class-name'];\nprism.languages.objc = prism.languages.objectivec;\n/* \"prismjs/components/prism-ocaml\" */\n// https://ocaml.org/manual/lex.html\n\nprism.languages.ocaml = {\n  'comment': {\n    pattern: /\\(\\*[\\s\\S]*?\\*\\)/,\n    greedy: true\n  },\n  'char': {\n    pattern: /'(?:[^\\\\\\r\\n']|\\\\(?:.|[ox]?[0-9a-f]{1,3}))'/i,\n    greedy: true\n  },\n  'string': [{\n    pattern: /\"(?:\\\\(?:[\\s\\S]|\\r\\n)|[^\\\\\\r\\n\"])*\"/,\n    greedy: true\n  }, {\n    pattern: /\\{([a-z_]*)\\|[\\s\\S]*?\\|\\1\\}/,\n    greedy: true\n  }],\n  'number': [// binary and octal\n  /\\b(?:0b[01][01_]*|0o[0-7][0-7_]*)\\b/i, // hexadecimal\n  /\\b0x[a-f0-9][a-f0-9_]*(?:\\.[a-f0-9_]*)?(?:p[+-]?\\d[\\d_]*)?(?!\\w)/i, // decimal\n  /\\b\\d[\\d_]*(?:\\.[\\d_]*)?(?:e[+-]?\\d[\\d_]*)?(?!\\w)/i],\n  'directive': {\n    pattern: /\\B#\\w+/,\n    alias: 'property'\n  },\n  'label': {\n    pattern: /\\B~\\w+/,\n    alias: 'property'\n  },\n  'type-variable': {\n    pattern: /\\B'\\w+/,\n    alias: 'function'\n  },\n  'variant': {\n    pattern: /`\\w+/,\n    alias: 'symbol'\n  },\n  // For the list of keywords and operators,\n  // see: http://caml.inria.fr/pub/docs/manual-ocaml/lex.html#sec84\n  'keyword': /\\b(?:as|assert|begin|class|constraint|do|done|downto|else|end|exception|external|for|fun|function|functor|if|in|include|inherit|initializer|lazy|let|match|method|module|mutable|new|nonrec|object|of|open|private|rec|sig|struct|then|to|try|type|val|value|virtual|when|where|while|with)\\b/,\n  'boolean': /\\b(?:false|true)\\b/,\n  'operator-like-punctuation': {\n    pattern: /\\[[<>|]|[>|]\\]|\\{<|>\\}/,\n    alias: 'punctuation'\n  },\n  // Custom operators are allowed\n  'operator': /\\.[.~]|:[=>]|[=<>@^|&+\\-*\\/$%!?~][!$%&*+\\-.\\/:<=>?@^|~]*|\\b(?:and|asr|land|lor|lsl|lsr|lxor|mod|or)\\b/,\n  'punctuation': /;;|::|[(){}\\[\\].,:;#]|\\b_\\b/\n};\n/* \"prismjs/components/prism-python\" */\n\nprism.languages.python = {\n  'comment': {\n    pattern: /(^|[^\\\\])#.*/,\n    lookbehind: true,\n    greedy: true\n  },\n  'string-interpolation': {\n    pattern: /(?:f|fr|rf)(?:(\"\"\"|''')[\\s\\S]*?\\1|(\"|')(?:\\\\.|(?!\\2)[^\\\\\\r\\n])*\\2)/i,\n    greedy: true,\n    inside: {\n      'interpolation': {\n        // \"{\" <expression> <optional \"!s\", \"!r\", or \"!a\"> <optional \":\" format specifier> \"}\"\n        pattern: /((?:^|[^{])(?:\\{\\{)*)\\{(?!\\{)(?:[^{}]|\\{(?!\\{)(?:[^{}]|\\{(?!\\{)(?:[^{}])+\\})+\\})+\\}/,\n        lookbehind: true,\n        inside: {\n          'format-spec': {\n            pattern: /(:)[^:(){}]+(?=\\}$)/,\n            lookbehind: true\n          },\n          'conversion-option': {\n            pattern: /![sra](?=[:}]$)/,\n            alias: 'punctuation'\n          },\n          rest: null\n        }\n      },\n      'string': /[\\s\\S]+/\n    }\n  },\n  'triple-quoted-string': {\n    pattern: /(?:[rub]|br|rb)?(\"\"\"|''')[\\s\\S]*?\\1/i,\n    greedy: true,\n    alias: 'string'\n  },\n  'string': {\n    pattern: /(?:[rub]|br|rb)?(\"|')(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/i,\n    greedy: true\n  },\n  'function': {\n    pattern: /((?:^|\\s)def[ \\t]+)[a-zA-Z_]\\w*(?=\\s*\\()/g,\n    lookbehind: true\n  },\n  'class-name': {\n    pattern: /(\\bclass\\s+)\\w+/i,\n    lookbehind: true\n  },\n  'decorator': {\n    pattern: /(^[\\t ]*)@\\w+(?:\\.\\w+)*/m,\n    lookbehind: true,\n    alias: ['annotation', 'punctuation'],\n    inside: {\n      'punctuation': /\\./\n    }\n  },\n  'keyword': /\\b(?:_(?=\\s*:)|and|as|assert|async|await|break|case|class|continue|def|del|elif|else|except|exec|finally|for|from|global|if|import|in|is|lambda|match|nonlocal|not|or|pass|print|raise|return|try|while|with|yield)\\b/,\n  'builtin': /\\b(?:__import__|abs|all|any|apply|ascii|basestring|bin|bool|buffer|bytearray|bytes|callable|chr|classmethod|cmp|coerce|compile|complex|delattr|dict|dir|divmod|enumerate|eval|execfile|file|filter|float|format|frozenset|getattr|globals|hasattr|hash|help|hex|id|input|int|intern|isinstance|issubclass|iter|len|list|locals|long|map|max|memoryview|min|next|object|oct|open|ord|pow|property|range|raw_input|reduce|reload|repr|reversed|round|set|setattr|slice|sorted|staticmethod|str|sum|super|tuple|type|unichr|unicode|vars|xrange|zip)\\b/,\n  'boolean': /\\b(?:False|None|True)\\b/,\n  'number': /\\b0(?:b(?:_?[01])+|o(?:_?[0-7])+|x(?:_?[a-f0-9])+)\\b|(?:\\b\\d+(?:_\\d+)*(?:\\.(?:\\d+(?:_\\d+)*)?)?|\\B\\.\\d+(?:_\\d+)*)(?:e[+-]?\\d+(?:_\\d+)*)?j?(?!\\w)/i,\n  'operator': /[-+%=]=?|!=|:=|\\*\\*?=?|\\/\\/?=?|<[<=>]?|>[=>]?|[&|^~]/,\n  'punctuation': /[{}[\\];(),.:]/\n};\nprism.languages.python['string-interpolation'].inside['interpolation'].inside.rest = prism.languages.python;\nprism.languages.py = prism.languages.python;\n/* \"prismjs/components/prism-reason\" */\n\nprism.languages.reason = prism.languages.extend('clike', {\n  'string': {\n    pattern: /\"(?:\\\\(?:\\r\\n|[\\s\\S])|[^\\\\\\r\\n\"])*\"/,\n    greedy: true\n  },\n  // 'class-name' must be matched *after* 'constructor' defined below\n  'class-name': /\\b[A-Z]\\w*/,\n  'keyword': /\\b(?:and|as|assert|begin|class|constraint|do|done|downto|else|end|exception|external|for|fun|function|functor|if|in|include|inherit|initializer|lazy|let|method|module|mutable|new|nonrec|object|of|open|or|private|rec|sig|struct|switch|then|to|try|type|val|virtual|when|while|with)\\b/,\n  'operator': /\\.{3}|:[:=]|\\|>|->|=(?:==?|>)?|<=?|>=?|[|^?'#!~`]|[+\\-*\\/]\\.?|\\b(?:asr|land|lor|lsl|lsr|lxor|mod)\\b/\n});\nprism.languages.insertBefore('reason', 'class-name', {\n  'char': {\n    pattern: /'(?:\\\\x[\\da-f]{2}|\\\\o[0-3][0-7][0-7]|\\\\\\d{3}|\\\\.|[^'\\\\\\r\\n])'/,\n    greedy: true\n  },\n  // Negative look-ahead prevents from matching things like String.capitalize\n  'constructor': /\\b[A-Z]\\w*\\b(?!\\s*\\.)/,\n  'label': {\n    pattern: /\\b[a-z]\\w*(?=::)/,\n    alias: 'symbol'\n  }\n}); // We can't match functions property, so let's not even try.\n\ndelete prism.languages.reason.function;\n/* \"prismjs/components/prism-sass\" */\n\n(function (Prism) {\n  Prism.languages.sass = Prism.languages.extend('css', {\n    // Sass comments don't need to be closed, only indented\n    'comment': {\n      pattern: /^([ \\t]*)\\/[\\/*].*(?:(?:\\r?\\n|\\r)\\1[ \\t].+)*/m,\n      lookbehind: true,\n      greedy: true\n    }\n  });\n  Prism.languages.insertBefore('sass', 'atrule', {\n    // We want to consume the whole line\n    'atrule-line': {\n      // Includes support for = and + shortcuts\n      pattern: /^(?:[ \\t]*)[@+=].+/m,\n      greedy: true,\n      inside: {\n        'atrule': /(?:@[\\w-]+|[+=])/\n      }\n    }\n  });\n  delete Prism.languages.sass.atrule;\n  var variable = /\\$[-\\w]+|#\\{\\$[-\\w]+\\}/;\n  var operator = [/[+*\\/%]|[=!]=|<=?|>=?|\\b(?:and|not|or)\\b/, {\n    pattern: /(\\s)-(?=\\s)/,\n    lookbehind: true\n  }];\n  Prism.languages.insertBefore('sass', 'property', {\n    // We want to consume the whole line\n    'variable-line': {\n      pattern: /^[ \\t]*\\$.+/m,\n      greedy: true,\n      inside: {\n        'punctuation': /:/,\n        'variable': variable,\n        'operator': operator\n      }\n    },\n    // We want to consume the whole line\n    'property-line': {\n      pattern: /^[ \\t]*(?:[^:\\s]+ *:.*|:[^:\\s].*)/m,\n      greedy: true,\n      inside: {\n        'property': [/[^:\\s]+(?=\\s*:)/, {\n          pattern: /(:)[^:\\s]+/,\n          lookbehind: true\n        }],\n        'punctuation': /:/,\n        'variable': variable,\n        'operator': operator,\n        'important': Prism.languages.sass.important\n      }\n    }\n  });\n  delete Prism.languages.sass.property;\n  delete Prism.languages.sass.important; // Now that whole lines for other patterns are consumed,\n  // what's left should be selectors\n\n  Prism.languages.insertBefore('sass', 'punctuation', {\n    'selector': {\n      pattern: /^([ \\t]*)\\S(?:,[^,\\r\\n]+|[^,\\r\\n]*)(?:,[^,\\r\\n]+)*(?:,(?:\\r?\\n|\\r)\\1[ \\t]+\\S(?:,[^,\\r\\n]+|[^,\\r\\n]*)(?:,[^,\\r\\n]+)*)*/m,\n      lookbehind: true,\n      greedy: true\n    }\n  });\n})(prism);\n/* \"prismjs/components/prism-scss\" */\n\n\nprism.languages.scss = prism.languages.extend('css', {\n  'comment': {\n    pattern: /(^|[^\\\\])(?:\\/\\*[\\s\\S]*?\\*\\/|\\/\\/.*)/,\n    lookbehind: true\n  },\n  'atrule': {\n    pattern: /@[\\w-](?:\\([^()]+\\)|[^()\\s]|\\s+(?!\\s))*?(?=\\s+[{;])/,\n    inside: {\n      'rule': /@[\\w-]+/ // See rest below\n\n    }\n  },\n  // url, compassified\n  'url': /(?:[-a-z]+-)?url(?=\\()/i,\n  // CSS selector regex is not appropriate for Sass\n  // since there can be lot more things (var, @ directive, nesting..)\n  // a selector must start at the end of a property or after a brace (end of other rules or nesting)\n  // it can contain some characters that aren't used for defining rules or end of selector, & (parent selector), or interpolated variable\n  // the end of a selector is found when there is no rules in it ( {} or {\\s}) or if there is a property (because an interpolated var\n  // can \"pass\" as a selector- e.g: proper#{$erty})\n  // this one was hard to do, so please be careful if you edit this one :)\n  'selector': {\n    // Initial look-ahead is used to prevent matching of blank selectors\n    pattern: /(?=\\S)[^@;{}()]?(?:[^@;{}()\\s]|\\s+(?!\\s)|#\\{\\$[-\\w]+\\})+(?=\\s*\\{(?:\\}|\\s|[^}][^:{}]*[:{][^}]))/,\n    inside: {\n      'parent': {\n        pattern: /&/,\n        alias: 'important'\n      },\n      'placeholder': /%[-\\w]+/,\n      'variable': /\\$[-\\w]+|#\\{\\$[-\\w]+\\}/\n    }\n  },\n  'property': {\n    pattern: /(?:[-\\w]|\\$[-\\w]|#\\{\\$[-\\w]+\\})+(?=\\s*:)/,\n    inside: {\n      'variable': /\\$[-\\w]+|#\\{\\$[-\\w]+\\}/\n    }\n  }\n});\nprism.languages.insertBefore('scss', 'atrule', {\n  'keyword': [/@(?:content|debug|each|else(?: if)?|extend|for|forward|function|if|import|include|mixin|return|use|warn|while)\\b/i, {\n    pattern: /( )(?:from|through)(?= )/,\n    lookbehind: true\n  }]\n});\nprism.languages.insertBefore('scss', 'important', {\n  // var and interpolated vars\n  'variable': /\\$[-\\w]+|#\\{\\$[-\\w]+\\}/\n});\nprism.languages.insertBefore('scss', 'function', {\n  'module-modifier': {\n    pattern: /\\b(?:as|hide|show|with)\\b/i,\n    alias: 'keyword'\n  },\n  'placeholder': {\n    pattern: /%[-\\w]+/,\n    alias: 'selector'\n  },\n  'statement': {\n    pattern: /\\B!(?:default|optional)\\b/i,\n    alias: 'keyword'\n  },\n  'boolean': /\\b(?:false|true)\\b/,\n  'null': {\n    pattern: /\\bnull\\b/,\n    alias: 'keyword'\n  },\n  'operator': {\n    pattern: /(\\s)(?:[-+*\\/%]|[=!]=|<=?|>=?|and|not|or)(?=\\s)/,\n    lookbehind: true\n  }\n});\nprism.languages.scss['atrule'].inside.rest = prism.languages.scss;\n/* \"prismjs/components/prism-sql\" */\n\nprism.languages.sql = {\n  'comment': {\n    pattern: /(^|[^\\\\])(?:\\/\\*[\\s\\S]*?\\*\\/|(?:--|\\/\\/|#).*)/,\n    lookbehind: true\n  },\n  'variable': [{\n    pattern: /@([\"'`])(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])+\\1/,\n    greedy: true\n  }, /@[\\w.$]+/],\n  'string': {\n    pattern: /(^|[^@\\\\])(\"|')(?:\\\\[\\s\\S]|(?!\\2)[^\\\\]|\\2\\2)*\\2/,\n    greedy: true,\n    lookbehind: true\n  },\n  'identifier': {\n    pattern: /(^|[^@\\\\])`(?:\\\\[\\s\\S]|[^`\\\\]|``)*`/,\n    greedy: true,\n    lookbehind: true,\n    inside: {\n      'punctuation': /^`|`$/\n    }\n  },\n  'function': /\\b(?:AVG|COUNT|FIRST|FORMAT|LAST|LCASE|LEN|MAX|MID|MIN|MOD|NOW|ROUND|SUM|UCASE)(?=\\s*\\()/i,\n  // Should we highlight user defined functions too?\n  'keyword': /\\b(?:ACTION|ADD|AFTER|ALGORITHM|ALL|ALTER|ANALYZE|ANY|APPLY|AS|ASC|AUTHORIZATION|AUTO_INCREMENT|BACKUP|BDB|BEGIN|BERKELEYDB|BIGINT|BINARY|BIT|BLOB|BOOL|BOOLEAN|BREAK|BROWSE|BTREE|BULK|BY|CALL|CASCADED?|CASE|CHAIN|CHAR(?:ACTER|SET)?|CHECK(?:POINT)?|CLOSE|CLUSTERED|COALESCE|COLLATE|COLUMNS?|COMMENT|COMMIT(?:TED)?|COMPUTE|CONNECT|CONSISTENT|CONSTRAINT|CONTAINS(?:TABLE)?|CONTINUE|CONVERT|CREATE|CROSS|CURRENT(?:_DATE|_TIME|_TIMESTAMP|_USER)?|CURSOR|CYCLE|DATA(?:BASES?)?|DATE(?:TIME)?|DAY|DBCC|DEALLOCATE|DEC|DECIMAL|DECLARE|DEFAULT|DEFINER|DELAYED|DELETE|DELIMITERS?|DENY|DESC|DESCRIBE|DETERMINISTIC|DISABLE|DISCARD|DISK|DISTINCT|DISTINCTROW|DISTRIBUTED|DO|DOUBLE|DROP|DUMMY|DUMP(?:FILE)?|DUPLICATE|ELSE(?:IF)?|ENABLE|ENCLOSED|END|ENGINE|ENUM|ERRLVL|ERRORS|ESCAPED?|EXCEPT|EXEC(?:UTE)?|EXISTS|EXIT|EXPLAIN|EXTENDED|FETCH|FIELDS|FILE|FILLFACTOR|FIRST|FIXED|FLOAT|FOLLOWING|FOR(?: EACH ROW)?|FORCE|FOREIGN|FREETEXT(?:TABLE)?|FROM|FULL|FUNCTION|GEOMETRY(?:COLLECTION)?|GLOBAL|GOTO|GRANT|GROUP|HANDLER|HASH|HAVING|HOLDLOCK|HOUR|IDENTITY(?:COL|_INSERT)?|IF|IGNORE|IMPORT|INDEX|INFILE|INNER|INNODB|INOUT|INSERT|INT|INTEGER|INTERSECT|INTERVAL|INTO|INVOKER|ISOLATION|ITERATE|JOIN|KEYS?|KILL|LANGUAGE|LAST|LEAVE|LEFT|LEVEL|LIMIT|LINENO|LINES|LINESTRING|LOAD|LOCAL|LOCK|LONG(?:BLOB|TEXT)|LOOP|MATCH(?:ED)?|MEDIUM(?:BLOB|INT|TEXT)|MERGE|MIDDLEINT|MINUTE|MODE|MODIFIES|MODIFY|MONTH|MULTI(?:LINESTRING|POINT|POLYGON)|NATIONAL|NATURAL|NCHAR|NEXT|NO|NONCLUSTERED|NULLIF|NUMERIC|OFF?|OFFSETS?|ON|OPEN(?:DATASOURCE|QUERY|ROWSET)?|OPTIMIZE|OPTION(?:ALLY)?|ORDER|OUT(?:ER|FILE)?|OVER|PARTIAL|PARTITION|PERCENT|PIVOT|PLAN|POINT|POLYGON|PRECEDING|PRECISION|PREPARE|PREV|PRIMARY|PRINT|PRIVILEGES|PROC(?:EDURE)?|PUBLIC|PURGE|QUICK|RAISERROR|READS?|REAL|RECONFIGURE|REFERENCES|RELEASE|RENAME|REPEAT(?:ABLE)?|REPLACE|REPLICATION|REQUIRE|RESIGNAL|RESTORE|RESTRICT|RETURN(?:ING|S)?|REVOKE|RIGHT|ROLLBACK|ROUTINE|ROW(?:COUNT|GUIDCOL|S)?|RTREE|RULE|SAVE(?:POINT)?|SCHEMA|SECOND|SELECT|SERIAL(?:IZABLE)?|SESSION(?:_USER)?|SET(?:USER)?|SHARE|SHOW|SHUTDOWN|SIMPLE|SMALLINT|SNAPSHOT|SOME|SONAME|SQL|START(?:ING)?|STATISTICS|STATUS|STRIPED|SYSTEM_USER|TABLES?|TABLESPACE|TEMP(?:ORARY|TABLE)?|TERMINATED|TEXT(?:SIZE)?|THEN|TIME(?:STAMP)?|TINY(?:BLOB|INT|TEXT)|TOP?|TRAN(?:SACTIONS?)?|TRIGGER|TRUNCATE|TSEQUAL|TYPES?|UNBOUNDED|UNCOMMITTED|UNDEFINED|UNION|UNIQUE|UNLOCK|UNPIVOT|UNSIGNED|UPDATE(?:TEXT)?|USAGE|USE|USER|USING|VALUES?|VAR(?:BINARY|CHAR|CHARACTER|YING)|VIEW|WAITFOR|WARNINGS|WHEN|WHERE|WHILE|WITH(?: ROLLUP|IN)?|WORK|WRITE(?:TEXT)?|YEAR)\\b/i,\n  'boolean': /\\b(?:FALSE|NULL|TRUE)\\b/i,\n  'number': /\\b0x[\\da-f]+\\b|\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+\\b/i,\n  'operator': /[-+*\\/=%^~]|&&?|\\|\\|?|!=?|<(?:=>?|<|>)?|>[>=]?|\\b(?:AND|BETWEEN|DIV|ILIKE|IN|IS|LIKE|NOT|OR|REGEXP|RLIKE|SOUNDS LIKE|XOR)\\b/i,\n  'punctuation': /[;[\\]()`,.]/\n};\n/* \"prismjs/components/prism-stylus\" */\n\n(function (Prism) {\n  var unit = {\n    pattern: /(\\b\\d+)(?:%|[a-z]+)/,\n    lookbehind: true\n  }; // 123 -123 .123 -.123 12.3 -12.3\n\n  var number = {\n    pattern: /(^|[^\\w.-])-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/,\n    lookbehind: true\n  };\n  var inside = {\n    'comment': {\n      pattern: /(^|[^\\\\])(?:\\/\\*[\\s\\S]*?\\*\\/|\\/\\/.*)/,\n      lookbehind: true\n    },\n    'url': {\n      pattern: /\\burl\\(([\"']?).*?\\1\\)/i,\n      greedy: true\n    },\n    'string': {\n      pattern: /(\"|')(?:(?!\\1)[^\\\\\\r\\n]|\\\\(?:\\r\\n|[\\s\\S]))*\\1/,\n      greedy: true\n    },\n    'interpolation': null,\n    // See below\n    'func': null,\n    // See below\n    'important': /\\B!(?:important|optional)\\b/i,\n    'keyword': {\n      pattern: /(^|\\s+)(?:(?:else|for|if|return|unless)(?=\\s|$)|@[\\w-]+)/,\n      lookbehind: true\n    },\n    'hexcode': /#[\\da-f]{3,6}/i,\n    'color': [/\\b(?:AliceBlue|AntiqueWhite|Aqua|Aquamarine|Azure|Beige|Bisque|Black|BlanchedAlmond|Blue|BlueViolet|Brown|BurlyWood|CadetBlue|Chartreuse|Chocolate|Coral|CornflowerBlue|Cornsilk|Crimson|Cyan|DarkBlue|DarkCyan|DarkGoldenRod|DarkGr[ae]y|DarkGreen|DarkKhaki|DarkMagenta|DarkOliveGreen|DarkOrange|DarkOrchid|DarkRed|DarkSalmon|DarkSeaGreen|DarkSlateBlue|DarkSlateGr[ae]y|DarkTurquoise|DarkViolet|DeepPink|DeepSkyBlue|DimGr[ae]y|DodgerBlue|FireBrick|FloralWhite|ForestGreen|Fuchsia|Gainsboro|GhostWhite|Gold|GoldenRod|Gr[ae]y|Green|GreenYellow|HoneyDew|HotPink|IndianRed|Indigo|Ivory|Khaki|Lavender|LavenderBlush|LawnGreen|LemonChiffon|LightBlue|LightCoral|LightCyan|LightGoldenRodYellow|LightGr[ae]y|LightGreen|LightPink|LightSalmon|LightSeaGreen|LightSkyBlue|LightSlateGr[ae]y|LightSteelBlue|LightYellow|Lime|LimeGreen|Linen|Magenta|Maroon|MediumAquaMarine|MediumBlue|MediumOrchid|MediumPurple|MediumSeaGreen|MediumSlateBlue|MediumSpringGreen|MediumTurquoise|MediumVioletRed|MidnightBlue|MintCream|MistyRose|Moccasin|NavajoWhite|Navy|OldLace|Olive|OliveDrab|Orange|OrangeRed|Orchid|PaleGoldenRod|PaleGreen|PaleTurquoise|PaleVioletRed|PapayaWhip|PeachPuff|Peru|Pink|Plum|PowderBlue|Purple|Red|RosyBrown|RoyalBlue|SaddleBrown|Salmon|SandyBrown|SeaGreen|SeaShell|Sienna|Silver|SkyBlue|SlateBlue|SlateGr[ae]y|Snow|SpringGreen|SteelBlue|Tan|Teal|Thistle|Tomato|Transparent|Turquoise|Violet|Wheat|White|WhiteSmoke|Yellow|YellowGreen)\\b/i, {\n      pattern: /\\b(?:hsl|rgb)\\(\\s*\\d{1,3}\\s*,\\s*\\d{1,3}%?\\s*,\\s*\\d{1,3}%?\\s*\\)\\B|\\b(?:hsl|rgb)a\\(\\s*\\d{1,3}\\s*,\\s*\\d{1,3}%?\\s*,\\s*\\d{1,3}%?\\s*,\\s*(?:0|0?\\.\\d+|1)\\s*\\)\\B/i,\n      inside: {\n        'unit': unit,\n        'number': number,\n        'function': /[\\w-]+(?=\\()/,\n        'punctuation': /[(),]/\n      }\n    }],\n    'entity': /\\\\[\\da-f]{1,8}/i,\n    'unit': unit,\n    'boolean': /\\b(?:false|true)\\b/,\n    'operator': [// We want non-word chars around \"-\" because it is\n    // accepted in property names.\n    /~|[+!\\/%<>?=]=?|[-:]=|\\*[*=]?|\\.{2,3}|&&|\\|\\||\\B-\\B|\\b(?:and|in|is(?: a| defined| not|nt)?|not|or)\\b/],\n    'number': number,\n    'punctuation': /[{}()\\[\\];:,]/\n  };\n  inside['interpolation'] = {\n    pattern: /\\{[^\\r\\n}:]+\\}/,\n    alias: 'variable',\n    inside: {\n      'delimiter': {\n        pattern: /^\\{|\\}$/,\n        alias: 'punctuation'\n      },\n      rest: inside\n    }\n  };\n  inside['func'] = {\n    pattern: /[\\w-]+\\([^)]*\\).*/,\n    inside: {\n      'function': /^[^(]+/,\n      rest: inside\n    }\n  };\n  Prism.languages.stylus = {\n    'atrule-declaration': {\n      pattern: /(^[ \\t]*)@.+/m,\n      lookbehind: true,\n      inside: {\n        'atrule': /^@[\\w-]+/,\n        rest: inside\n      }\n    },\n    'variable-declaration': {\n      pattern: /(^[ \\t]*)[\\w$-]+\\s*.?=[ \\t]*(?:\\{[^{}]*\\}|\\S.*|$)/m,\n      lookbehind: true,\n      inside: {\n        'variable': /^\\S+/,\n        rest: inside\n      }\n    },\n    'statement': {\n      pattern: /(^[ \\t]*)(?:else|for|if|return|unless)[ \\t].+/m,\n      lookbehind: true,\n      inside: {\n        'keyword': /^\\S+/,\n        rest: inside\n      }\n    },\n    // A property/value pair cannot end with a comma or a brace\n    // It cannot have indented content unless it ended with a semicolon\n    'property-declaration': {\n      pattern: /((?:^|\\{)([ \\t]*))(?:[\\w-]|\\{[^}\\r\\n]+\\})+(?:\\s*:\\s*|[ \\t]+)(?!\\s)[^{\\r\\n]*(?:;|[^{\\r\\n,]$(?!(?:\\r?\\n|\\r)(?:\\{|\\2[ \\t])))/m,\n      lookbehind: true,\n      inside: {\n        'property': {\n          pattern: /^[^\\s:]+/,\n          inside: {\n            'interpolation': inside.interpolation\n          }\n        },\n        rest: inside\n      }\n    },\n    // A selector can contain parentheses only as part of a pseudo-element\n    // It can span multiple lines.\n    // It must end with a comma or an accolade or have indented content.\n    'selector': {\n      pattern: /(^[ \\t]*)(?:(?=\\S)(?:[^{}\\r\\n:()]|::?[\\w-]+(?:\\([^)\\r\\n]*\\)|(?![\\w-]))|\\{[^}\\r\\n]+\\})+)(?:(?:\\r?\\n|\\r)(?:\\1(?:(?=\\S)(?:[^{}\\r\\n:()]|::?[\\w-]+(?:\\([^)\\r\\n]*\\)|(?![\\w-]))|\\{[^}\\r\\n]+\\})+)))*(?:,$|\\{|(?=(?:\\r?\\n|\\r)(?:\\{|\\1[ \\t])))/m,\n      lookbehind: true,\n      inside: {\n        'interpolation': inside.interpolation,\n        'comment': inside.comment,\n        'punctuation': /[{},]/\n      }\n    },\n    'func': inside.func,\n    'string': inside.string,\n    'comment': {\n      pattern: /(^|[^\\\\])(?:\\/\\*[\\s\\S]*?\\*\\/|\\/\\/.*)/,\n      lookbehind: true,\n      greedy: true\n    },\n    'interpolation': inside.interpolation,\n    'punctuation': /[{}()\\[\\];:.]/\n  };\n})(prism);\n/* \"prismjs/components/prism-typescript\" */\n\n\n(function (Prism) {\n  Prism.languages.typescript = Prism.languages.extend('javascript', {\n    'class-name': {\n      pattern: /(\\b(?:class|extends|implements|instanceof|interface|new|type)\\s+)(?!keyof\\b)(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?:\\s*<(?:[^<>]|<(?:[^<>]|<[^<>]*>)*>)*>)?/,\n      lookbehind: true,\n      greedy: true,\n      inside: null // see below\n\n    },\n    'builtin': /\\b(?:Array|Function|Promise|any|boolean|console|never|number|string|symbol|unknown)\\b/\n  }); // The keywords TypeScript adds to JavaScript\n\n  Prism.languages.typescript.keyword.push(/\\b(?:abstract|declare|is|keyof|readonly|require)\\b/, // keywords that have to be followed by an identifier\n  /\\b(?:asserts|infer|interface|module|namespace|type)\\b(?=\\s*(?:[{_$a-zA-Z\\xA0-\\uFFFF]|$))/, // This is for `import type *, {}`\n  /\\btype\\b(?=\\s*(?:[\\{*]|$))/); // doesn't work with TS because TS is too complex\n\n  delete Prism.languages.typescript['parameter'];\n  delete Prism.languages.typescript['literal-property']; // a version of typescript specifically for highlighting types\n\n  var typeInside = Prism.languages.extend('typescript', {});\n  delete typeInside['class-name'];\n  Prism.languages.typescript['class-name'].inside = typeInside;\n  Prism.languages.insertBefore('typescript', 'function', {\n    'decorator': {\n      pattern: /@[$\\w\\xA0-\\uFFFF]+/,\n      inside: {\n        'at': {\n          pattern: /^@/,\n          alias: 'operator'\n        },\n        'function': /^[\\s\\S]+/\n      }\n    },\n    'generic-function': {\n      // e.g. foo<T extends \"bar\" | \"baz\">( ...\n      pattern: /#?(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*\\s*<(?:[^<>]|<(?:[^<>]|<[^<>]*>)*>)*>(?=\\s*\\()/,\n      greedy: true,\n      inside: {\n        'function': /^#?(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*/,\n        'generic': {\n          pattern: /<[\\s\\S]+/,\n          // everything after the first <\n          alias: 'class-name',\n          inside: typeInside\n        }\n      }\n    }\n  });\n  Prism.languages.ts = Prism.languages.typescript;\n})(prism);\n/* \"prismjs/components/prism-tsx\" */\n\n\n(function (Prism) {\n  var typescript = Prism.util.clone(Prism.languages.typescript);\n  Prism.languages.tsx = Prism.languages.extend('jsx', typescript); // doesn't work with TS because TS is too complex\n\n  delete Prism.languages.tsx['parameter'];\n  delete Prism.languages.tsx['literal-property']; // This will prevent collisions between TSX tags and TS generic types.\n  // Idea by https://github.com/karlhorky\n  // Discussion: https://github.com/PrismJS/prism/issues/2594#issuecomment-710666928\n\n  var tag = Prism.languages.tsx.tag;\n  tag.pattern = RegExp(/(^|[^\\w$]|(?=<\\/))/.source + '(?:' + tag.pattern.source + ')', tag.pattern.flags);\n  tag.lookbehind = true;\n})(prism);\n/* \"prismjs/components/prism-wasm\" */\n\n\nprism.languages.wasm = {\n  'comment': [/\\(;[\\s\\S]*?;\\)/, {\n    pattern: /;;.*/,\n    greedy: true\n  }],\n  'string': {\n    pattern: /\"(?:\\\\[\\s\\S]|[^\"\\\\])*\"/,\n    greedy: true\n  },\n  'keyword': [{\n    pattern: /\\b(?:align|offset)=/,\n    inside: {\n      'operator': /=/\n    }\n  }, {\n    pattern: /\\b(?:(?:f32|f64|i32|i64)(?:\\.(?:abs|add|and|ceil|clz|const|convert_[su]\\/i(?:32|64)|copysign|ctz|demote\\/f64|div(?:_[su])?|eqz?|extend_[su]\\/i32|floor|ge(?:_[su])?|gt(?:_[su])?|le(?:_[su])?|load(?:(?:8|16|32)_[su])?|lt(?:_[su])?|max|min|mul|neg?|nearest|or|popcnt|promote\\/f32|reinterpret\\/[fi](?:32|64)|rem_[su]|rot[lr]|shl|shr_[su]|sqrt|store(?:8|16|32)?|sub|trunc(?:_[su]\\/f(?:32|64))?|wrap\\/i64|xor))?|memory\\.(?:grow|size))\\b/,\n    inside: {\n      'punctuation': /\\./\n    }\n  }, /\\b(?:anyfunc|block|br(?:_if|_table)?|call(?:_indirect)?|data|drop|elem|else|end|export|func|get_(?:global|local)|global|if|import|local|loop|memory|module|mut|nop|offset|param|result|return|select|set_(?:global|local)|start|table|tee_local|then|type|unreachable)\\b/],\n  'variable': /\\$[\\w!#$%&'*+\\-./:<=>?@\\\\^`|~]+/,\n  'number': /[+-]?\\b(?:\\d(?:_?\\d)*(?:\\.\\d(?:_?\\d)*)?(?:[eE][+-]?\\d(?:_?\\d)*)?|0x[\\da-fA-F](?:_?[\\da-fA-F])*(?:\\.[\\da-fA-F](?:_?[\\da-fA-D])*)?(?:[pP][+-]?\\d(?:_?\\d)*)?)\\b|\\binf\\b|\\bnan(?::0x[\\da-fA-F](?:_?[\\da-fA-D])*)?\\b/,\n  'punctuation': /[()]/\n};\n/* \"prismjs/components/prism-yaml\" */\n\n(function (Prism) {\n  // https://yaml.org/spec/1.2/spec.html#c-ns-anchor-property\n  // https://yaml.org/spec/1.2/spec.html#c-ns-alias-node\n  var anchorOrAlias = /[*&][^\\s[\\]{},]+/; // https://yaml.org/spec/1.2/spec.html#c-ns-tag-property\n\n  var tag = /!(?:<[\\w\\-%#;/?:@&=+$,.!~*'()[\\]]+>|(?:[a-zA-Z\\d-]*!)?[\\w\\-%#;/?:@&=+$.~*'()]+)?/; // https://yaml.org/spec/1.2/spec.html#c-ns-properties(n,c)\n\n  var properties = '(?:' + tag.source + '(?:[ \\t]+' + anchorOrAlias.source + ')?|' + anchorOrAlias.source + '(?:[ \\t]+' + tag.source + ')?)'; // https://yaml.org/spec/1.2/spec.html#ns-plain(n,c)\n  // This is a simplified version that doesn't support \"#\" and multiline keys\n  // All these long scarry character classes are simplified versions of YAML's characters\n\n  var plainKey = /(?:[^\\s\\x00-\\x08\\x0e-\\x1f!\"#%&'*,\\-:>?@[\\]`{|}\\x7f-\\x84\\x86-\\x9f\\ud800-\\udfff\\ufffe\\uffff]|[?:-]<PLAIN>)(?:[ \\t]*(?:(?![#:])<PLAIN>|:<PLAIN>))*/.source.replace(/<PLAIN>/g, function () {\n    return /[^\\s\\x00-\\x08\\x0e-\\x1f,[\\]{}\\x7f-\\x84\\x86-\\x9f\\ud800-\\udfff\\ufffe\\uffff]/.source;\n  });\n  var string = /\"(?:[^\"\\\\\\r\\n]|\\\\.)*\"|'(?:[^'\\\\\\r\\n]|\\\\.)*'/.source;\n  /**\n   *\n   * @param {string} value\n   * @param {string} [flags]\n   * @returns {RegExp}\n   */\n\n  function createValuePattern(value, flags) {\n    flags = (flags || '').replace(/m/g, '') + 'm'; // add m flag\n\n    var pattern = /([:\\-,[{]\\s*(?:\\s<<prop>>[ \\t]+)?)(?:<<value>>)(?=[ \\t]*(?:$|,|\\]|\\}|(?:[\\r\\n]\\s*)?#))/.source.replace(/<<prop>>/g, function () {\n      return properties;\n    }).replace(/<<value>>/g, function () {\n      return value;\n    });\n    return RegExp(pattern, flags);\n  }\n\n  Prism.languages.yaml = {\n    'scalar': {\n      pattern: RegExp(/([\\-:]\\s*(?:\\s<<prop>>[ \\t]+)?[|>])[ \\t]*(?:((?:\\r?\\n|\\r)[ \\t]+)\\S[^\\r\\n]*(?:\\2[^\\r\\n]+)*)/.source.replace(/<<prop>>/g, function () {\n        return properties;\n      })),\n      lookbehind: true,\n      alias: 'string'\n    },\n    'comment': /#.*/,\n    'key': {\n      pattern: RegExp(/((?:^|[:\\-,[{\\r\\n?])[ \\t]*(?:<<prop>>[ \\t]+)?)<<key>>(?=\\s*:\\s)/.source.replace(/<<prop>>/g, function () {\n        return properties;\n      }).replace(/<<key>>/g, function () {\n        return '(?:' + plainKey + '|' + string + ')';\n      })),\n      lookbehind: true,\n      greedy: true,\n      alias: 'atrule'\n    },\n    'directive': {\n      pattern: /(^[ \\t]*)%.+/m,\n      lookbehind: true,\n      alias: 'important'\n    },\n    'datetime': {\n      pattern: createValuePattern(/\\d{4}-\\d\\d?-\\d\\d?(?:[tT]|[ \\t]+)\\d\\d?:\\d{2}:\\d{2}(?:\\.\\d*)?(?:[ \\t]*(?:Z|[-+]\\d\\d?(?::\\d{2})?))?|\\d{4}-\\d{2}-\\d{2}|\\d\\d?:\\d{2}(?::\\d{2}(?:\\.\\d*)?)?/.source),\n      lookbehind: true,\n      alias: 'number'\n    },\n    'boolean': {\n      pattern: createValuePattern(/false|true/.source, 'i'),\n      lookbehind: true,\n      alias: 'important'\n    },\n    'null': {\n      pattern: createValuePattern(/null|~/.source, 'i'),\n      lookbehind: true,\n      alias: 'important'\n    },\n    'string': {\n      pattern: createValuePattern(string),\n      lookbehind: true,\n      greedy: true\n    },\n    'number': {\n      pattern: createValuePattern(/[+-]?(?:0x[\\da-f]+|0o[0-7]+|(?:\\d+(?:\\.\\d*)?|\\.\\d+)(?:e[+-]?\\d+)?|\\.inf|\\.nan)/.source, 'i'),\n      lookbehind: true\n    },\n    'tag': tag,\n    'important': anchorOrAlias,\n    'punctuation': /---|[:[\\]{}\\-,|>?]|\\.\\.\\./\n  };\n  Prism.languages.yml = Prism.languages.yaml;\n})(prism);\n\nexport default prism;","// Duotone Dark\n// Author: Simurai, adapted from DuoTone themes for Atom (http://simurai.com/projects/2016/01/01/duotone-themes)\n// Conversion: Bram de Haan (http://atelierbram.github.io/Base2Tone-prism/output/prism/prism-base2tone-evening-dark.css)\n// Generated with Base16 Builder (https://github.com/base16-builder/base16-builder)\nvar theme = {\n  plain: {\n    backgroundColor: \"#2a2734\",\n    color: \"#9a86fd\"\n  },\n  styles: [{\n    types: [\"comment\", \"prolog\", \"doctype\", \"cdata\", \"punctuation\"],\n    style: {\n      color: \"#6c6783\"\n    }\n  }, {\n    types: [\"namespace\"],\n    style: {\n      opacity: 0.7\n    }\n  }, {\n    types: [\"tag\", \"operator\", \"number\"],\n    style: {\n      color: \"#e09142\"\n    }\n  }, {\n    types: [\"property\", \"function\"],\n    style: {\n      color: \"#9a86fd\"\n    }\n  }, {\n    types: [\"tag-id\", \"selector\", \"atrule-id\"],\n    style: {\n      color: \"#eeebff\"\n    }\n  }, {\n    types: [\"attr-name\"],\n    style: {\n      color: \"#c4b9fe\"\n    }\n  }, {\n    types: [\"boolean\", \"string\", \"entity\", \"url\", \"attr-value\", \"keyword\", \"control\", \"directive\", \"unit\", \"statement\", \"regex\", \"at-rule\", \"placeholder\", \"variable\"],\n    style: {\n      color: \"#ffcc99\"\n    }\n  }, {\n    types: [\"deleted\"],\n    style: {\n      textDecorationLine: \"line-through\"\n    }\n  }, {\n    types: [\"inserted\"],\n    style: {\n      textDecorationLine: \"underline\"\n    }\n  }, {\n    types: [\"italic\"],\n    style: {\n      fontStyle: \"italic\"\n    }\n  }, {\n    types: [\"important\", \"bold\"],\n    style: {\n      fontWeight: \"bold\"\n    }\n  }, {\n    types: [\"important\"],\n    style: {\n      color: \"#c4b9fe\"\n    }\n  }]\n};\nexport default theme;","import prism from '../prism/index.js';\nexport { default as Prism } from '../prism/index.js';\nimport theme from '../themes/duotoneDark';\nimport { Component } from 'react';\nvar defaultProps = {\n  // $FlowFixMe\n  Prism: prism,\n  theme: theme\n};\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nvar newlineRe = /\\r\\n|\\r|\\n/; // Empty lines need to contain a single empty token, denoted with { empty: true }\n\nvar normalizeEmptyLines = function normalizeEmptyLines(line) {\n  if (line.length === 0) {\n    line.push({\n      types: [\"plain\"],\n      content: \"\\n\",\n      empty: true\n    });\n  } else if (line.length === 1 && line[0].content === \"\") {\n    line[0].content = \"\\n\";\n    line[0].empty = true;\n  }\n};\n\nvar appendTypes = function appendTypes(types, add) {\n  var typesSize = types.length;\n\n  if (typesSize > 0 && types[typesSize - 1] === add) {\n    return types;\n  }\n\n  return types.concat(add);\n}; // Takes an array of Prism's tokens and groups them by line, turning plain\n// strings into tokens as well. Tokens can become recursive in some cases,\n// which means that their types are concatenated. Plain-string tokens however\n// are always of type \"plain\".\n// This is not recursive to avoid exceeding the call-stack limit, since it's unclear\n// how nested Prism's tokens can become\n\n\nvar normalizeTokens = function normalizeTokens(tokens) {\n  var typeArrStack = [[]];\n  var tokenArrStack = [tokens];\n  var tokenArrIndexStack = [0];\n  var tokenArrSizeStack = [tokens.length];\n  var i = 0;\n  var stackIndex = 0;\n  var currentLine = [];\n  var acc = [currentLine];\n\n  while (stackIndex > -1) {\n    while ((i = tokenArrIndexStack[stackIndex]++) < tokenArrSizeStack[stackIndex]) {\n      var content = void 0;\n      var types = typeArrStack[stackIndex];\n      var tokenArr = tokenArrStack[stackIndex];\n      var token = tokenArr[i]; // Determine content and append type to types if necessary\n\n      if (typeof token === \"string\") {\n        types = stackIndex > 0 ? types : [\"plain\"];\n        content = token;\n      } else {\n        types = appendTypes(types, token.type);\n\n        if (token.alias) {\n          types = appendTypes(types, token.alias);\n        }\n\n        content = token.content;\n      } // If token.content is an array, increase the stack depth and repeat this while-loop\n\n\n      if (typeof content !== \"string\") {\n        stackIndex++;\n        typeArrStack.push(types);\n        tokenArrStack.push(content);\n        tokenArrIndexStack.push(0);\n        tokenArrSizeStack.push(content.length);\n        continue;\n      } // Split by newlines\n\n\n      var splitByNewlines = content.split(newlineRe);\n      var newlineCount = splitByNewlines.length;\n      currentLine.push({\n        types: types,\n        content: splitByNewlines[0]\n      }); // Create a new line for each string on a new line\n\n      for (var i$1 = 1; i$1 < newlineCount; i$1++) {\n        normalizeEmptyLines(currentLine);\n        acc.push(currentLine = []);\n        currentLine.push({\n          types: types,\n          content: splitByNewlines[i$1]\n        });\n      }\n    } // Decreate the stack depth\n\n\n    stackIndex--;\n    typeArrStack.pop();\n    tokenArrStack.pop();\n    tokenArrIndexStack.pop();\n    tokenArrSizeStack.pop();\n  }\n\n  normalizeEmptyLines(currentLine);\n  return acc;\n};\n\nvar themeToDict = function themeToDict(theme, language) {\n  var plain = theme.plain; // $FlowFixMe\n\n  var base = Object.create(null);\n  var themeDict = theme.styles.reduce(function (acc, themeEntry) {\n    var languages = themeEntry.languages;\n    var style = themeEntry.style;\n\n    if (languages && !languages.includes(language)) {\n      return acc;\n    }\n\n    themeEntry.types.forEach(function (type) {\n      // $FlowFixMe\n      var accStyle = _extends({}, acc[type], style);\n\n      acc[type] = accStyle;\n    });\n    return acc;\n  }, base); // $FlowFixMe\n\n  themeDict.root = plain; // $FlowFixMe\n\n  themeDict.plain = _extends({}, plain, {\n    backgroundColor: null\n  });\n  return themeDict;\n};\n\nfunction objectWithoutProperties(obj, exclude) {\n  var target = {};\n\n  for (var k in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, k) && exclude.indexOf(k) === -1) target[k] = obj[k];\n  }\n\n  return target;\n}\n\nvar Highlight = /*@__PURE__*/function (Component) {\n  function Highlight() {\n    var this$1 = this;\n    var args = [],\n        len = arguments.length;\n\n    while (len--) {\n      args[len] = arguments[len];\n    }\n\n    Component.apply(this, args);\n\n    _defineProperty(this, \"getThemeDict\", function (props) {\n      if (this$1.themeDict !== undefined && props.theme === this$1.prevTheme && props.language === this$1.prevLanguage) {\n        return this$1.themeDict;\n      }\n\n      this$1.prevTheme = props.theme;\n      this$1.prevLanguage = props.language;\n      var themeDict = props.theme ? themeToDict(props.theme, props.language) : undefined;\n      return this$1.themeDict = themeDict;\n    });\n\n    _defineProperty(this, \"getLineProps\", function (ref) {\n      var key = ref.key;\n      var className = ref.className;\n      var style = ref.style;\n      var rest$1 = objectWithoutProperties(ref, [\"key\", \"className\", \"style\", \"line\"]);\n      var rest = rest$1;\n\n      var output = _extends({}, rest, {\n        className: \"token-line\",\n        style: undefined,\n        key: undefined\n      });\n\n      var themeDict = this$1.getThemeDict(this$1.props);\n\n      if (themeDict !== undefined) {\n        output.style = themeDict.plain;\n      }\n\n      if (style !== undefined) {\n        output.style = output.style !== undefined ? _extends({}, output.style, style) : style;\n      }\n\n      if (key !== undefined) {\n        output.key = key;\n      }\n\n      if (className) {\n        output.className += \" \" + className;\n      }\n\n      return output;\n    });\n\n    _defineProperty(this, \"getStyleForToken\", function (ref) {\n      var types = ref.types;\n      var empty = ref.empty;\n      var typesSize = types.length;\n      var themeDict = this$1.getThemeDict(this$1.props);\n\n      if (themeDict === undefined) {\n        return undefined;\n      } else if (typesSize === 1 && types[0] === \"plain\") {\n        return empty ? {\n          display: \"inline-block\"\n        } : undefined;\n      } else if (typesSize === 1 && !empty) {\n        return themeDict[types[0]];\n      }\n\n      var baseStyle = empty ? {\n        display: \"inline-block\"\n      } : {}; // $FlowFixMe\n\n      var typeStyles = types.map(function (type) {\n        return themeDict[type];\n      });\n      return Object.assign.apply(Object, [baseStyle].concat(typeStyles));\n    });\n\n    _defineProperty(this, \"getTokenProps\", function (ref) {\n      var key = ref.key;\n      var className = ref.className;\n      var style = ref.style;\n      var token = ref.token;\n      var rest$1 = objectWithoutProperties(ref, [\"key\", \"className\", \"style\", \"token\"]);\n      var rest = rest$1;\n\n      var output = _extends({}, rest, {\n        className: \"token \" + token.types.join(\" \"),\n        children: token.content,\n        style: this$1.getStyleForToken(token),\n        key: undefined\n      });\n\n      if (style !== undefined) {\n        output.style = output.style !== undefined ? _extends({}, output.style, style) : style;\n      }\n\n      if (key !== undefined) {\n        output.key = key;\n      }\n\n      if (className) {\n        output.className += \" \" + className;\n      }\n\n      return output;\n    });\n\n    _defineProperty(this, \"tokenize\", function (Prism, code, grammar, language) {\n      var env = {\n        code: code,\n        grammar: grammar,\n        language: language,\n        tokens: []\n      };\n      Prism.hooks.run(\"before-tokenize\", env);\n      var tokens = env.tokens = Prism.tokenize(env.code, env.grammar, env.language);\n      Prism.hooks.run(\"after-tokenize\", env);\n      return tokens;\n    });\n  }\n\n  if (Component) Highlight.__proto__ = Component;\n  Highlight.prototype = Object.create(Component && Component.prototype);\n  Highlight.prototype.constructor = Highlight;\n\n  Highlight.prototype.render = function render() {\n    var ref = this.props;\n    var Prism = ref.Prism;\n    var language = ref.language;\n    var code = ref.code;\n    var children = ref.children;\n    var themeDict = this.getThemeDict(this.props);\n    var grammar = Prism.languages[language];\n    var mixedTokens = grammar !== undefined ? this.tokenize(Prism, code, grammar, language) : [code];\n    var tokens = normalizeTokens(mixedTokens);\n    return children({\n      tokens: tokens,\n      className: \"prism-code language-\" + language,\n      style: themeDict !== undefined ? themeDict.root : {},\n      getLineProps: this.getLineProps,\n      getTokenProps: this.getTokenProps\n    });\n  };\n\n  return Highlight;\n}(Component);\n\nexport default Highlight;\nexport { defaultProps };","// Converted automatically using ./tools/themeFromVsCode\nvar theme = {\n  plain: {\n    color: \"#9CDCFE\",\n    backgroundColor: \"#1E1E1E\"\n  },\n  styles: [{\n    types: [\"prolog\"],\n    style: {\n      color: \"rgb(0, 0, 128)\"\n    }\n  }, {\n    types: [\"comment\"],\n    style: {\n      color: \"rgb(106, 153, 85)\"\n    }\n  }, {\n    types: [\"builtin\", \"changed\", \"keyword\", \"interpolation-punctuation\"],\n    style: {\n      color: \"rgb(86, 156, 214)\"\n    }\n  }, {\n    types: [\"number\", \"inserted\"],\n    style: {\n      color: \"rgb(181, 206, 168)\"\n    }\n  }, {\n    types: [\"constant\"],\n    style: {\n      color: \"rgb(100, 102, 149)\"\n    }\n  }, {\n    types: [\"attr-name\", \"variable\"],\n    style: {\n      color: \"rgb(156, 220, 254)\"\n    }\n  }, {\n    types: [\"deleted\", \"string\", \"attr-value\", \"template-punctuation\"],\n    style: {\n      color: \"rgb(206, 145, 120)\"\n    }\n  }, {\n    types: [\"selector\"],\n    style: {\n      color: \"rgb(215, 186, 125)\"\n    }\n  }, {\n    // Fix tag color\n    types: [\"tag\"],\n    style: {\n      color: \"rgb(78, 201, 176)\"\n    }\n  }, {\n    // Fix tag color for HTML\n    types: [\"tag\"],\n    languages: [\"markup\"],\n    style: {\n      color: \"rgb(86, 156, 214)\"\n    }\n  }, {\n    types: [\"punctuation\", \"operator\"],\n    style: {\n      color: \"rgb(212, 212, 212)\"\n    }\n  }, {\n    // Fix punctuation color for HTML\n    types: [\"punctuation\"],\n    languages: [\"markup\"],\n    style: {\n      color: \"#808080\"\n    }\n  }, {\n    types: [\"function\"],\n    style: {\n      color: \"rgb(220, 220, 170)\"\n    }\n  }, {\n    types: [\"class-name\"],\n    style: {\n      color: \"rgb(78, 201, 176)\"\n    }\n  }, {\n    types: [\"char\"],\n    style: {\n      color: \"rgb(209, 105, 105)\"\n    }\n  }]\n};\nexport default theme;","// Converted automatically using ./tools/themeFromVsCode\nvar theme = {\n  plain: {\n    color: \"#000000\",\n    backgroundColor: \"#ffffff\"\n  },\n  styles: [{\n    types: [\"comment\"],\n    style: {\n      color: \"rgb(0, 128, 0)\"\n    }\n  }, {\n    types: [\"builtin\"],\n    style: {\n      color: \"rgb(0, 112, 193)\"\n    }\n  }, {\n    types: [\"number\", \"variable\", \"inserted\"],\n    style: {\n      color: \"rgb(9, 134, 88)\"\n    }\n  }, {\n    types: [\"operator\"],\n    style: {\n      color: \"rgb(0, 0, 0)\"\n    }\n  }, {\n    types: [\"constant\", \"char\"],\n    style: {\n      color: \"rgb(129, 31, 63)\"\n    }\n  }, {\n    types: [\"tag\"],\n    style: {\n      color: \"rgb(128, 0, 0)\"\n    }\n  }, {\n    types: [\"attr-name\"],\n    style: {\n      color: \"rgb(255, 0, 0)\"\n    }\n  }, {\n    types: [\"deleted\", \"string\"],\n    style: {\n      color: \"rgb(163, 21, 21)\"\n    }\n  }, {\n    types: [\"changed\", \"punctuation\"],\n    style: {\n      color: \"rgb(4, 81, 165)\"\n    }\n  }, {\n    types: [\"function\", \"keyword\"],\n    style: {\n      color: \"rgb(0, 0, 255)\"\n    }\n  }, {\n    types: [\"class-name\"],\n    style: {\n      color: \"rgb(38, 127, 153)\"\n    }\n  }]\n};\nexport default theme;","import React, { FunctionComponent } from 'react';\nimport { Badge, Box, Button, Flex, useColorMode, useClipboard } from '@chakra-ui/react';\nimport Highlight, { defaultProps, Language, Prism } from 'prism-react-renderer';\nimport darkTheme from 'prism-react-renderer/themes/vsDark';\nimport lightTheme from 'prism-react-renderer/themes/vsLight';\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\n((typeof global !== 'undefined' ? global : window) as any).Prism = Prism;\nrequire('prismjs/components/prism-dart');\nrequire('prismjs/components/prism-php');\n\ninterface CodeBlockProps {\n  children: string;\n  className: string;\n}\n\nconst CodeBlock: FunctionComponent<CodeBlockProps> = ({ className, children }) => {\n  const language = className?.replace('language-', '') as Language;\n  const { hasCopied, onCopy } = useClipboard(children);\n  const { colorMode } = useColorMode();\n\n  return (\n    <Highlight\n      {...defaultProps}\n      code={children}\n      language={language}\n      theme={colorMode === 'light' ? lightTheme : darkTheme}\n    >\n      {({ className, style, tokens, getLineProps, getTokenProps }) => (\n        <Box\n          as=\"pre\"\n          className={className}\n          style={style}\n          padding={2}\n          overflowX={'auto'}\n          marginY={'4'}\n          textAlign={'left'}\n          fontSize={'sm'}\n          border={'1px'}\n          borderRadius={'base'}\n        >\n          <Flex justifyContent=\"space-between\" alignContent=\"center\">\n            <Box as=\"div\" marginLeft={1}>\n              <Badge variant=\"outline\" colorScheme=\"teal\">\n                {language}\n              </Badge>\n            </Box>\n            <Button colorScheme=\"teal\" size=\"xs\" onClick={onCopy}>\n              {hasCopied ? 'Copied' : 'Copy'}\n            </Button>\n          </Flex>\n\n          {tokens\n            .filter((l, i) => i < tokens.length - 1)\n            .map((line, index) => (\n              <Box key={index} {...getLineProps({ line, key: index })} display=\"table-row\">\n                <Box as=\"span\" display=\"table-cell\" textAlign=\"right\" paddingRight={4} userSelect=\"none\" opacity={0.5}>\n                  {index + 1}\n                </Box>\n                <Box as=\"span\" display=\"table-cell\">\n                  {line.map((token, key) => (\n                    <Box as=\"span\" key={key} {...getTokenProps({ token, key })} />\n                  ))}\n                </Box>\n              </Box>\n            ))}\n        </Box>\n      )}\n    </Highlight>\n  );\n};\n\nexport default CodeBlock;\n","import React, { useContext } from 'react';\nimport { UseDisclosureReturn } from '@chakra-ui/react';\nimport { ModalDispatch, ModalDispatchContext } from '@/context';\n\nconst useModalDispatch = () => {\n    const context = useContext(ModalDispatchContext);\n    if (!context) {\n        // TODO throw error\n    }\n\n    return context as ModalDispatch;\n}\n\nexport default useModalDispatch;","import React, { useContext } from 'react';\nimport { ModalState, ModalStateContext } from '@/context';\n\nconst useModalState = (id: string) => {\n    const context = useContext(ModalStateContext);\n    if (!context) {\n        // TODO throw error\n        return null;\n    }\n\n    const { modals } = context as ModalState;\n    if (!modals) {\n        // TODO throw error\n        return null;\n    }\n\n    return modals[id];\n}\n\nexport default useModalState;","import React, { FunctionComponent, useEffect } from 'react';\nimport { Button, Modal, ModalBody, ModalCloseButton, ModalContent, ModalFooter, ModalHeader, ModalOverlay } from '@chakra-ui/react';\nimport { useModalDispatch, useModalState } from '@/hooks';\n\ninterface FootnoteWrapperProps {\n  children: React.ReactElement[];\n}\n\ninterface FootnoteEntryProps {\n  id: string;\n  children?: React.ReactElement[];\n}\n\nconst FootnoteEntry: FunctionComponent<FootnoteEntryProps> = ({ id, children }) => {\n  const dispatch = useModalDispatch();\n  const state = useModalState(id);\n\n  const isOpen = state && state == 'on' || false;\n  const onClose = () => {\n    dispatch({\n      type: 'CLOSE',\n      id\n    });\n  }\n\n  useEffect(() => {\n    dispatch({\n      type: 'CREATE',\n      id\n    });\n  }, []);\n\n  return (\n    <Modal isCentered isOpen={isOpen} onClose={onClose}>\n      <ModalOverlay />\n      <ModalContent>\n        <ModalHeader>#{id.replace('fn-', '')}</ModalHeader>\n        <ModalCloseButton />\n        <ModalBody>{children}</ModalBody>\n        <ModalFooter>\n          <Button onClick={onClose}>Close</Button>\n        </ModalFooter>\n      </ModalContent>\n    </Modal>\n  );\n}\n\nconst FootnoteWrapper: FunctionComponent<FootnoteWrapperProps> = ({ children }) => {\n    const list = children.filter((child) => child.props.originalType === 'ol');\n    if (!list || !list.length) {\n        return <></>;\n    }\n\n    const entries: React.ReactElement | React.ReactElement[] = list[0].props.children;\n    if (Array.isArray(entries)) {\n      return <>{entries.map((entry, index) => <FootnoteEntry key={index} {...entry.props} />)}</>;\n    }\n\n    return <FootnoteEntry {...entries.props} />;\n};\n\nexport default FootnoteWrapper;","import React, { FunctionalComponent } from 'react';\nimport { Heading as ChakraHeading } from '@chakra-ui/react';\nimport Lodash from 'lodash';\n\ninterface HeadingProps {\n    level: number;\n    children: ReactText;\n}\n\nconst Heading: FunctionalComponent<HeadingProps> = ({ level, children }) => {\n    const sizes = ['2xl', 'xl', 'lg', 'md', 'sm', 'xs'];\n    const id = Lodash.kebabCase(children);\n  \n    return <ChakraHeading my={4} as={`h${level}`} size={sizes[level - 1]} id={id}>{children}</ChakraHeading>;\n};\n\nexport default Heading;\n","import React, { FunctionComponent } from 'react';\nimport { Box, Image as ChakraImage } from '@chakra-ui/react';\n\ninterface ImageProps {\n  src: string;\n  alt?: string\n}\n\nconst Image: FunctionComponent<ImageProps> = ({ src, alt, ...props }) => {\n  const isExternal = /^([a-zA-Z]{2,20}):\\/\\/.+/.test(src);\n  if (isExternal) {\n    return (\n      <figure>\n        <Box maxW={1000} mx={'auto'}>\n          <ChakraImage \n            src={src} \n            alt={alt || ''} \n            loading={'lazy'} \n            mx={'auto'}\n          />\n        </Box>\n        {alt && <figcaption>{alt}</figcaption>}\n      </figure>\n    );\n  }\n  \n  // here goes to \n  return <ChakraImage src={src} alt={alt || ''} {...props} />;\n};\n\nexport default Image;\n","import React, { FunctionComponent } from 'react';\nimport {\n  chakra,\n  Code,\n  Box,\n  Divider,\n  ListItem,\n  OrderedList,\n  Table,\n  Tbody,\n  Td,\n  Text,\n  Th,\n  Thead,\n  Tr,\n  UnorderedList,\n} from '@chakra-ui/react';\nimport { MDXProvider, MDXProviderComponents } from '@mdx-js/react';\nimport CodeBlock from './CodeBlock';\nimport FootnoteWrapper from './FootnoteWrapper';\n//import GatsbyImageWrapper from './GatsbyImageWrapper';\nimport Heading from './Heading';\nimport Image from './Image';\nimport Link from './Link';\n\nconst MdxProviderComponents: MDXProviderComponents = {\n  p: ({ children }) => {\n    if (typeof children === 'object') {\n      return <Box my={4}>{children}</Box>\n    }\n\n    return <Text my={4}>{children}</Text>;\n  },\n  h1: (props: any) => <Heading level={1} {...props} />,\n  h2: (props: any) => <Heading level={2} {...props} />,\n  h3: (props: any) => <Heading level={3} {...props} />,\n  h4: (props: any) => <Heading level={4} {...props} />,\n  h5: (props: any) => <Heading level={5} {...props} />,\n  h6: (props: any) => <Heading level={6} {...props} />,\n  hr: (props: any) => <Divider {...props} />,\n  pre: (props: any) => <chakra.pre {...props} maxW={'100%'} overflowX=\"auto\" />,\n  blockquote: (props: any) => <Code as={'blockquote'} p={2} {...props} />,\n  code: CodeBlock,\n  a: Link,\n  ol: (props: any) => <OrderedList {...props} />,\n  ul: (props: any) => <UnorderedList {...props} />,\n  li: (props: any) => <ListItem {...props} />,\n  table: (props: any) => <Table {...props} />,\n  tbody: (props: any) => <Tbody {...props} />,\n  thead: (props: any) => <Thead {...props} />,\n  tr: (props: any) => <Tr {...props} />,\n  td: (props: any) => <Td {...props} />,\n  th: (props: any) => <Th {...props} />,\n  em: (props: any) => <Text as={'em'} {...props} />,\n  strong: (props: any) => <Text as={'strong'} {...props} />,\n  delete: (props: any) => <Text as={'del'} {...props} />,\n  inlineCode: (props: any) => <Text as={'kbd'} {...props} />,\n  thematicBreak: (props: any) => <Divider orientation={'vertical'} {...props} />,\n  img: Image,\n  wrapper: ({ children }) => {\n    if (!children) {\n      return <></>;\n    }\n\n    if (!Array.isArray(children)) {\n      return <>{children}</>;\n    }\n\n    const updatedChildren = children.map((child: any, index: number) => {\n      if (child.props.className === 'footnotes') {\n        return <FootnoteWrapper key={index} {...child.props} />;\n      }\n\n      return child;\n    });\n\n    return <>{updatedChildren}</>;\n  },\n};\n\ntype CustomProviderProps = {\n  children: React.ReactNode;\n};\n\nconst CustomProvider: FunctionComponent<CustomProviderProps> = ({ children }) => {\n  return <MDXProvider components={MdxProviderComponents}>{children}</MDXProvider>;\n};\n\nexport default CustomProvider;\n","import React, { FunctionComponent } from 'react';\nimport { Link as ChakraLink } from '@chakra-ui/react';\nimport { Link as GatsbyLink } from 'gatsby';\nimport { ThemeEnum } from '@/enums';\nimport { useModalDispatch } from '@/hooks';\n\ntype LinkProp = {\n  href: string;\n  children: React.ReactNode;\n  className?: string;\n};\n\nconst Link: FunctionComponent<LinkProp> = ({ children, className, href, ...props }) => {\n  let isExternal = /^([a-zA-Z]{2,20}):\\/\\/.+/.test(href);\n  let isInternal = !isExternal;\n\n  if (className === 'footnote-backref') {\n    return <></>;\n  }\n\n  if (className === 'footnote-ref') {\n    const id = href.replace('#', '');\n    const dispatch = useModalDispatch();\n\n    const onOpen = () => {\n      dispatch({\n        type: 'OPEN',\n        id,\n      });\n    };\n\n    return (\n      <ChakraLink onClick={onOpen} color={ThemeEnum.LINK_COLOR} {...props}>\n        {children}\n      </ChakraLink>\n    );\n  }\n  \n  if (href.startsWith('#')) {\n    isInternal = false;\n    isExternal = false;\n  }\n\n  if (isInternal) {\n    return (\n      <ChakraLink to={href} as={GatsbyLink} color={ThemeEnum.LINK_COLOR} {...props}>\n        {children}\n      </ChakraLink>\n    );\n  }\n\n  return (\n    <ChakraLink color={ThemeEnum.LINK_COLOR} href={href} isExternal={isExternal} {...props}>\n      {children}\n    </ChakraLink>\n  );\n};\n\nexport default Link;\n","import React, { FunctionComponent } from 'react';\nimport { MDXRenderer } from 'gatsby-plugin-mdx';\nimport { Container } from '@chakra-ui/react';\nimport { CustomProvider } from '@/components/markdown';\n\ntype ArticleDetailProps = {\n  data: {\n    mdx: {\n      id: string;\n      body: string;\n      frontmatter: {\n        date: string;\n        image: string;\n        summary: string;\n        tags: string[];\n        title: string;\n      };\n    };\n  };\n};\n\nconst ArticleDetail: FunctionComponent<ArticleDetailProps> = ({\n  data: {\n    mdx: { body },\n  },\n}) => {\n  return (\n    <Container maxW={'7xl'} p={'12'}>\n      <CustomProvider>\n        <MDXRenderer>{body}</MDXRenderer>\n      </CustomProvider>\n    </Container>\n  );\n};\n\nexport default ArticleDetail;\n","export default function _taggedTemplateLiteralLoose(strings, raw) {\n  if (!raw) {\n    raw = strings.slice(0);\n  }\n\n  strings.raw = raw;\n  return strings;\n}","import React, { FunctionComponent } from 'react';\nimport { Link as GatsbyLink } from 'gatsby';\nimport { Box, Flex, Heading, keyframes, Tag, Text, VStack, useColorModeValue } from '@chakra-ui/react';\nimport { kebabCase } from 'lodash';\nimport { MathUtil } from '@/utils';\n\nconst defaultImages = ['/images/header/wp7317693-jeju-wallpapers.jpg'];\n\nconst shrink = keyframes`\n  from { transform: scale(1.0); }\n  to { transform: scale(1.1); }\n`;\n\ninterface ArticleHeaderProps {\n  title: string;\n  date?: string;\n  image?: string;\n  category?: string;\n  tags?: string[];\n}\n\nconst ArticleHeader: FunctionComponent<ArticleHeaderProps> = ({ title, image, category, date, tags }) => {\n  const headerImage = image || MathUtil.getRandomValue(defaultImages);\n  const dateObj = date && new Date(date);\n\n  return (\n    <Box \n      w={'full'} \n      h={'100vh'}\n      overflow={'hidden'}\n    >\n      <Flex\n        w={'full'}\n        h={'full'}\n        position={'relative'}\n        justify={'center'}\n        _after={{\n          content: '\"\"',\n          position: 'absolute',\n          top: 0,\n          right: 0,\n          bottom: 0,\n          left: 0,\n          backgroundImage: `url('${headerImage}')`,\n          backgroundSize: 'cover',\n          backgroundPosition: 'center center',\n          backgroundRepeat: 'no-repeat',\n          zIndex: -1,\n          animation: `${shrink} 30s infinite alternate`\n        }}\n      >\n        <VStack maxW={'7xl'} w={'full'} px={'12'} justify={'center'} alignItems={'flex-start'}>\n          {category && (\n            <Text\n              color={useColorModeValue('gray.700', 'gray.700')}\n              textTransform={'uppercase'}\n              textShadow={'0.125rem 0.125rem white'}\n              fontWeight={800}\n              fontSize={'md'}\n              letterSpacing={1.1}\n              as={GatsbyLink}\n              to={`/category/${kebabCase(category)}`}\n            >\n              {category}\n            </Text>\n          )}\n          <Heading\n            color={useColorModeValue('gray.900', 'gray.900')}\n            as={'h1'}\n            size={'3xl'}\n            lineHeight={'125%'}\n            textShadow={'0.25rem 0.25rem white'}\n          >\n            {title}\n          </Heading>\n          {dateObj && (\n            <Text\n              color={useColorModeValue('gray.700', 'gray.700')}\n              fontSize={'xl'}\n              fontStyle={'italic'}\n              textShadow={'0.125rem 0.125rem white'}\n            >\n              {dateObj.toLocaleDateString()}\n            </Text>\n          )}\n          {tags && (\n            <Box overflow={'hidden'}>\n              {tags.map((tag) => (\n                <Tag\n                  display={'block'}\n                  float={'left'}\n                  key={tag}\n                  bgColor={'teal'}\n                  variant={'solid'}\n                  as={GatsbyLink}\n                  to={`/tag/${kebabCase(tag)}`}\n                  pt={1}\n                  m={1}\n                >\n                  {tag}\n                </Tag>\n              ))}\n            </Box>\n          )}\n        </VStack>\n      </Flex>\n    </Box>\n  );\n};\n\nexport default ArticleHeader;\n","import React, { FunctionComponent } from 'react';\nimport { Link as GatsbyLink, navigate } from 'gatsby';\nimport {\n  Box,\n  Button,\n  Container,\n  Divider,\n  Flex,\n  Heading,\n  HStack,\n  Image,\n  SpaceProps,\n  Stack,\n  Tag,\n  Text,\n  useColorModeValue,\n  VStack,\n} from '@chakra-ui/react';\nimport { kebabCase } from 'lodash';\nimport { MathUtil } from '@/utils';\nimport { ArticleListItemType } from '@/types';\n\nconst defaultImages = [\n  '/images/cards/pexels-olia-danilevich-4974915.jpg',\n];\n\ninterface ArticleListProps {\n  entries: ArticleListItemType[];\n}\n\ninterface ArticleEntryProps {\n  entry: ArticleListItemType;\n}\n\ninterface TagProps {\n  tags: Array<string>;\n  marginTop?: SpaceProps['marginTop'];\n}\n\ninterface AuthorProps {\n  category?: string;\n  date: Date;\n}\n\nconst Tags: FunctionComponent<TagProps> = ({ tags, marginTop }) => {\n  return (\n    <HStack spacing={2} marginTop={marginTop}>\n      {tags.map((tag) => {\n        return (\n          <Tag size={'md'} variant=\"solid\" key={tag}>\n            {tag}\n          </Tag>\n        );\n      })}\n    </HStack>\n  );\n};\n\nconst ArticleEntry: FunctionComponent<ArticleEntryProps> = ({\n  entry: {\n    slug,\n    frontmatter: { category, date, summary, image, title, tags },\n  },\n}) => {\n  const articleImage = image || MathUtil.getRandomValue(defaultImages);\n  const dateObj = new Date(date);\n\n  return (\n    <Box\n      py={4}\n      w={'full'}\n      transition={'linear 0.5s'}\n      _hover={{\n        transform: 'scale(1.025);',\n      }}\n    >\n      <Flex\n        bgColor={useColorModeValue('white', 'gray.900')}\n        borderRadius={'md'}\n        boxShadow={'2xl'}\n        flexDir={{ base: 'column', md: 'row' }}\n        overflow={'auto'}\n        w={'full'}\n      >\n        <Image\n          alt={title}\n          maxH={{ base: 'xs' }}\n          maxW={{ md: 'xs' }}\n          objectFit={'cover'}\n          objectPosition={'center'}\n          src={articleImage}\n          w={'full'}\n          onClick={() => navigate(`/article/${slug}`)}\n          cursor={'pointer'}\n        />\n        <Stack p={4} w={'full'}>\n          <Heading as=\"h3\" size=\"md\" color={useColorModeValue('gray.700', 'white')}>\n            <GatsbyLink to={`/article/${slug}`}>{title}</GatsbyLink>\n          </Heading>\n          {category && (\n            <Text\n              color={'green.500'}\n              textTransform={'uppercase'}\n              fontWeight={800}\n              fontSize={'sm'}\n              letterSpacing={1.1}\n              as={'span'}\n            >\n              <GatsbyLink to={`/category/${kebabCase(category)}`}>{category}</GatsbyLink>\n            </Text>\n          )}\n          <Text fontSize={'sm'} fontWeight={'bold'}>\n            {dateObj.toLocaleDateString()}\n          </Text>\n          <Divider />\n          <Text flexGrow={1} fontSize={'sm'}>\n            {summary}\n          </Text>\n          <Box overflow={'hidden'}>\n            {tags && Array.isArray(tags) && tags.map((tag) => (\n              <Tag\n                display={'block'}\n                float={'left'}\n                key={tag}\n                bgColor={'teal'}\n                variant={'solid'}\n                as={GatsbyLink}\n                to={`/tag/${kebabCase(tag)}`}\n                pt={1}\n                m={1}\n              >\n                {tag}\n              </Tag>\n            ))}\n          </Box>\n          <HStack justify={'flex-end'}>\n          <Button\n            bg={'green.400'}\n            color={'white'}\n            rounded={'xl'}\n            boxShadow={'0 5px 20px 0px rgb(72 187 120 / 43%)'}\n            _hover={{\n              bg: 'green.500',\n            }}\n            _focus={{\n              bg: 'green.500',\n            }}\n            as={GatsbyLink}\n            to={`/article/${slug}`}\n          >\n            Read more\n          </Button>\n        </HStack>\n        </Stack>\n      </Flex>\n    </Box>\n  );\n};\n\nconst ArticleList: FunctionComponent<ArticleListProps> = ({ entries }) => {\n  return (\n    <Container as={VStack} maxW={'6xl'} px={[4, 8]} py={12} spacing={[8, 12]}>\n      <VStack spacing={[2, 4]} w={'full'}>\n        {entries.map((entry) => (\n          <ArticleEntry entry={entry} key={entry.id} />\n        ))}\n      </VStack>\n    </Container>\n  );\n};\n\nexport default ArticleList;\n","/**\n * Welcome to gatsby-plugin-mdx!\n *\n * Start reading in gatsby-node.js\n */\n\nconst MDXRenderer = require(`./mdx-renderer`)\n\nmodule.exports = {\n  MDXRenderer: MDXRenderer,\n}\n","const React = require(`react`)\nconst { mdx } = require(`@mdx-js/react`)\nconst { useMDXScope } = require(`./context`)\n\nmodule.exports = function MDXRenderer({\n  scope,\n  children,\n  ...props\n}) {\n  const mdxScope = useMDXScope(scope)\n\n  // Memoize the compiled component\n  const End = React.useMemo(() => {\n    if (!children) {\n      return null\n    }\n\n    const fullScope = {\n      // React is here just in case the user doesn't pass them in\n      // in a manual usage of the renderer\n      React,\n      mdx,\n      ...mdxScope,\n    }\n\n    const keys = Object.keys(fullScope)\n    const values = keys.map(key => fullScope[key])\n    const fn = new Function(`_fn`, ...keys, `${children}`)\n\n    return fn({}, ...values)\n  }, [children, scope])\n\n  return React.createElement(End, {...props })\n}\n"],"names":["module","exports","arr","len","length","i","arr2","Array","__esModule","arrayLikeToArray","isArray","setPrototypeOf","isNativeReflectConstruct","_construct","Parent","args","Class","Reflect","construct","a","push","apply","instance","Function","bind","prototype","arguments","obj","key","value","Object","defineProperty","enumerable","configurable","writable","sham","Proxy","Boolean","valueOf","call","e","iter","Symbol","iterator","from","TypeError","arrayWithoutHoles","iterableToArray","unsupportedIterableToArray","nonIterableSpread","o","minLen","n","toString","slice","constructor","name","test","Prism","keywords","packagePrefix","source","className","pattern","RegExp","lookbehind","inside","languages","dart","extend","insertBefore","greedy","undefined","alias","comment","constant","number","operator","punctuation","php","string_interpolation","string","hooks","add","env","code","buildPlaceholders","tokenizePlaceholders","lang","uniqueId","plainTextGrammar","_","util","encode","tokens","Token","type","content","map","replace","objId","clone","deepClone","visited","id","hasOwnProperty","forEach","v","getLanguage","element","m","exec","toLowerCase","parentElement","setLanguage","language","classList","isActive","defaultActivation","no","contains","plain","plaintext","text","txt","redef","before","insert","root","grammar","ret","token","newToken","old","DFS","this","callback","property","propertyType","plugins","highlight","run","tokenize","stringify","rest","tokenList","LinkedList","addAfter","head","matchGrammar","list","array","node","next","tail","toArray","all","callbacks","matchedStr","matchPattern","pos","lastIndex","match","lookbehindLength","index","startNode","startPos","rematch","patterns","j","cause","patternObj","global","flags","currentNode","reach","str","removeCount","to","p","k","matchStr","after","removeFrom","prev","removeRange","nestedRematch","newNode","count","s","tag","classes","attributes","aliases","join","prism","default","markup","tagName","includedCdataInside","def","attrName","html","mathml","svg","xml","ssml","atom","rss","envVars","commandAfterHeredoc","insideString","bash","entity","variable","toBeCopied","shell","clike","c","keyword","modName","cpp","css","addInlined","addAttribute","selectorInside","selector","unit","javascript","regex","js","space","braces","spread","re","jsx","stringifyToken","walkTokens","openedTags","notTagNorBrace","pop","openedBraces","plainText","splice","withId","unshift","maybeClassNameTokens","templateString","templateLiteralPattern","interpolationObject","interpolationPunctuationObject","interpolationPattern","createTemplate","getPlaceholder","counter","toUpperCase","tokenizeWithHooks","tokenizeInterpolationExpression","expression","tempGrammar","tokenizeEmbedded","_tokens","placeholderCounter","placeholderMap","embeddedTokens","placeholder","interpolationExpression","indexOf","placeholders","keys","substring","middle","replacement","afterTokens","concat","filter","supportedLanguages","stringContent","findTemplateStrings","l","embedded","interpolation","coffeescript","coffee","diff","PREFIXES","prefix","git","go","graphql","markdown","validTokens","currentIndex","startToken","inputVariables","isTokenType","getToken","definitionEnd","findClosingBracket","t","addAlias","mutationEnd","varToken","offset","types","open","close","stackHeight","defineProperties","placeholderPattern","replaceFilter","tokenStack","handlebars","hbs","json","webmanifest","less","makefile","inner","createInline","tableCell","tableRow","tableLine","yaml","codeLang","codeBlock","cls","tagPattern","parseInt","Number","fromCodePoint","known","KNOWN_ENTITY_NAMES","autoloader","Date","Math","floor","random","loadLanguages","ele","document","getElementById","innerHTML","textContent","String","fromCharCode","md","objectivec","objc","ocaml","python","py","reason","function","sass","atrule","important","scss","sql","stylus","func","typescript","typeInside","ts","tsx","wasm","anchorOrAlias","properties","plainKey","createValuePattern","yml","backgroundColor","color","styles","style","opacity","textDecorationLine","fontStyle","fontWeight","defaultProps","theme","_defineProperty","_extends","assign","target","newlineRe","normalizeEmptyLines","line","empty","appendTypes","typesSize","themeToDict","base","create","themeDict","reduce","acc","themeEntry","includes","accStyle","objectWithoutProperties","exclude","Highlight","Component","this$1","props","prevTheme","prevLanguage","ref","output","getThemeDict","display","baseStyle","typeStyles","children","getStyleForToken","__proto__","render","typeArrStack","tokenArrStack","tokenArrIndexStack","tokenArrSizeStack","stackIndex","currentLine","splitByNewlines","split","newlineCount","i$1","normalizeTokens","getLineProps","getTokenProps","window","require","useClipboard","hasCopied","onCopy","colorMode","useColorMode","___EmotionJSX","lightTheme","darkTheme","Box","as","padding","overflowX","marginY","textAlign","fontSize","border","borderRadius","Flex","justifyContent","alignContent","marginLeft","Badge","variant","colorScheme","Button","size","onClick","paddingRight","userSelect","context","useContext","ModalDispatchContext","ModalStateContext","modals","FootnoteEntry","dispatch","useModalDispatch","state","useModalState","isOpen","onClose","useEffect","Modal","isCentered","ModalOverlay","ModalContent","ModalHeader","ModalCloseButton","ModalBody","ModalFooter","child","originalType","entries","entry","level","_kebabCase","ChakraHeading","my","src","alt","maxW","mx","ChakraImage","loading","MdxProviderComponents","Text","h1","Heading","h2","h3","h4","h5","h6","hr","Divider","pre","chakra","blockquote","Code","CodeBlock","href","isExternal","isInternal","ChakraLink","ThemeEnum","startsWith","GatsbyLink","ol","OrderedList","ul","UnorderedList","li","ListItem","table","Table","tbody","Tbody","thead","Thead","tr","Tr","td","Td","th","Th","em","strong","delete","inlineCode","thematicBreak","orientation","img","Image","wrapper","updatedChildren","FootnoteWrapper","MDXProvider","components","body","data","mdx","Container","CustomProvider","MDXRenderer","strings","raw","defaultImages","shrink","keyframes","title","image","category","date","tags","headerImage","MathUtil","dateObj","w","h","overflow","position","justify","_after","top","right","bottom","left","backgroundImage","backgroundSize","backgroundPosition","backgroundRepeat","zIndex","animation","VStack","px","alignItems","useColorModeValue","textTransform","textShadow","letterSpacing","lineHeight","toLocaleDateString","Tag","float","bgColor","pt","ArticleEntry","slug","frontmatter","summary","articleImage","transition","_hover","transform","boxShadow","flexDir","maxH","objectFit","objectPosition","navigate","cursor","Stack","flexGrow","HStack","bg","rounded","_focus","spacing","React","useMDXScope","scope","mdxScope","End","useMemo","fullScope","values","fn","createElement"],"sourceRoot":""}