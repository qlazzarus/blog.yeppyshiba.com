{"version":3,"file":"component---src-pages-index-tsx-5b924feb4609c20b49b5.js","mappings":"gKAsDA,UAtBqD,SAAC,GAWhD,EAVJA,SAAYC,OAUP,IAAD,IATJC,KACUC,EAQN,EARFC,KAAQD,aACaE,EAOnB,EAPFC,kBAAqBD,MAQfE,EAAUJ,EAAVI,MAER,OACEC,EAAAA,EAAAA,IAACC,EAAAA,GAAD,CAAQF,MAAOA,IACbC,EAAAA,EAAAA,IAACE,EAAAA,GAAD,CAAQH,MAAOA,KACfC,EAAAA,EAAAA,IAACG,EAAAA,EAAD,CAAaC,QAASP","sources":["webpack://yeppyshiba-blog/./src/pages/index.tsx"],"sourcesContent":["import React, { FunctionComponent } from 'react';\nimport { graphql } from 'gatsby';\nimport { IGatsbyImageData } from 'gatsby-plugin-image';\nimport { ArticleList } from '@/components/article';\nimport { Header, Layout } from '@/components/common';\nimport { ArticleListItemType } from '@/types';\n\ntype IndexPageProps = {\n  location: {\n    search: string;\n  };\n  data: {\n    site: {\n      siteMetadata: {\n        title: string;\n        description: string;\n        siteUrl: string;\n      };\n    };\n    allMarkdownRemark: {\n      edges: ArticleListItemType[];\n    };\n    file: {\n      childImageSharp: {\n        gatsbyImageData: IGatsbyImageData;\n      };\n      publicURL: string;\n    };\n  };\n};\n\n// markup\nconst IndexPage: FunctionComponent<IndexPageProps> = ({\n  location: { search },\n  data: {\n    site: { siteMetadata },\n    allMarkdownRemark: { edges },\n    /*\n    file: {\n      publicURL\n    }\n    */\n  },\n}) => {\n  const { title } = siteMetadata;\n\n  return (\n    <Layout title={title}>\n      <Header title={title} />\n      <ArticleList entries={edges} />\n    </Layout>\n  );\n};\n\nexport default IndexPage;\n\nexport const getPostList = graphql`\n  query getPostList {\n    site {\n      siteMetadata {\n        title\n        description\n        siteUrl\n      }\n    }\n    allMarkdownRemark(sort: { order: DESC, fields: [frontmatter___date, frontmatter___title] }) {\n      edges {\n        node {\n          id\n          fields {\n            slug\n            path\n          }\n          frontmatter {\n            title\n            date\n          }\n        }\n      }\n    }\n  }\n`;\n/*\nexport const getPostList = graphql`\n  query getPostList {\n    site {\n      siteMetadata {\n        title\n        description\n        siteUrl\n      }\n    }\n    allMarkdownRemark(\n      sort: { \n        order: DESC,\n        fields: [frontmatter___date, frontmatter___title]\n      }\n    ) {\n      edges {\n        node {\n          id\n          fields {\n            slug\n          }\n          frontmatter {\n            title\n            summary\n            date\n            categories\n            thumbnail {\n              childImageSharp {\n                gatsbyImageData(width: 768, height: 400)\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`\n*/\n"],"names":["location","search","data","siteMetadata","site","edges","allMarkdownRemark","title","___EmotionJSX","Layout","Header","ArticleList","entries"],"sourceRoot":""}