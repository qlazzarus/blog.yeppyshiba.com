{"version":3,"file":"component---src-templates-article-template-tsx-aba61d0e50b8638c9f2b.js","mappings":"yKA8DA,UAhC2D,YAAkC,IAAtBA,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,YAC3E,EAIID,EAHFE,IACEC,YAAeC,EAFnB,EAEmBA,MAAOC,EAF1B,EAE0BA,MAAOC,EAFjC,EAEiCA,QAASC,EAF1C,EAE0CA,SAAUC,EAFpD,EAEoDA,KAAMC,EAF1D,EAE0DA,KAIlDC,EAAmBT,EAAnBS,KAAMC,EAAaV,EAAbU,SACRC,EAAU,GAIhB,OAHID,GAAUC,EAAQC,KAAKF,GACvBD,GAAME,EAAQC,KAAKH,IAGrBI,EAAAA,EAAAA,IAACC,EAAAA,GAAD,CAAQX,MAAOA,EAAOY,YAAaV,EAASW,SAAUR,IACpDK,EAAAA,EAAAA,IAACI,EAAAA,GAAD,CACEd,MAAOA,EACPC,MAAOA,EACPE,SAAUA,EACVC,KAAMA,EACNC,KAAMA,KAERK,EAAAA,EAAAA,IAACK,EAAAA,GAAD,CAAenB,KAAMA,IACpBY,EAAQQ,OAAS,IAChBN,EAAAA,EAAAA,IAAAA,EAAAA,SAAAA,MACEA,EAAAA,EAAAA,IAACO,EAAAA,GAAD,CAAajB,MAAK,YAClBU,EAAAA,EAAAA,IAACQ,EAAAA,GAAD,CAAaV,QAASA","sources":["webpack://yeppyshiba-blog/./src/templates/ArticleTemplate.tsx"],"sourcesContent":["import React, { FunctionComponent } from 'react';\nimport { graphql } from 'gatsby';\nimport { PaginationContext } from 'gatsby-awesome-pagination';\nimport { ArticleDetail, ArticleHeader, ArticleList } from '@/components/article';\nimport { Layout, StoryHeader } from '@/components/common';\nimport { ArticleListItemType } from '@/types';\n\ninterface CustomPaginationContext extends PaginationContext {\n  next: ArticleListItemType | null\n  previous: ArticleListItemType | null\n}\n\ninterface PostTemplateProps {\n  data: {\n    mdx: {\n      id: string;\n      body: string;\n      frontmatter: {\n        date: string;\n        image: string;\n        category: string;\n        summary: string;\n        tags: string[];\n        title: string;\n      };\n    };\n  };\n  pageContext: CustomPaginationContext\n};\n\nconst PostTemplate: FunctionComponent<PostTemplateProps> = function ({ data, pageContext }) {\n  const {\n    mdx: {\n      frontmatter: { title, image, summary, category, date, tags },\n    },\n  } = data;\n  \n  const { next, previous } = pageContext;\n  const entries = [];\n  if (previous) entries.push(previous);\n  if (next) entries.push(next);\n\n  return (\n    <Layout title={title} description={summary} keywords={tags}>\n      <ArticleHeader \n        title={title} \n        image={image}\n        category={category}\n        date={date}\n        tags={tags} \n      />\n      <ArticleDetail data={data} />\n      {entries.length > 0 && (\n        <>\n          <StoryHeader title={`Relate`} />\n          <ArticleList entries={entries} />\n        </>\n      )}\n    </Layout>\n  );\n};\n\nexport default PostTemplate;\n\nexport const queryMarkdownDataBySlug = graphql`\n  query getBlogEntry($id: String) {\n    mdx(id: { eq: $id }) {\n      id\n      body\n      frontmatter {\n        title\n        date\n        image\n        category\n        tags\n        summary\n      }\n    }\n  }\n`;\n"],"names":["data","pageContext","mdx","frontmatter","title","image","summary","category","date","tags","next","previous","entries","push","___EmotionJSX","Layout","description","keywords","ArticleHeader","ArticleDetail","length","StoryHeader","ArticleList"],"sourceRoot":""}